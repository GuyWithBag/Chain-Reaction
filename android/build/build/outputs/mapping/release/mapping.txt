# compiler: R8
# compiler_version: 3.2.60
# min_api: 24
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: cfc9321
# pg_map_hash: SHA-256 cfc9321dfd814c640fd7919e48b70e66997ba63b2d5ac32c15da3e0e1095ed40
androidx.activity.Cancellable -> androidx.activity.a:
    void cancel() -> f
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> f
    androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper -> b
    androidx.lifecycle.ViewModelStore mViewModelStore -> e
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> c
    androidx.activity.result.ActivityResultRegistry mActivityResultRegistry -> g
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> d
    1:1:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    3:3:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> <init>
    3:3:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> <init>
    3:3:void <init>():0 -> <init>
    4:4:void <init>():0:0 -> <init>
    5:5:void androidx.activity.contextaware.ContextAwareHelper.addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0:0 -> <init>
    5:5:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0 -> <init>
    5:5:void <init>():0 -> <init>
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> e
    androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> f
    0:65535:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> g
    0:65535:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    androidx.lifecycle.ViewModelStore getViewModelStore() -> h
    void access$001(androidx.activity.ComponentActivity) -> k
    void ensureViewModelStore() -> l
    1:1:void androidx.lifecycle.ViewTreeLifecycleOwner.set(android.view.View,androidx.lifecycle.LifecycleOwner):0:0 -> m
    1:1:void initViewTreeOwners():0 -> m
    2:2:void initViewTreeOwners():0:0 -> m
    3:3:void androidx.lifecycle.ViewTreeViewModelStoreOwner.set(android.view.View,androidx.lifecycle.ViewModelStoreOwner):0:0 -> m
    3:3:void initViewTreeOwners():0 -> m
    4:4:void initViewTreeOwners():0:0 -> m
    5:5:void androidx.savedstate.ViewTreeSavedStateRegistryOwner.set(android.view.View,androidx.savedstate.SavedStateRegistryOwner):0:0 -> m
    5:5:void initViewTreeOwners():0 -> m
    1:1:void androidx.activity.contextaware.ContextAwareHelper.dispatchOnContextAvailable(android.content.Context):0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    1:1:void androidx.tracing.TraceApi18Impl.beginSection(java.lang.String):0:0 -> reportFullyDrawn
    1:1:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> reportFullyDrawn
    1:1:void reportFullyDrawn():0 -> reportFullyDrawn
    2:2:void reportFullyDrawn():0:0 -> reportFullyDrawn
    3:3:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> reportFullyDrawn
    3:3:void androidx.tracing.Trace.endSection():0 -> reportFullyDrawn
    3:3:void reportFullyDrawn():0 -> reportFullyDrawn
    4:4:void reportFullyDrawn():0:0 -> reportFullyDrawn
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$a:
    androidx.activity.ComponentActivity this$0 -> a
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$b:
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    androidx.activity.ComponentActivity this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void androidx.activity.contextaware.ContextAwareHelper.clearAvailableContext():0:0 -> h
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    androidx.activity.ComponentActivity this$0 -> a
    1:1:androidx.lifecycle.Lifecycle androidx.activity.ComponentActivity.getLifecycle():0:0 -> h
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
androidx.activity.ComponentActivity$6 -> androidx.activity.ComponentActivity$c:
    androidx.activity.ComponentActivity this$0 -> a
    1:1:androidx.activity.result.ActivityResultRegistry androidx.activity.ComponentActivity.access$100(androidx.activity.ComponentActivity):0:0 -> a
    1:1:android.os.Bundle saveState():0 -> a
    2:2:android.os.Bundle saveState():0:0 -> a
    3:3:void androidx.activity.result.ActivityResultRegistry.onSaveInstanceState(android.os.Bundle):0:0 -> a
    3:3:android.os.Bundle saveState():0 -> a
androidx.activity.ComponentActivity$7 -> androidx.activity.ComponentActivity$d:
    androidx.activity.ComponentActivity this$0 -> a
    1:1:androidx.savedstate.SavedStateRegistry androidx.activity.ComponentActivity.getSavedStateRegistry():0:0 -> a
    1:1:void onContextAvailable(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> a
    2:2:androidx.savedstate.SavedStateRegistry androidx.activity.ComponentActivity.getSavedStateRegistry():0 -> a
    2:2:void onContextAvailable(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void onContextAvailable(android.content.Context):0:0 -> a
    4:4:androidx.activity.result.ActivityResultRegistry androidx.activity.ComponentActivity.access$100(androidx.activity.ComponentActivity):0:0 -> a
    4:4:void onContextAvailable(android.content.Context):0 -> a
    5:5:void onContextAvailable(android.content.Context):0:0 -> a
    6:6:void androidx.activity.result.ActivityResultRegistry.onRestoreInstanceState(android.os.Bundle):0:0 -> a
    6:6:void onContextAvailable(android.content.Context):0 -> a
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$e:
    androidx.lifecycle.ViewModelStore viewModelStore -> a
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    java.lang.reflect.Field sServedViewField -> d
    java.lang.reflect.Field sNextServedViewField -> e
    java.lang.reflect.Field sHField -> c
    android.app.Activity mActivity -> a
    int sReflectedFieldsInitialized -> b
    1:1:void initializeReflectiveFields():0:0 -> h
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
androidx.activity.OnBackPressedCallback -> androidx.activity.b:
    boolean mEnabled -> a
    java.util.concurrent.CopyOnWriteArrayList mCancellables -> b
    void handleOnBackPressed() -> a
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    java.lang.Runnable mFallbackOnBackPressed -> a
    java.util.ArrayDeque mOnBackPressedCallbacks -> b
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> a
    1:1:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0:0 -> a
    3:3:void androidx.activity.OnBackPressedCallback.addCancellable(androidx.activity.Cancellable):0:0 -> a
    3:3:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:boolean androidx.activity.OnBackPressedCallback.isEnabled():0:0 -> b
    1:1:void onBackPressed():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onBackPressed():0:0 -> b
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    androidx.lifecycle.Lifecycle mLifecycle -> a
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> b
    androidx.activity.OnBackPressedDispatcher this$0 -> d
    androidx.activity.Cancellable mCurrentCancellable -> c
    1:1:void androidx.activity.OnBackPressedCallback.removeCancellable(androidx.activity.Cancellable):0:0 -> f
    1:1:void cancel():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void cancel():0:0 -> f
    1:1:androidx.activity.Cancellable androidx.activity.OnBackPressedDispatcher.addCancellableCallback(androidx.activity.OnBackPressedCallback):0:0 -> h
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.activity.OnBackPressedCallback.addCancellable(androidx.activity.Cancellable):0:0 -> h
    2:2:androidx.activity.Cancellable androidx.activity.OnBackPressedDispatcher.addCancellableCallback(androidx.activity.OnBackPressedCallback):0 -> h
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$a:
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> a
    androidx.activity.OnBackPressedDispatcher this$0 -> b
    0:65535:void androidx.activity.OnBackPressedCallback.removeCancellable(androidx.activity.Cancellable):0:0 -> f
    0:65535:void cancel():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.activity.OnBackPressedDispatcherOwner -> androidx.activity.c:
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> e
androidx.activity.contextaware.ContextAwareHelper -> a.a:
    android.content.Context mContext -> b
    java.util.Set mListeners -> a
androidx.activity.contextaware.OnContextAvailableListener -> a.b:
    void onContextAvailable(android.content.Context) -> a
androidx.activity.result.ActivityResult -> androidx.activity.result.b:
    android.content.Intent mData -> b
    int mResultCode -> a
    1:1:java.lang.String toString():0:0 -> toString
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":5,"2":6,"3":7}}
    5:5:java.lang.String toString():0:0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
    7:7:java.lang.String toString():0:0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:java.lang.String resultCodeToString(int):0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
androidx.activity.result.ActivityResult$$ExternalSyntheticOutline0 -> androidx.activity.result.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String org.godotengine.godot.io.file.FileAccessFlags.getMode() -> a
    boolean org.godotengine.godot.io.file.FileAccessFlags.shouldTruncate() -> b
    java.lang.String org.godotengine.godot.xr.XRMode$EnumUnboxingLocalUtility.getInputFallbackMapping(int) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:3:java.lang.StringBuilder androidx.activity.result.ActivityResult$$InternalSyntheticOutline$83$0c3753bdf1e06da235758e36ff9e2b0fc8fde65ae16262949f18f150646ad2eb$0.m(java.lang.String):0:2 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.outline"}
    1:1:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> e
    1:1:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:java.lang.String kotlin.jvm.internal.Intrinsics.createParameterIsNullExceptionMessage(java.lang.String):0:0 -> e
    2:2:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0 -> e
    2:2:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> e
    3:3:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.b$a:
    0:65535:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    0:65535:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    0:65535:androidx.activity.result.ActivityResult[] newArray(int):0:0 -> newArray
    0:65535:java.lang.Object[] newArray(int):0 -> newArray
androidx.activity.result.ActivityResultCallback -> androidx.activity.result.c:
    void onActivityResult(java.lang.Object) -> a
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.d:
    0:65535:void $r8$init$synthetic():0:0 -> <init>
    0:65535:void $r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.fragment.app.FragmentContainer.onFindViewById(int) -> c
    boolean androidx.fragment.app.FragmentContainer.onHasView() -> d
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.e:
    java.util.Map mRcToKey -> b
    java.util.Map mKeyToRc -> c
    java.util.Map mKeyToLifecycleContainers -> d
    java.util.ArrayList mLaunchedKeys -> e
    java.util.Random mRandom -> a
    android.os.Bundle mPendingResults -> h
    java.util.Map mKeyToCallback -> f
    java.util.Map mParsedPendingResults -> g
    void bindRcKey(int,java.lang.String) -> a
    0:65535:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract):0:0 -> b
    0:65535:boolean dispatchResult(int,int,android.content.Intent):0 -> b
    1:1:int registerKey(java.lang.String):0:0 -> c
    1:1:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> c
    2:2:int generateRandomNumber():0:0 -> c
    2:2:int registerKey(java.lang.String):0 -> c
    2:2:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> c
    3:3:int registerKey(java.lang.String):0:0 -> c
    3:3:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> c
    4:4:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0:0 -> c
    5:5:int androidx.activity.result.ActivityResult.getResultCode():0:0 -> c
    5:5:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> c
    6:6:android.content.Intent androidx.activity.result.ActivityResult.getData():0:0 -> c
    6:6:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> c
    7:7:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0:0 -> c
    0:65535:void androidx.activity.result.ActivityResultRegistry$LifecycleContainer.clearObservers():0:0 -> d
    0:65535:void unregister(java.lang.String):0 -> d
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.e$a:
    java.lang.String val$key -> a
    androidx.activity.result.ActivityResultRegistry this$0 -> b
    void unregister() -> i
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.e$b:
    androidx.activity.result.ActivityResultCallback mCallback -> a
    androidx.activity.result.contract.ActivityResultContract mContract -> b
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.e$c:
androidx.activity.result.ActivityResultRegistryOwner -> androidx.activity.result.f:
    androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> f
androidx.activity.result.contract.ActivityResultContract -> b.a:
    java.lang.Object parseResult(int,android.content.Intent) -> a
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> b.b:
    int $r8$classId -> a
    0:65535:void androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions.<init>():0:0 -> <init>
    0:65535:void $r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Map androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions.parseResult(int,android.content.Intent):0:0 -> a
    1:1:java.lang.Object androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions.parseResult(int,android.content.Intent):0 -> a
    1:1:java.lang.Object parseResult$bridge(int,android.content.Intent):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:androidx.activity.result.ActivityResult androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult.parseResult(int,android.content.Intent):0:0 -> a
    2:2:java.lang.Object androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult.parseResult(int,android.content.Intent):0 -> a
    2:2:java.lang.Object parseResult$bridge(int,android.content.Intent):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.ArchTaskExecutor -> c.a:
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    androidx.arch.core.executor.ArchTaskExecutor getInstance() -> i
    boolean isMainThread() -> j
androidx.arch.core.executor.DefaultTaskExecutor -> c.b:
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    boolean isMainThread() -> i
androidx.arch.core.executor.DefaultTaskExecutor$1 -> c.b$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
androidx.arch.core.internal.FastSafeIterableMap -> d.a:
    java.util.HashMap mHashMap -> e
    androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> d
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> e
androidx.arch.core.internal.SafeIterableMap -> d.b:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> b
    int mSize -> d
    java.util.WeakHashMap mIterators -> c
    androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> b
    androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> c
    java.lang.Object remove(java.lang.Object) -> d
    1:1:int androidx.arch.core.internal.SafeIterableMap.size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:int androidx.arch.core.internal.SafeIterableMap.size():0:0 -> equals
    2:2:boolean equals(java.lang.Object):0 -> equals
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.String toString():0:0 -> toString
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:java.lang.String toString():0:0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:java.lang.String toString():0:0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> d.b$a:
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> d.b$b:
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$Entry -> d.b$c:
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> d
    java.lang.Object mValue -> b
    java.lang.Object mKey -> a
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> d.b$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> a
    androidx.arch.core.internal.SafeIterableMap this$0 -> c
    boolean mBeforeStart -> b
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    0:65535:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions.next():0:0 -> next
    0:65535:java.lang.Object next():0 -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> d.b$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> b
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry androidx.arch.core.internal.SafeIterableMap$ListIterator.nextNode():0:0 -> a
    1:1:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0 -> a
    2:2:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
    1:1:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap$ListIterator.next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
    2:2:androidx.arch.core.internal.SafeIterableMap$Entry androidx.arch.core.internal.SafeIterableMap$ListIterator.nextNode():0:0 -> next
    2:2:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap$ListIterator.next():0 -> next
    2:2:java.lang.Object next():0 -> next
    3:3:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap$ListIterator.next():0:0 -> next
    3:3:java.lang.Object next():0 -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> d.b$f:
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
androidx.collection.ArrayMap -> e.a:
    androidx.collection.MapCollections mCollections -> h
    0:65535:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    0:65535:java.util.Set entrySet():0 -> entrySet
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    0:65535:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    0:65535:java.util.Set keySet():0 -> keySet
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    androidx.collection.MapCollections getCollection() -> l
    0:65535:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    0:65535:java.util.Collection values():0 -> values
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.collection.ArrayMap$1 -> e.a$a:
    androidx.collection.ArrayMap this$0 -> d
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
androidx.collection.MapCollections -> e.b:
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> j
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> k
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> l
androidx.collection.MapCollections$ArrayIterator -> e.b$a:
    androidx.collection.MapCollections this$0 -> e
    int mSize -> b
    int mIndex -> c
    int mOffset -> a
    boolean mCanRemove -> d
androidx.collection.MapCollections$EntrySet -> e.b$b:
    androidx.collection.MapCollections this$0 -> a
    0:65535:boolean androidx.collection.MapCollections$EntrySet.add(java.util.Map$Entry):0:0 -> add
    0:65535:boolean add(java.lang.Object):0 -> add
androidx.collection.MapCollections$KeySet -> e.b$c:
    androidx.collection.MapCollections this$0 -> a
    0:65535:boolean androidx.collection.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    0:65535:boolean containsAll(java.util.Collection):0 -> containsAll
    0:65535:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    0:65535:boolean removeAll(java.util.Collection):0 -> removeAll
    1:1:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    1:1:java.lang.Object[] toArray():0 -> toArray
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.collection.MapCollections$MapIterator -> e.b$d:
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
    int mEnd -> a
    0:65535:java.util.Map$Entry androidx.collection.MapCollections$MapIterator.next():0:0 -> next
    0:65535:java.lang.Object next():0 -> next
androidx.collection.MapCollections$ValuesCollection -> e.b$e:
    androidx.collection.MapCollections this$0 -> a
    1:1:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    1:1:java.lang.Object[] toArray():0 -> toArray
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.collection.SimpleArrayMap -> e.c:
    java.lang.Object[] mBaseCache -> d
    java.lang.Object[] mArray -> b
    int mTwiceBaseCacheSize -> g
    int[] mHashes -> a
    int mBaseCacheSize -> e
    int mSize -> c
    java.lang.Object[] mTwiceBaseCache -> f
    void allocArrays(int) -> a
    void ensureCapacity(int) -> b
    void freeArrays(int[],java.lang.Object[],int) -> c
    1:1:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> d
    1:1:int indexOf(java.lang.Object,int):0 -> d
    2:2:int indexOf(java.lang.Object,int):0:0 -> d
    3:3:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> d
    3:3:int indexOf(java.lang.Object,int):0 -> d
    int indexOfKey(java.lang.Object) -> e
    1:1:int androidx.collection.SimpleArrayMap.size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:int androidx.collection.SimpleArrayMap.size():0:0 -> equals
    2:2:boolean equals(java.lang.Object):0 -> equals
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:boolean equals(java.lang.Object):0:0 -> equals
    4:4:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> equals
    4:4:boolean equals(java.lang.Object):0 -> equals
    5:5:boolean equals(java.lang.Object):0:0 -> equals
    6:6:int androidx.collection.SimpleArrayMap.size():0:0 -> equals
    6:6:boolean equals(java.lang.Object):0 -> equals
    7:7:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> f
    1:1:int indexOfNull():0 -> f
    2:2:int indexOfNull():0:0 -> f
    3:3:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> f
    3:3:int indexOfNull():0 -> f
    int indexOfValue(java.lang.Object) -> g
    java.lang.Object keyAt(int) -> h
    java.lang.Object removeAt(int) -> i
    java.lang.Object setValueAt(int,java.lang.Object) -> j
    java.lang.Object valueAt(int) -> k
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> putIfAbsent
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0 -> putIfAbsent
    2:2:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
androidx.collection.SparseArrayCompat -> e.d:
    java.lang.Object[] mValues -> b
    java.lang.Object DELETED -> d
    int[] mKeys -> a
    int mSize -> c
    1:1:void androidx.collection.SparseArrayCompat.<init>(int):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:int androidx.collection.ContainerHelpers.idealIntArraySize(int):0:0 -> <init>
    2:2:void androidx.collection.SparseArrayCompat.<init>(int):0 -> <init>
    2:2:void <init>():0 -> <init>
    3:3:void androidx.collection.SparseArrayCompat.<init>(int):0:0 -> <init>
    3:3:void <init>():0 -> <init>
    int size() -> a
    java.lang.Object valueAt(int) -> b
    0:65535:androidx.collection.SparseArrayCompat androidx.collection.SparseArrayCompat.clone():0:0 -> clone
    0:65535:java.lang.Object clone():0 -> clone
    1:1:int androidx.collection.SparseArrayCompat.keyAt(int):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
androidx.core.app.ComponentActivity -> g.a:
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> a
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    1:1:boolean androidx.core.view.KeyEventDispatcher.dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    2:2:boolean androidx.core.view.KeyEventDispatcher.activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0:0 -> dispatchKeyEvent
    2:2:boolean androidx.core.view.KeyEventDispatcher.dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> dispatchKeyEvent
    2:2:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    3:3:boolean androidx.core.view.KeyEventDispatcher.actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent):0:0 -> dispatchKeyEvent
    3:3:boolean androidx.core.view.KeyEventDispatcher.activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0 -> dispatchKeyEvent
    3:3:boolean androidx.core.view.KeyEventDispatcher.dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> dispatchKeyEvent
    3:3:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    4:4:boolean androidx.core.view.KeyEventDispatcher.activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0:0 -> dispatchKeyEvent
    4:4:boolean androidx.core.view.KeyEventDispatcher.dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> dispatchKeyEvent
    4:4:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> j
    1:1:void androidx.lifecycle.LifecycleRegistry.markState(androidx.lifecycle.Lifecycle$State):0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    java.lang.Object checkCompatWrapper(java.lang.Object) -> a
androidx.core.app.CoreComponentFactory$CompatWrapped -> androidx.core.app.CoreComponentFactory$a:
    java.lang.Object getWrapper() -> a
androidx.core.app.NotificationCompat$Action -> g.b:
androidx.core.app.NotificationCompat$Builder -> g.c:
    android.content.Context mContext -> a
    boolean mAllowSystemGeneratedContextualActions -> o
    boolean mShowWhen -> i
    int mProgressMax -> j
    int mProgress -> k
    int mPriority -> h
    java.lang.String mCategory -> m
    boolean mProgressIndeterminate -> l
    java.lang.CharSequence mContentTitle -> d
    java.lang.CharSequence mContentText -> e
    android.app.Notification mNotification -> p
    java.lang.CharSequence mContentInfo -> g
    java.util.ArrayList mInvisibleActions -> c
    java.util.ArrayList mActions -> b
    android.app.PendingIntent mContentIntent -> f
    android.os.Bundle mExtras -> n
    java.util.ArrayList mPeople -> q
    0:65535:void androidx.core.app.NotificationCompat$Builder.<init>(android.content.Context,java.lang.String):0:0 -> <init>
    0:65535:void <init>(android.content.Context):0 -> <init>
    1:1:android.app.Notification androidx.core.app.NotificationCompatBuilder.build():0:0 -> a
    1:1:android.app.Notification build():0 -> a
    2:2:android.app.Notification androidx.core.app.NotificationCompatBuilder.buildInternal():0:0 -> a
    2:2:android.app.Notification androidx.core.app.NotificationCompatBuilder.build():0 -> a
    2:2:android.app.Notification build():0 -> a
    3:3:android.app.Notification androidx.core.app.NotificationCompatBuilder.build():0:0 -> a
    3:3:android.app.Notification build():0 -> a
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> b
    androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> c
    androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> d
    androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> e
androidx.core.app.NotificationCompatBuilder -> g.d:
    androidx.core.app.NotificationCompat$Builder mBuilderCompat -> b
    java.util.List mActionExtrasList -> c
    android.os.Bundle mExtras -> d
    android.app.Notification$Builder mBuilder -> a
    1:1:void androidx.core.app.NotificationCompatBuilder.addAction(androidx.core.app.NotificationCompat$Action):0:0 -> <init>
    1:1:void <init>(androidx.core.app.NotificationCompat$Builder):0 -> <init>
    2:2:androidx.core.graphics.drawable.IconCompat androidx.core.app.NotificationCompat$Action.getIconCompat():0:0 -> <init>
    2:2:void androidx.core.app.NotificationCompatBuilder.addAction(androidx.core.app.NotificationCompat$Action):0 -> <init>
    2:2:void <init>(androidx.core.app.NotificationCompat$Builder):0 -> <init>
    3:3:void androidx.core.app.NotificationCompatBuilder.addAction(androidx.core.app.NotificationCompat$Action):0:0 -> <init>
    3:3:void <init>(androidx.core.app.NotificationCompat$Builder):0 -> <init>
    4:4:void <init>(androidx.core.app.NotificationCompat$Builder):0:0 -> <init>
    5:5:android.os.Bundle androidx.core.app.NotificationCompat$Builder.getExtras():0:0 -> <init>
    5:5:void <init>(androidx.core.app.NotificationCompat$Builder):0 -> <init>
    6:6:void <init>(androidx.core.app.NotificationCompat$Builder):0:0 -> <init>
    7:7:android.os.Bundle androidx.core.app.NotificationCompatJellybean.getBundleForAction(androidx.core.app.NotificationCompat$Action):0:0 -> <init>
    7:7:void <init>(androidx.core.app.NotificationCompat$Builder):0 -> <init>
    8:8:void <init>(androidx.core.app.NotificationCompat$Builder):0:0 -> <init>
    9:9:android.os.Bundle androidx.core.app.NotificationCompat$Builder.getExtras():0:0 -> <init>
    9:9:void <init>(androidx.core.app.NotificationCompat$Builder):0 -> <init>
    10:10:void <init>(androidx.core.app.NotificationCompat$Builder):0:0 -> <init>
androidx.core.app.NotificationCompatJellybean -> g.e:
    java.lang.Object sExtrasLock -> a
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
    android.app.PendingIntent mActionIntent -> d
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    1:1:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    1:1:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    3:3:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    3:3:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    4:4:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    5:5:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    5:5:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    6:6:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    7:7:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    7:7:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    8:8:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    9:9:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    9:9:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    10:10:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    1:1:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> write
    1:1:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    2:2:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    3:3:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    3:3:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    4:4:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    5:5:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    5:5:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    6:6:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    7:7:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    7:7:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    8:8:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    9:9:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    9:9:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.content.ContextCompat -> h.a:
    int checkSelfPermission(android.content.Context,java.lang.String) -> a
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    androidx.core.content.FileProvider$PathStrategy mStrategy -> a
    java.io.File DEVICE_ROOT -> c
    java.util.HashMap sCache -> d
    java.lang.String[] COLUMNS -> b
    1:1:java.io.File[] androidx.core.content.ContextCompat.getExternalFilesDirs(android.content.Context,java.lang.String):0:0 -> a
    1:1:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String):0 -> a
    2:2:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String):0:0 -> a
    3:3:java.io.File[] androidx.core.content.ContextCompat.getExternalCacheDirs(android.content.Context):0:0 -> a
    3:3:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String):0 -> a
    4:4:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String):0:0 -> a
    5:5:java.io.File buildPath(java.io.File,java.lang.String[]):0:0 -> a
    5:5:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String):0 -> a
    6:6:void androidx.core.content.FileProvider$SimplePathStrategy.addRoot(java.lang.String,java.io.File):0:0 -> a
    6:6:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String):0 -> a
    7:7:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String):0:0 -> a
    1:1:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String):0:0 -> attachInfo
    1:1:void attachInfo(android.content.Context,android.content.pm.ProviderInfo):0 -> attachInfo
    2:2:void attachInfo(android.content.Context,android.content.pm.ProviderInfo):0:0 -> attachInfo
    3:3:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String):0:0 -> attachInfo
    3:3:void attachInfo(android.content.Context,android.content.pm.ProviderInfo):0 -> attachInfo
    4:4:void attachInfo(android.content.Context,android.content.pm.ProviderInfo):0:0 -> attachInfo
    1:1:int modeToMode(java.lang.String):0:0 -> openFile
    1:1:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String):0 -> openFile
    2:2:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String):0:0 -> openFile
    1:1:java.lang.String[] copyOf(java.lang.String[],int):0:0 -> query
    1:1:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0 -> query
    2:2:java.lang.Object[] copyOf(java.lang.Object[],int):0:0 -> query
    2:2:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0 -> query
    3:3:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0:0 -> query
androidx.core.content.FileProvider$PathStrategy -> androidx.core.content.FileProvider$a:
    java.io.File getFileForUri(android.net.Uri) -> a
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$b:
    java.util.HashMap mRoots -> a
    java.io.File getFileForUri(android.net.Uri) -> a
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> j
    java.lang.String mTintModeStr -> i
    android.graphics.PorterDuff$Mode mTintMode -> h
    android.os.Parcelable mParcelable -> d
    java.lang.Object mObj1 -> b
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    int mInt1 -> e
    byte[] mData -> c
    int mType -> a
    1:1:java.lang.String getResPackage(android.graphics.drawable.Icon):0:0 -> a
    1:1:java.lang.String getResPackage():0 -> a
    2:2:java.lang.String getResPackage():0:0 -> a
    1:1:int getResId():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:int getResId(android.graphics.drawable.Icon):0:0 -> toString
    2:2:int getResId():0 -> toString
    2:2:java.lang.String toString():0 -> toString
    3:3:int getResId():0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:int getResId():0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    1:1:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0:0 -> read
    1:1:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    2:2:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    3:3:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    3:3:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    4:4:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    5:5:void androidx.core.graphics.drawable.IconCompat.onPostParceling():0:0 -> read
    5:5:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    1:1:void androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    1:1:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    3:3:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0:0 -> write
    3:3:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    4:4:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    5:5:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    5:5:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.os.CancellationSignal -> i.a:
    boolean mIsCanceled -> a
    androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener -> b
    boolean mCancelInProgress -> c
    void cancel() -> a
    1:1:void androidx.core.os.CancellationSignal.waitForCancelFinishedLocked():0:0 -> b
    1:1:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener):0 -> b
    2:2:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener):0:0 -> b
androidx.core.os.CancellationSignal$OnCancelListener -> i.a$a:
    void onCancel() -> a
androidx.core.view.KeyEventDispatcher -> j.a:
    boolean sActionBarFieldsFetched -> a
    java.lang.reflect.Method sActionBarOnMenuKeyMethod -> b
    1:1:boolean androidx.core.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> a
    1:1:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    2:2:androidx.core.view.ViewCompat$UnhandledKeyEventManager androidx.core.view.ViewCompat$UnhandledKeyEventManager.at(android.view.View):0:0 -> a
    2:2:boolean androidx.core.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    2:2:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    3:3:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0:0 -> a
    3:3:boolean androidx.core.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    3:3:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    4:4:android.util.SparseArray androidx.core.view.ViewCompat$UnhandledKeyEventManager.getCapturedKeys():0:0 -> a
    4:4:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0 -> a
    4:4:boolean androidx.core.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    4:4:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    5:5:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0:0 -> a
    5:5:boolean androidx.core.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    5:5:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    6:6:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> a
    6:6:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0 -> a
    6:6:boolean androidx.core.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    6:6:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    7:7:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0:0 -> a
    7:7:boolean androidx.core.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    7:7:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
androidx.core.view.OneShotPreDrawListener -> j.b:
    java.lang.Runnable mRunnable -> c
    android.view.View mView -> a
    android.view.ViewTreeObserver mViewTreeObserver -> b
    androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> a
    void removeListener() -> b
androidx.core.view.ViewCompat -> j.c:
    int $r8$clinit -> a
    0:65535:void androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager.<init>():0:0 -> <clinit>
    0:65535:void <clinit>():0 -> <clinit>
    1:1:androidx.core.view.ViewCompat$UnhandledKeyEventManager androidx.core.view.ViewCompat$UnhandledKeyEventManager.at(android.view.View):0:0 -> a
    1:1:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> a
    2:2:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0:0 -> a
    2:2:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> a
    3:3:void androidx.core.view.ViewCompat$UnhandledKeyEventManager.recalcViewsWithUnhandled():0:0 -> a
    3:3:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0 -> a
    3:3:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> a
    4:4:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0:0 -> a
    4:4:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> a
    5:5:android.util.SparseArray androidx.core.view.ViewCompat$UnhandledKeyEventManager.getCapturedKeys():0:0 -> a
    5:5:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0 -> a
    5:5:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> a
    6:6:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0:0 -> a
    6:6:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> a
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> j.c$a:
    boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> a
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> j.c$b:
    android.util.SparseArray mCapturedKeys -> b
    java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent -> c
    java.util.ArrayList sViewsWithListeners -> d
    java.util.WeakHashMap mViewsContainingListeners -> a
    android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> a
    boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> b
androidx.core.view.WindowInsetsCompat -> j.d:
    java.lang.Object mInsets -> a
    androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> a
    0:65535:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    0:65535:boolean equals(java.lang.Object):0 -> equals
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.a:
    androidx.fragment.app.FragmentManager mManager -> p
    int mIndex -> q
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.FragmentManager):0 -> <init>
    2:2:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> <init>
    2:2:void <init>(androidx.fragment.app.FragmentManager):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
    0:65535:void androidx.fragment.app.FragmentManager.addBackStackState(androidx.fragment.app.BackStackRecord):0:0 -> a
    0:65535:boolean generateOps(java.util.ArrayList,java.util.ArrayList):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void bumpBackStackNesting(int):0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void bumpBackStackNesting(int):0:0 -> c
    4:4:void bumpBackStackNesting(int):0:0 -> c
    5:5:void bumpBackStackNesting(int):0:0 -> c
    2:2:void bumpBackStackNesting(int):0:0 -> c
    1:1:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.disallowAddToBackStack():0:0 -> d
    1:1:void commitNowAllowingStateLoss():0 -> d
    2:2:void commitNowAllowingStateLoss():0:0 -> d
    3:3:void androidx.fragment.app.FragmentManager.execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean):0:0 -> d
    3:3:void commitNowAllowingStateLoss():0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.disallowAddToBackStack():0:0 -> d
    4:4:void commitNowAllowingStateLoss():0 -> d
    1:1:void androidx.fragment.app.FragmentTransaction.doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> e
    1:1:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0 -> e
    2:2:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> e
    3:3:void androidx.fragment.app.FragmentTransaction.doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> e
    3:3:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0 -> e
    4:4:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":6,"2":7,"3":8}}
    6:6:void androidx.fragment.app.FragmentTransaction.doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> e
    6:6:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0 -> e
    7:7:void androidx.fragment.app.FragmentTransaction.doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> e
    7:7:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0 -> e
    8:8:void androidx.fragment.app.FragmentTransaction.doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> e
    8:8:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0 -> e
    5:5:void androidx.fragment.app.FragmentTransaction.doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> e
    5:5:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0 -> e
    1:1:void dump(java.lang.String,java.io.PrintWriter,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void dump(java.lang.String,java.io.PrintWriter,boolean):0:0 -> f
    4:4:void dump(java.lang.String,java.io.PrintWriter,boolean):0:0 -> f
    5:5:void dump(java.lang.String,java.io.PrintWriter,boolean):0:0 -> f
    2:2:void dump(java.lang.String,java.io.PrintWriter,boolean):0:0 -> f
    1:1:void androidx.fragment.app.Fragment.setNextTransition(int):0:0 -> g
    1:1:void executeOps():0 -> g
    2:2:void executeOps():0:0 -> g
    3:3:void androidx.fragment.app.Fragment.setSharedElementNames(java.util.ArrayList,java.util.ArrayList):0:0 -> g
    3:3:void executeOps():0 -> g
    4:4:void executeOps():0:0 -> g
    5:5:void executeOps():0:0 -> g
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":7,"2":8,"3":9}}
    7:7:void executeOps():0:0 -> g
    8:8:void executeOps():0:0 -> g
    9:9:void executeOps():0:0 -> g
    6:6:void executeOps():0:0 -> g
    1:1:void androidx.fragment.app.Fragment.setNextTransition(int):0:0 -> h
    1:1:void executePopOps(boolean):0 -> h
    2:2:void executePopOps(boolean):0:0 -> h
    3:3:void androidx.fragment.app.Fragment.setSharedElementNames(java.util.ArrayList,java.util.ArrayList):0:0 -> h
    3:3:void executePopOps(boolean):0 -> h
    4:4:void executePopOps(boolean):0:0 -> h
    5:5:void executePopOps(boolean):0:0 -> h
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":7,"2":8,"3":9}}
    7:7:void executePopOps(boolean):0:0 -> h
    8:8:void executePopOps(boolean):0:0 -> h
    9:9:void executePopOps(boolean):0:0 -> h
    6:6:void executePopOps(boolean):0:0 -> h
androidx.fragment.app.BackStackState -> androidx.fragment.app.b:
    java.lang.String mName -> f
    boolean mReorderingAllowed -> n
    int mBreadCrumbShortTitleRes -> j
    int mBreadCrumbTitleRes -> h
    int mIndex -> g
    int[] mOps -> a
    int mTransition -> e
    java.util.ArrayList mFragmentWhos -> b
    java.lang.CharSequence mBreadCrumbTitleText -> i
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    java.util.ArrayList mSharedElementTargetNames -> m
    java.util.ArrayList mSharedElementSourceNames -> l
    int[] mOldMaxLifecycleStates -> c
    int[] mCurrentMaxLifecycleStates -> d
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.b$a:
    0:65535:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    0:65535:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    0:65535:androidx.fragment.app.BackStackState[] newArray(int):0:0 -> newArray
    0:65535:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.c:
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    1:1:void executeOperations(java.util.List,boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void executeOperations(java.util.List,boolean):0:0 -> b
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    3:3:void executeOperations(java.util.List,boolean):0 -> b
    4:4:void executeOperations(java.util.List,boolean):0:0 -> b
    5:5:void androidx.fragment.app.SpecialEffectsController$Operation.markStartedSpecialEffect(androidx.core.os.CancellationSignal):0:0 -> b
    5:5:void executeOperations(java.util.List,boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void executeOperations(java.util.List,boolean):0:0 -> b
    7:7:void androidx.fragment.app.SpecialEffectsController$Operation.markStartedSpecialEffect(androidx.core.os.CancellationSignal):0:0 -> b
    7:7:void executeOperations(java.util.List,boolean):0 -> b
    8:8:void executeOperations(java.util.List,boolean):0:0 -> b
    9:9:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    9:9:void executeOperations(java.util.List,boolean):0 -> b
    10:10:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0:0 -> b
    10:10:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    10:10:void executeOperations(java.util.List,boolean):0 -> b
    11:11:void executeOperations(java.util.List,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":129,"2":130,"3":131}}
    129:129:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0:0 -> b
    129:129:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    129:129:void executeOperations(java.util.List,boolean):0 -> b
    130:130:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0:0 -> b
    130:130:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    130:130:void executeOperations(java.util.List,boolean):0 -> b
    131:131:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0:0 -> b
    131:131:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    131:131:void executeOperations(java.util.List,boolean):0 -> b
    12:12:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    12:12:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0 -> b
    12:12:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    12:12:void executeOperations(java.util.List,boolean):0 -> b
    13:13:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    13:13:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0 -> b
    13:13:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    13:13:void executeOperations(java.util.List,boolean):0 -> b
    14:14:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0:0 -> b
    14:14:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    14:14:void executeOperations(java.util.List,boolean):0 -> b
    15:15:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    15:15:void executeOperations(java.util.List,boolean):0 -> b
    16:16:void executeOperations(java.util.List,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":132,"2":133,"3":134}}
    132:132:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    132:132:void executeOperations(java.util.List,boolean):0 -> b
    133:133:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    133:133:void executeOperations(java.util.List,boolean):0 -> b
    134:134:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    134:134:void executeOperations(java.util.List,boolean):0 -> b
    17:17:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    17:17:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    17:17:void executeOperations(java.util.List,boolean):0 -> b
    18:18:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    18:18:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    18:18:void executeOperations(java.util.List,boolean):0 -> b
    19:19:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    19:19:void executeOperations(java.util.List,boolean):0 -> b
    20:20:java.lang.Object androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getTransition():0:0 -> b
    20:20:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    20:20:void executeOperations(java.util.List,boolean):0 -> b
    21:21:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    21:21:void executeOperations(java.util.List,boolean):0 -> b
    22:22:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    22:22:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    22:22:void executeOperations(java.util.List,boolean):0 -> b
    23:23:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    23:23:void executeOperations(java.util.List,boolean):0 -> b
    24:24:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    24:24:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    24:24:void executeOperations(java.util.List,boolean):0 -> b
    25:25:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    25:25:void executeOperations(java.util.List,boolean):0 -> b
    26:26:boolean androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.hasSharedElementTransition():0:0 -> b
    26:26:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    26:26:void executeOperations(java.util.List,boolean):0 -> b
    27:27:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    27:27:void executeOperations(java.util.List,boolean):0 -> b
    28:28:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    28:28:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    28:28:void executeOperations(java.util.List,boolean):0 -> b
    29:29:java.util.ArrayList androidx.fragment.app.Fragment.getSharedElementSourceNames():0:0 -> b
    29:29:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    29:29:void executeOperations(java.util.List,boolean):0 -> b
    30:30:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    30:30:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    30:30:void executeOperations(java.util.List,boolean):0 -> b
    31:31:java.util.ArrayList androidx.fragment.app.Fragment.getSharedElementSourceNames():0:0 -> b
    31:31:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    31:31:void executeOperations(java.util.List,boolean):0 -> b
    32:32:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    32:32:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    32:32:void executeOperations(java.util.List,boolean):0 -> b
    33:33:java.util.ArrayList androidx.fragment.app.Fragment.getSharedElementTargetNames():0:0 -> b
    33:33:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    33:33:void executeOperations(java.util.List,boolean):0 -> b
    34:34:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    34:34:void executeOperations(java.util.List,boolean):0 -> b
    35:35:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    35:35:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    35:35:void executeOperations(java.util.List,boolean):0 -> b
    36:36:java.util.ArrayList androidx.fragment.app.Fragment.getSharedElementTargetNames():0:0 -> b
    36:36:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    36:36:void executeOperations(java.util.List,boolean):0 -> b
    37:37:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    37:37:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    37:37:void executeOperations(java.util.List,boolean):0 -> b
    38:38:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    38:38:void executeOperations(java.util.List,boolean):0 -> b
    39:39:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    39:39:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    39:39:void executeOperations(java.util.List,boolean):0 -> b
    40:40:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    40:40:void executeOperations(java.util.List,boolean):0 -> b
    41:41:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    41:41:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    41:41:void executeOperations(java.util.List,boolean):0 -> b
    42:42:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    42:42:void executeOperations(java.util.List,boolean):0 -> b
    43:43:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    43:43:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    43:43:void executeOperations(java.util.List,boolean):0 -> b
    44:44:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    44:44:void executeOperations(java.util.List,boolean):0 -> b
    45:45:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    45:45:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    45:45:void executeOperations(java.util.List,boolean):0 -> b
    46:46:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    46:46:void executeOperations(java.util.List,boolean):0 -> b
    47:47:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    47:47:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    47:47:void executeOperations(java.util.List,boolean):0 -> b
    48:48:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    48:48:void executeOperations(java.util.List,boolean):0 -> b
    49:49:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    49:49:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    49:49:void executeOperations(java.util.List,boolean):0 -> b
    50:50:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    50:50:void executeOperations(java.util.List,boolean):0 -> b
    51:51:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    51:51:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    51:51:void executeOperations(java.util.List,boolean):0 -> b
    52:52:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    52:52:void executeOperations(java.util.List,boolean):0 -> b
    53:53:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    53:53:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    53:53:void executeOperations(java.util.List,boolean):0 -> b
    54:54:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    54:54:void executeOperations(java.util.List,boolean):0 -> b
    55:55:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    55:55:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    55:55:void executeOperations(java.util.List,boolean):0 -> b
    56:56:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    56:56:void executeOperations(java.util.List,boolean):0 -> b
    57:57:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    57:57:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    57:57:void executeOperations(java.util.List,boolean):0 -> b
    58:58:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    58:58:void executeOperations(java.util.List,boolean):0 -> b
    59:59:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    59:59:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    59:59:void executeOperations(java.util.List,boolean):0 -> b
    60:60:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    60:60:void executeOperations(java.util.List,boolean):0 -> b
    61:61:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    61:61:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    61:61:void executeOperations(java.util.List,boolean):0 -> b
    62:62:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    62:62:void executeOperations(java.util.List,boolean):0 -> b
    63:63:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    63:63:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    63:63:void executeOperations(java.util.List,boolean):0 -> b
    64:64:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    64:64:void executeOperations(java.util.List,boolean):0 -> b
    65:65:java.lang.Object androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getTransition():0:0 -> b
    65:65:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    65:65:void executeOperations(java.util.List,boolean):0 -> b
    66:66:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    66:66:void executeOperations(java.util.List,boolean):0 -> b
    67:67:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    67:67:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    67:67:void executeOperations(java.util.List,boolean):0 -> b
    68:68:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    68:68:void executeOperations(java.util.List,boolean):0 -> b
    69:69:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    69:69:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    69:69:void executeOperations(java.util.List,boolean):0 -> b
    70:70:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    70:70:void executeOperations(java.util.List,boolean):0 -> b
    71:71:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    71:71:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    71:71:void executeOperations(java.util.List,boolean):0 -> b
    72:72:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    72:72:void executeOperations(java.util.List,boolean):0 -> b
    73:73:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    73:73:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    73:73:void executeOperations(java.util.List,boolean):0 -> b
    74:74:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    74:74:void executeOperations(java.util.List,boolean):0 -> b
    75:75:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    75:75:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    75:75:void executeOperations(java.util.List,boolean):0 -> b
    76:76:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    76:76:void executeOperations(java.util.List,boolean):0 -> b
    77:77:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    77:77:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    77:77:void executeOperations(java.util.List,boolean):0 -> b
    78:78:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    78:78:void executeOperations(java.util.List,boolean):0 -> b
    79:79:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    79:79:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    79:79:void executeOperations(java.util.List,boolean):0 -> b
    80:80:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    80:80:void executeOperations(java.util.List,boolean):0 -> b
    81:81:boolean androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.isOverlapAllowed():0:0 -> b
    81:81:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    81:81:void executeOperations(java.util.List,boolean):0 -> b
    82:82:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    82:82:void executeOperations(java.util.List,boolean):0 -> b
    83:83:java.lang.Object androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getTransition():0:0 -> b
    83:83:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    83:83:void executeOperations(java.util.List,boolean):0 -> b
    84:84:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    84:84:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    84:84:void executeOperations(java.util.List,boolean):0 -> b
    85:85:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    85:85:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    85:85:void executeOperations(java.util.List,boolean):0 -> b
    86:86:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    86:86:void executeOperations(java.util.List,boolean):0 -> b
    87:87:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> b
    87:87:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    87:87:void executeOperations(java.util.List,boolean):0 -> b
    88:88:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    88:88:void executeOperations(java.util.List,boolean):0 -> b
    89:89:void executeOperations(java.util.List,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":135,"2":136,"3":137}}
    135:135:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    135:135:void executeOperations(java.util.List,boolean):0 -> b
    136:136:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    136:136:void executeOperations(java.util.List,boolean):0 -> b
    137:137:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    137:137:void executeOperations(java.util.List,boolean):0 -> b
    90:90:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    90:90:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    90:90:void executeOperations(java.util.List,boolean):0 -> b
    91:91:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    91:91:void executeOperations(java.util.List,boolean):0 -> b
    92:92:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    92:92:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    92:92:void executeOperations(java.util.List,boolean):0 -> b
    93:93:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    93:93:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    93:93:void executeOperations(java.util.List,boolean):0 -> b
    94:94:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    94:94:void executeOperations(java.util.List,boolean):0 -> b
    95:95:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    95:95:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    95:95:void executeOperations(java.util.List,boolean):0 -> b
    96:96:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    96:96:void executeOperations(java.util.List,boolean):0 -> b
    97:97:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> b
    97:97:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    97:97:void executeOperations(java.util.List,boolean):0 -> b
    98:98:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    98:98:void executeOperations(java.util.List,boolean):0 -> b
    99:99:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    99:99:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    99:99:void executeOperations(java.util.List,boolean):0 -> b
    100:100:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    100:100:void executeOperations(java.util.List,boolean):0 -> b
    101:101:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    101:101:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    101:101:void executeOperations(java.util.List,boolean):0 -> b
    102:102:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    102:102:void executeOperations(java.util.List,boolean):0 -> b
    103:103:void executeOperations(java.util.List,boolean):0:0 -> b
    104:104:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    104:104:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    104:104:void executeOperations(java.util.List,boolean):0 -> b
    105:105:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    105:105:void executeOperations(java.util.List,boolean):0 -> b
    106:106:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    106:106:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    106:106:void executeOperations(java.util.List,boolean):0 -> b
    107:107:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    107:107:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    107:107:void executeOperations(java.util.List,boolean):0 -> b
    108:108:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    108:108:void executeOperations(java.util.List,boolean):0 -> b
    109:109:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    109:109:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    109:109:void executeOperations(java.util.List,boolean):0 -> b
    110:110:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    110:110:void executeOperations(java.util.List,boolean):0 -> b
    111:111:androidx.core.os.CancellationSignal androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getSignal():0:0 -> b
    111:111:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    111:111:void executeOperations(java.util.List,boolean):0 -> b
    112:112:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    112:112:void executeOperations(java.util.List,boolean):0 -> b
    113:113:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    113:113:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    113:113:void executeOperations(java.util.List,boolean):0 -> b
    114:114:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    114:114:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    114:114:void executeOperations(java.util.List,boolean):0 -> b
    115:115:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    115:115:void executeOperations(java.util.List,boolean):0 -> b
    116:116:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> b
    116:116:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    116:116:void executeOperations(java.util.List,boolean):0 -> b
    117:117:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    117:117:void executeOperations(java.util.List,boolean):0 -> b
    118:118:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> b
    118:118:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    118:118:void executeOperations(java.util.List,boolean):0 -> b
    119:119:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    119:119:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    119:119:void executeOperations(java.util.List,boolean):0 -> b
    120:120:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    120:120:void executeOperations(java.util.List,boolean):0 -> b
    121:121:androidx.core.os.CancellationSignal androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getSignal():0:0 -> b
    121:121:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    121:121:void executeOperations(java.util.List,boolean):0 -> b
    122:122:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    122:122:void executeOperations(java.util.List,boolean):0 -> b
    123:123:void executeOperations(java.util.List,boolean):0:0 -> b
    124:124:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    124:124:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    124:124:void executeOperations(java.util.List,boolean):0 -> b
    125:125:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    125:125:void executeOperations(java.util.List,boolean):0 -> b
    126:126:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    126:126:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    126:126:void executeOperations(java.util.List,boolean):0 -> b
    127:127:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    127:127:void executeOperations(java.util.List,boolean):0 -> b
    128:128:void executeOperations(java.util.List,boolean):0:0 -> b
    1:1:boolean androidx.core.view.ViewGroupCompat.isTransitionGroup(android.view.ViewGroup):0:0 -> j
    1:1:void captureTransitioningViews(java.util.ArrayList,android.view.View):0 -> j
    2:2:void captureTransitioningViews(java.util.ArrayList,android.view.View):0:0 -> j
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> k
    1:1:void findNamedViews(java.util.Map,android.view.View):0 -> k
    2:2:void findNamedViews(java.util.Map,android.view.View):0:0 -> k
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> l
    1:1:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection):0 -> l
    2:2:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection):0:0 -> l
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.c$a:
    java.util.List val$awaitingContainerChanges -> a
    androidx.fragment.app.SpecialEffectsController$Operation val$operation -> b
    androidx.fragment.app.DefaultSpecialEffectsController this$0 -> c
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> run
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0 -> run
    1:1:void run():0 -> run
    2:2:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> run
    2:2:void run():0 -> run
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> run
    3:3:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0 -> run
    3:3:void run():0 -> run
    4:4:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> run
    4:4:void run():0 -> run
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.d:
    androidx.fragment.app.SpecialEffectsController$Operation val$operation -> d
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo -> e
    android.view.View val$viewToAnimate -> b
    boolean val$isHideOperation -> c
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.e:
    android.animation.Animator val$animator -> a
    void onCancel() -> a
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.f:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo -> c
    android.view.View val$viewToAnimate -> b
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.f$a:
    androidx.fragment.app.DefaultSpecialEffectsController$4 this$1 -> a
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.g:
    android.view.ViewGroup val$container -> b
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo -> c
    android.view.View val$viewToAnimate -> a
    void onCancel() -> a
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.h:
    androidx.fragment.app.SpecialEffectsController$Operation val$firstOut -> b
    androidx.fragment.app.SpecialEffectsController$Operation val$lastIn -> a
    androidx.collection.ArrayMap val$lastInViews -> d
    boolean val$isPop -> c
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> run
    1:1:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void run():0:0 -> run
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> run
    3:3:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void run():0:0 -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.i:
    androidx.fragment.app.FragmentTransitionImpl val$impl -> a
    android.view.View val$lastInEpicenterView -> b
    android.graphics.Rect val$lastInEpicenterRect -> c
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.j:
    java.util.ArrayList val$transitioningViews -> a
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.k:
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo val$transitionInfo -> a
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.c$b:
    androidx.fragment.app.FragmentAnim$AnimationOrAnimator mAnimation -> e
    boolean mIsPop -> c
    boolean mLoadedAnim -> d
    1:1:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> c
    1:1:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0 -> c
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> c
    2:2:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> c
    3:3:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0:0 -> c
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.c$c:
    androidx.core.os.CancellationSignal mSignal -> b
    androidx.fragment.app.SpecialEffectsController$Operation mOperation -> a
    0:65535:void androidx.fragment.app.SpecialEffectsController$Operation.completeSpecialEffect(androidx.core.os.CancellationSignal):0:0 -> a
    0:65535:void completeSpecialEffect():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    1:1:boolean isVisibilityUnchanged():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:boolean isVisibilityUnchanged():0:0 -> b
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    3:3:boolean isVisibilityUnchanged():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.c$d:
    java.lang.Object mSharedElementTransition -> e
    java.lang.Object mTransition -> c
    boolean mOverlapAllowed -> d
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    2:2:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    3:3:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    4:4:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    5:5:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    6:6:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    6:6:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    7:7:boolean androidx.fragment.app.Fragment.getAllowReturnTransitionOverlap():0:0 -> <init>
    7:7:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    8:8:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    9:9:boolean androidx.fragment.app.Fragment.getAllowEnterTransitionOverlap():0:0 -> <init>
    9:9:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    10:10:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    11:11:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    12:12:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    12:12:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    13:13:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    14:14:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    14:14:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    15:15:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    16:16:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    16:16:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    17:17:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    1:1:boolean androidx.fragment.app.FragmentTransitionCompat21.canHandle(java.lang.Object):0:0 -> c
    1:1:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0 -> c
    2:2:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0:0 -> c
    3:3:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> c
    3:3:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0 -> c
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> c
    4:4:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0:0 -> c
androidx.fragment.app.Fragment -> androidx.fragment.app.m:
    boolean mFromLayout -> m
    androidx.fragment.app.Fragment mTarget -> g
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> L
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> O
    boolean mRestored -> o
    java.lang.String mTargetWho -> h
    boolean mIsCreated -> J
    boolean mAdded -> k
    androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo -> H
    java.lang.Object USE_DEFAULT_TRANSITION -> Q
    androidx.fragment.app.Fragment mParentFragment -> u
    androidx.fragment.app.FragmentManager mFragmentManager -> r
    java.lang.String mTag -> x
    boolean mHidden -> y
    androidx.fragment.app.FragmentManager mChildFragmentManager -> t
    androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData -> N
    int mContainerId -> w
    boolean mUserVisibleHint -> G
    boolean mRetainInstance -> A
    java.lang.String mWho -> e
    boolean mCalled -> C
    int mBackStackNesting -> q
    androidx.lifecycle.Lifecycle$State mMaxState -> K
    java.util.ArrayList mOnPreAttachedListeners -> P
    boolean mInLayout -> n
    boolean mPerformedCreateView -> p
    boolean mHiddenChanged -> I
    android.os.Bundle mSavedFragmentState -> b
    android.os.Bundle mSavedViewRegistryState -> d
    int mTargetRequestCode -> i
    java.lang.Boolean mIsPrimaryNavigationFragment -> j
    boolean mRemoving -> l
    android.os.Bundle mArguments -> f
    int mState -> a
    androidx.fragment.app.FragmentHostCallback mHost -> s
    android.view.ViewGroup mContainer -> D
    androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner -> M
    android.util.SparseArray mSavedViewState -> c
    boolean mDetached -> z
    int mFragmentId -> v
    boolean mDeferStart -> F
    android.view.View mView -> E
    boolean mMenuVisible -> B
    1:1:void initLifecycle():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> <init>
    2:2:void initLifecycle():0 -> <init>
    2:2:void <init>():0 -> <init>
    3:3:void initLifecycle():0:0 -> <init>
    3:3:void <init>():0 -> <init>
    1:1:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> A
    1:1:void onAttach(android.content.Context):0 -> A
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onAttach(android.app.Activity):0:0 -> A
    2:2:void onAttach(android.content.Context):0 -> A
    1:1:boolean androidx.fragment.app.FragmentManager.isStateAtLeast(int):0:0 -> B
    1:1:void onCreate(android.os.Bundle):0 -> B
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onCreate(android.os.Bundle):0:0 -> B
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> C
    void onDestroy() -> D
    void onDetach() -> E
    1:1:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> F
    1:1:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0 -> F
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle):0:0 -> F
    2:2:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0 -> F
    void onPause() -> G
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> H
    void onResume() -> I
    void performConfigurationChanged(android.content.res.Configuration) -> J
    boolean performContextItemSelected(android.view.MenuItem) -> K
    1:1:void androidx.lifecycle.ViewTreeLifecycleOwner.set(android.view.View,androidx.lifecycle.LifecycleOwner):0:0 -> L
    1:1:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> L
    2:2:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> L
    3:3:void androidx.lifecycle.ViewTreeViewModelStoreOwner.set(android.view.View,androidx.lifecycle.ViewModelStoreOwner):0:0 -> L
    3:3:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> L
    4:4:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> L
    5:5:void androidx.savedstate.ViewTreeSavedStateRegistryOwner.set(android.view.View,androidx.savedstate.SavedStateRegistryOwner):0:0 -> L
    5:5:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> L
    6:6:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> L
    7:7:boolean androidx.fragment.app.FragmentViewLifecycleOwner.isInitialized():0:0 -> L
    7:7:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> L
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> L
    1:1:void androidx.fragment.app.FragmentManager.dispatchDestroyView():0:0 -> M
    1:1:void performDestroyView():0 -> M
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void performDestroyView():0:0 -> M
    3:3:androidx.lifecycle.Lifecycle androidx.fragment.app.FragmentViewLifecycleOwner.getLifecycle():0:0 -> M
    3:3:void performDestroyView():0 -> M
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> M
    4:4:void performDestroyView():0 -> M
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void performDestroyView():0:0 -> M
    6:6:void onDestroyView():0:0 -> M
    6:6:void performDestroyView():0 -> M
    7:7:void performDestroyView():0:0 -> M
    8:8:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0:0 -> M
    8:8:void performDestroyView():0 -> M
    9:9:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.markForRedelivery():0:0 -> M
    9:9:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0 -> M
    9:9:void performDestroyView():0 -> M
    10:10:int androidx.collection.SparseArrayCompat.size():0:0 -> M
    10:10:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.markForRedelivery():0 -> M
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0 -> M
    10:10:void performDestroyView():0 -> M
    11:11:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.markForRedelivery():0:0 -> M
    11:11:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0 -> M
    11:11:void performDestroyView():0 -> M
    12:12:java.lang.Object androidx.collection.SparseArrayCompat.valueAt(int):0:0 -> M
    12:12:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.markForRedelivery():0 -> M
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0 -> M
    12:12:void performDestroyView():0 -> M
    13:13:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.markForRedelivery():0:0 -> M
    13:13:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0 -> M
    13:13:void performDestroyView():0 -> M
    14:14:void performDestroyView():0:0 -> M
    1:1:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0:0 -> N
    1:1:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> N
    1:1:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> N
    2:2:android.view.LayoutInflater$Factory2 androidx.fragment.app.FragmentManager.getLayoutInflaterFactory():0:0 -> N
    2:2:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0 -> N
    2:2:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> N
    2:2:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> N
    3:3:void androidx.core.view.LayoutInflaterCompat.setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2):0:0 -> N
    3:3:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0 -> N
    3:3:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> N
    3:3:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> N
    4:4:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0:0 -> N
    4:4:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> N
    4:4:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> N
    void performLowMemory() -> O
    void performMultiWindowModeChanged(boolean) -> P
    boolean performOptionsItemSelected(android.view.MenuItem) -> Q
    void performOptionsMenuClosed(android.view.Menu) -> R
    void performPictureInPictureModeChanged(boolean) -> S
    boolean performPrepareOptionsMenu(android.view.Menu) -> T
    androidx.fragment.app.FragmentActivity requireActivity() -> U
    1:1:android.view.View getView():0:0 -> V
    1:1:android.view.View requireView():0 -> V
    2:2:android.view.View requireView():0:0 -> V
    void restoreChildFragmentState(android.os.Bundle) -> W
    void setAnimations(int,int,int,int) -> X
    1:1:boolean isStateSaved():0:0 -> Y
    1:1:void setArguments(android.os.Bundle):0 -> Y
    2:2:void setArguments(android.os.Bundle):0:0 -> Y
    void setFocusedView(android.view.View) -> Z
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    void setPopDirection(boolean) -> a0
    1:1:androidx.fragment.app.Fragment getTargetFragment():0:0 -> f
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> f
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> f
    0:65535:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> g
    0:65535:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:androidx.lifecycle.ViewModelStore androidx.fragment.app.FragmentManager.getViewModelStore(androidx.fragment.app.Fragment):0:0 -> h
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.lifecycle.ViewModelStore androidx.fragment.app.FragmentManagerViewModel.getViewModelStore(androidx.fragment.app.Fragment):0:0 -> h
    2:2:androidx.lifecycle.ViewModelStore androidx.fragment.app.FragmentManager.getViewModelStore(androidx.fragment.app.Fragment):0 -> h
    2:2:androidx.lifecycle.ViewModelStore getViewModelStore():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:androidx.lifecycle.ViewModelStore getViewModelStore():0:0 -> h
    androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> i
    1:1:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> j
    1:1:androidx.fragment.app.FragmentActivity getActivity():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.fragment.app.FragmentActivity getActivity():0:0 -> j
    android.view.View getAnimatingAway() -> k
    androidx.fragment.app.FragmentManager getChildFragmentManager() -> l
    0:65535:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> m
    0:65535:android.content.Context getContext():0 -> m
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    int getEnterAnim() -> n
    int getExitAnim() -> o
    int getMinimumMaxLifecycleState() -> p
    androidx.fragment.app.FragmentManager getParentFragmentManager() -> q
    boolean getPopDirection() -> r
    int getPopEnterAnim() -> s
    int getPopExitAnim() -> t
    java.lang.Object getReenterTransition() -> u
    1:1:android.content.Context requireContext():0:0 -> v
    1:1:android.content.res.Resources getResources():0 -> v
    2:2:android.content.res.Resources getResources():0:0 -> v
    3:3:android.content.Context requireContext():0:0 -> v
    3:3:android.content.res.Resources getResources():0 -> v
    java.lang.Object getReturnTransition() -> w
    java.lang.Object getSharedElementReturnTransition() -> x
    boolean isInBackStack() -> y
    void onActivityResult(int,int,android.content.Intent) -> z
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.l:
    androidx.fragment.app.Fragment this$0 -> a
    1:1:android.view.View onFindViewById(int):0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:android.view.View onFindViewById(int):0:0 -> c
    4:4:android.view.View onFindViewById(int):0:0 -> c
    5:5:android.view.View onFindViewById(int):0:0 -> c
    2:2:android.view.View onFindViewById(int):0:0 -> c
    boolean onHasView() -> d
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    androidx.fragment.app.Fragment this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.m$a:
    java.lang.Object mReturnTransition -> j
    java.lang.Object mReenterTransition -> k
    int mPopExitAnim -> f
    int mNextTransition -> g
    int mExitAnim -> d
    int mPopEnterAnim -> e
    int mEnterAnim -> c
    java.lang.Object mSharedElementReturnTransition -> l
    java.util.ArrayList mSharedElementTargetNames -> i
    java.util.ArrayList mSharedElementSourceNames -> h
    android.view.View mFocusedView -> n
    android.view.View mAnimatingAway -> a
    boolean mIsPop -> b
    float mPostOnViewCreatedAlpha -> m
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.m$b:
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.m$c:
    void onPreAttached() -> a
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.p:
    androidx.fragment.app.FragmentController mFragments -> h
    boolean mCreated -> j
    androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry -> i
    boolean mResumed -> k
    boolean mStopped -> l
    1:1:androidx.fragment.app.FragmentController androidx.fragment.app.FragmentController.createController(androidx.fragment.app.FragmentHostCallback):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    3:3:androidx.savedstate.SavedStateRegistry androidx.activity.ComponentActivity.getSavedStateRegistry():0:0 -> <init>
    3:3:void init():0 -> <init>
    3:3:void <init>():0 -> <init>
    4:4:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> <init>
    4:4:androidx.savedstate.SavedStateRegistry androidx.activity.ComponentActivity.getSavedStateRegistry():0 -> <init>
    4:4:void init():0 -> <init>
    4:4:void <init>():0 -> <init>
    5:5:void init():0:0 -> <init>
    5:5:void <init>():0 -> <init>
    6:6:void androidx.activity.ComponentActivity.addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0:0 -> <init>
    6:6:void init():0 -> <init>
    6:6:void <init>():0 -> <init>
    7:7:void androidx.activity.contextaware.ContextAwareHelper.addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0:0 -> <init>
    7:7:void androidx.activity.ComponentActivity.addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0 -> <init>
    7:7:void init():0 -> <init>
    7:7:void <init>():0 -> <init>
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentController.getSupportFragmentManager():0:0 -> dump
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> dump
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> dump
    0:65535:androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentController.getSupportFragmentManager():0:0 -> n
    0:65535:androidx.fragment.app.FragmentManager getSupportFragmentManager():0 -> n
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:java.util.List androidx.fragment.app.FragmentManager.getFragments():0:0 -> o
    1:1:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> o
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> o
    3:3:java.lang.Object androidx.fragment.app.Fragment.getHost():0:0 -> o
    3:3:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> o
    4:4:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> o
    5:5:androidx.lifecycle.Lifecycle androidx.fragment.app.FragmentViewLifecycleOwner.getLifecycle():0:0 -> o
    5:5:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> o
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> o
    6:6:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> o
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> o
    8:8:void androidx.fragment.app.FragmentViewLifecycleOwner.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> o
    8:8:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> o
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> o
    10:10:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> o
    10:10:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> o
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:11:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> o
    0:65535:void androidx.fragment.app.FragmentController.dispatchConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    0:65535:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    0:65535:void androidx.fragment.app.FragmentController.dispatchCreate():0:0 -> onCreate
    0:65535:void onCreate(android.os.Bundle):0 -> onCreate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:boolean androidx.fragment.app.FragmentController.dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> onCreatePanelMenu
    1:1:boolean onCreatePanelMenu(int,android.view.Menu):0 -> onCreatePanelMenu
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:boolean onCreatePanelMenu(int,android.view.Menu):0:0 -> onCreatePanelMenu
    1:1:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    2:2:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    3:3:android.view.LayoutInflater$Factory2 androidx.fragment.app.FragmentManager.getLayoutInflaterFactory():0:0 -> onCreateView
    3:3:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    3:3:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    3:3:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    4:4:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    4:4:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    4:4:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    5:5:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    6:6:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    6:6:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    7:7:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    7:7:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    7:7:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    8:8:android.view.LayoutInflater$Factory2 androidx.fragment.app.FragmentManager.getLayoutInflaterFactory():0:0 -> onCreateView
    8:8:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    8:8:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    8:8:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    9:9:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    9:9:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    9:9:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    10:10:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:void androidx.fragment.app.FragmentController.dispatchDestroy():0:0 -> onDestroy
    1:1:void onDestroy():0 -> onDestroy
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onDestroy():0:0 -> onDestroy
    0:65535:void androidx.fragment.app.FragmentController.dispatchLowMemory():0:0 -> onLowMemory
    0:65535:void onLowMemory():0 -> onLowMemory
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:boolean androidx.fragment.app.FragmentController.dispatchContextItemSelected(android.view.MenuItem):0:0 -> onMenuItemSelected
    1:1:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:boolean onMenuItemSelected(int,android.view.MenuItem):0:0 -> onMenuItemSelected
    3:3:boolean androidx.fragment.app.FragmentController.dispatchOptionsItemSelected(android.view.MenuItem):0:0 -> onMenuItemSelected
    3:3:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    0:65535:void androidx.fragment.app.FragmentController.dispatchMultiWindowModeChanged(boolean):0:0 -> onMultiWindowModeChanged
    0:65535:void onMultiWindowModeChanged(boolean):0 -> onMultiWindowModeChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void androidx.fragment.app.FragmentController.dispatchOptionsMenuClosed(android.view.Menu):0:0 -> onPanelClosed
    1:1:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:1:void androidx.fragment.app.FragmentController.dispatchPause():0:0 -> onPause
    1:1:void onPause():0 -> onPause
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.fragment.app.FragmentManager.dispatchPause():0:0 -> onPause
    2:2:void androidx.fragment.app.FragmentController.dispatchPause():0 -> onPause
    2:2:void onPause():0 -> onPause
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void onPause():0:0 -> onPause
    0:65535:void androidx.fragment.app.FragmentController.dispatchPictureInPictureModeChanged(boolean):0:0 -> onPictureInPictureModeChanged
    0:65535:void onPictureInPictureModeChanged(boolean):0 -> onPictureInPictureModeChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void onResumeFragments():0:0 -> onPostResume
    1:1:void onPostResume():0 -> onPostResume
    2:2:void androidx.fragment.app.FragmentController.dispatchResume():0:0 -> onPostResume
    2:2:void onResumeFragments():0 -> onPostResume
    2:2:void onPostResume():0 -> onPostResume
    3:3:void androidx.fragment.app.FragmentManager.dispatchResume():0:0 -> onPostResume
    3:3:void androidx.fragment.app.FragmentController.dispatchResume():0 -> onPostResume
    3:3:void onResumeFragments():0 -> onPostResume
    3:3:void onPostResume():0 -> onPostResume
    4:4:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> onPostResume
    4:4:void androidx.fragment.app.FragmentManager.dispatchResume():0 -> onPostResume
    4:4:void androidx.fragment.app.FragmentController.dispatchResume():0 -> onPostResume
    4:4:void onResumeFragments():0 -> onPostResume
    4:4:void onPostResume():0 -> onPostResume
    5:5:void androidx.fragment.app.FragmentManager.dispatchResume():0:0 -> onPostResume
    5:5:void androidx.fragment.app.FragmentController.dispatchResume():0 -> onPostResume
    5:5:void onResumeFragments():0 -> onPostResume
    5:5:void onPostResume():0 -> onPostResume
    1:1:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu):0:0 -> onPreparePanel
    1:1:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    2:2:boolean onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    3:3:boolean androidx.fragment.app.FragmentController.dispatchPrepareOptionsMenu(android.view.Menu):0:0 -> onPreparePanel
    3:3:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:boolean onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    0:65535:boolean androidx.fragment.app.FragmentController.execPendingActions():0:0 -> onResume
    0:65535:void onResume():0 -> onResume
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0:0 -> onStart
    1:1:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0:0 -> onStart
    2:2:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0 -> onStart
    2:2:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> onStart
    3:3:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0 -> onStart
    3:3:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0 -> onStart
    3:3:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    4:4:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0:0 -> onStart
    4:4:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0 -> onStart
    4:4:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void onStart():0:0 -> onStart
    6:6:boolean androidx.fragment.app.FragmentController.execPendingActions():0:0 -> onStart
    6:6:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void onStart():0:0 -> onStart
    8:8:void androidx.fragment.app.FragmentController.dispatchStart():0:0 -> onStart
    8:8:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:void androidx.fragment.app.FragmentManager.dispatchStart():0:0 -> onStart
    9:9:void androidx.fragment.app.FragmentController.dispatchStart():0 -> onStart
    9:9:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    10:10:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> onStart
    10:10:void androidx.fragment.app.FragmentManager.dispatchStart():0 -> onStart
    10:10:void androidx.fragment.app.FragmentController.dispatchStart():0 -> onStart
    10:10:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    11:11:void androidx.fragment.app.FragmentManager.dispatchStart():0:0 -> onStart
    11:11:void androidx.fragment.app.FragmentController.dispatchStart():0 -> onStart
    11:11:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    1:1:void markFragmentsCreated():0:0 -> onStop
    1:1:void onStop():0 -> onStop
    2:2:void onStop():0:0 -> onStop
    3:3:void androidx.fragment.app.FragmentController.dispatchStop():0:0 -> onStop
    3:3:void onStop():0 -> onStop
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void androidx.fragment.app.FragmentManager.dispatchStop():0:0 -> onStop
    4:4:void androidx.fragment.app.FragmentController.dispatchStop():0 -> onStop
    4:4:void onStop():0 -> onStop
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> onStop
    5:5:void androidx.fragment.app.FragmentManager.dispatchStop():0 -> onStop
    5:5:void androidx.fragment.app.FragmentController.dispatchStop():0 -> onStop
    5:5:void onStop():0 -> onStop
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    6:6:void androidx.fragment.app.FragmentManager.dispatchStop():0:0 -> onStop
    6:6:void androidx.fragment.app.FragmentController.dispatchStop():0 -> onStop
    6:6:void onStop():0 -> onStop
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    7:7:void onStop():0:0 -> onStop
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.n:
    androidx.fragment.app.FragmentActivity this$0 -> a
    1:1:void androidx.fragment.app.FragmentActivity.markFragmentsCreated():0:0 -> a
    1:1:android.os.Bundle saveState():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:android.os.Bundle saveState():0:0 -> a
    3:3:android.os.Parcelable androidx.fragment.app.FragmentController.saveAllState():0:0 -> a
    3:3:android.os.Bundle saveState():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:android.os.Bundle saveState():0:0 -> a
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.o:
    androidx.fragment.app.FragmentActivity this$0 -> a
    1:1:void androidx.fragment.app.FragmentController.attachHost(androidx.fragment.app.Fragment):0:0 -> a
    1:1:void onContextAvailable(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onContextAvailable(android.content.Context):0:0 -> a
    3:3:androidx.savedstate.SavedStateRegistry androidx.activity.ComponentActivity.getSavedStateRegistry():0:0 -> a
    3:3:void onContextAvailable(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> a
    4:4:androidx.savedstate.SavedStateRegistry androidx.activity.ComponentActivity.getSavedStateRegistry():0 -> a
    4:4:void onContextAvailable(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void onContextAvailable(android.content.Context):0:0 -> a
    6:6:void androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable):0:0 -> a
    6:6:void onContextAvailable(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.p$a:
    androidx.fragment.app.FragmentActivity this$0 -> e
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> b
    android.view.View onFindViewById(int) -> c
    boolean onHasView() -> d
    0:65535:androidx.activity.OnBackPressedDispatcher androidx.activity.ComponentActivity.getOnBackPressedDispatcher():0:0 -> e
    0:65535:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    0:65535:androidx.activity.result.ActivityResultRegistry androidx.activity.ComponentActivity.getActivityResultRegistry():0:0 -> f
    0:65535:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    androidx.lifecycle.ViewModelStore getViewModelStore() -> h
    0:65535:androidx.fragment.app.FragmentActivity onGetHost():0:0 -> i
    0:65535:java.lang.Object onGetHost():0 -> i
    android.view.LayoutInflater onGetLayoutInflater() -> j
    0:65535:void androidx.fragment.app.FragmentActivity.supportInvalidateOptionsMenu():0:0 -> k
    0:65535:void onSupportInvalidateOptionsMenu():0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.q:
    1:1:int androidx.fragment.app.Fragment.getNextTransition():0:0 -> a
    1:1:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean):0:0 -> a
    2:2:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean):0 -> a
    3:3:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean):0:0 -> a
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.q$a:
    android.view.animation.Animation animation -> a
    android.animation.Animator animator -> b
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.q$b:
    android.view.ViewGroup mParent -> a
    boolean mAnimating -> e
    android.view.View mChild -> b
    boolean mEnded -> c
    boolean mTransitionEnded -> d
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.r:
    android.view.View$OnApplyWindowInsetsListener mApplyWindowInsetsListener -> c
    java.util.ArrayList mTransitioningFragmentViews -> b
    java.util.ArrayList mDisappearingFragmentChildren -> a
    boolean mDrawDisappearingViewsFirst -> d
    1:1:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentManager.beginTransaction():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    2:2:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.setReorderingAllowed(boolean):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    3:3:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    4:4:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.add(int,androidx.fragment.app.Fragment,java.lang.String):0:0 -> <init>
    4:4:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0:0 -> <init>
    6:6:void androidx.fragment.app.FragmentManager.onContainerAvailable(androidx.fragment.app.FragmentContainerView):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    7:7:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> <init>
    7:7:void androidx.fragment.app.FragmentManager.onContainerAvailable(androidx.fragment.app.FragmentContainerView):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    8:8:void androidx.fragment.app.FragmentManager.onContainerAvailable(androidx.fragment.app.FragmentContainerView):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    void addDisappearingFragmentView(android.view.View) -> a
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getViewFragment(android.view.View):0:0 -> addView
    1:1:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams):0 -> addView
    2:2:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams):0:0 -> addView
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getViewFragment(android.view.View):0:0 -> addViewInLayout
    1:1:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean):0 -> addViewInLayout
    2:2:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean):0:0 -> addViewInLayout
    1:1:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> dispatchApplyWindowInsets
    1:1:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0 -> dispatchApplyWindowInsets
    2:2:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0:0 -> dispatchApplyWindowInsets
    3:3:android.view.WindowInsets androidx.core.view.WindowInsetsCompat.toWindowInsets():0:0 -> dispatchApplyWindowInsets
    3:3:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat.onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> dispatchApplyWindowInsets
    3:3:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0 -> dispatchApplyWindowInsets
    4:4:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat.onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> dispatchApplyWindowInsets
    4:4:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0 -> dispatchApplyWindowInsets
    5:5:boolean androidx.core.view.WindowInsetsCompat.isConsumed():0:0 -> dispatchApplyWindowInsets
    5:5:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0 -> dispatchApplyWindowInsets
    6:6:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0:0 -> dispatchApplyWindowInsets
    7:7:android.view.WindowInsets androidx.core.view.WindowInsetsCompat.toWindowInsets():0:0 -> dispatchApplyWindowInsets
    7:7:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat.dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> dispatchApplyWindowInsets
    7:7:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0 -> dispatchApplyWindowInsets
    8:8:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat.dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> dispatchApplyWindowInsets
    8:8:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0 -> dispatchApplyWindowInsets
androidx.fragment.app.FragmentController -> androidx.fragment.app.s:
    androidx.fragment.app.FragmentHostCallback mHost -> a
    void noteStateNotSaved() -> a
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.t:
    androidx.collection.SimpleArrayMap sClassCacheMap -> a
    androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    1:1:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0 -> b
    2:2:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0:0 -> b
    3:3:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    3:3:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0 -> b
    4:4:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0:0 -> b
    java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> c
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.u:
    android.content.Context mContext -> b
    android.os.Handler mHandler -> c
    androidx.fragment.app.FragmentManager mFragmentManager -> d
    android.app.Activity mActivity -> a
    0:65535:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int):0:0 -> <init>
    0:65535:void <init>(androidx.fragment.app.FragmentActivity):0 -> <init>
    java.lang.Object onGetHost() -> i
    android.view.LayoutInflater onGetLayoutInflater() -> j
    void onSupportInvalidateOptionsMenu() -> k
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.v:
    androidx.fragment.app.FragmentManager mFragmentManager -> a
    1:1:boolean androidx.fragment.app.FragmentFactory.isFragmentClass(java.lang.ClassLoader,java.lang.String):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.findFragmentByTag(java.lang.String):0:0 -> onCreateView
    3:3:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentByTag(java.lang.String):0:0 -> onCreateView
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.findFragmentByTag(java.lang.String):0 -> onCreateView
    4:4:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> onCreateView
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentByTag(java.lang.String):0 -> onCreateView
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.findFragmentByTag(java.lang.String):0 -> onCreateView
    5:5:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    6:6:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentByTag(java.lang.String):0:0 -> onCreateView
    6:6:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.findFragmentByTag(java.lang.String):0 -> onCreateView
    6:6:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    7:7:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    8:8:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> onCreateView
    8:8:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    10:10:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> onCreateView
    10:10:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:11:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    12:12:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> onCreateView
    12:12:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:13:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    14:14:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> onCreateView
    14:14:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:15:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.v$a:
    androidx.fragment.app.FragmentStateManager val$fragmentStateManager -> a
    androidx.fragment.app.FragmentLayoutInflaterFactory this$0 -> b
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> onViewAttachedToWindow
    1:1:void onViewAttachedToWindow(android.view.View):0 -> onViewAttachedToWindow
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onViewAttachedToWindow(android.view.View):0:0 -> onViewAttachedToWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.w:
    androidx.fragment.app.FragmentManager mFragmentManager -> b
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> a
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> a
    1:1:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> a
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> a
    3:3:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> a
    4:4:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> a
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> b
    1:1:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> b
    2:2:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> b
    3:3:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0:0 -> b
    5:5:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> b
    5:5:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0 -> b
    6:6:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0:0 -> b
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> c
    1:1:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> c
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> c
    3:3:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> c
    4:4:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> c
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> d
    1:1:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> d
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> d
    3:3:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0 -> d
    4:4:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> d
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> e
    1:1:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0:0 -> e
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> e
    3:3:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0 -> e
    4:4:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0:0 -> e
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> f
    1:1:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0:0 -> f
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> f
    3:3:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0 -> f
    4:4:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0:0 -> f
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> g
    1:1:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> g
    2:2:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> g
    3:3:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0:0 -> g
    5:5:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> g
    5:5:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0 -> g
    6:6:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0:0 -> g
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> h
    1:1:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> h
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> h
    3:3:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> h
    4:4:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> h
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> i
    1:1:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0:0 -> i
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> i
    3:3:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0 -> i
    4:4:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0:0 -> i
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> j
    1:1:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> j
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> j
    3:3:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> j
    4:4:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> j
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> k
    1:1:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0:0 -> k
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> k
    3:3:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0 -> k
    4:4:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0:0 -> k
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> l
    1:1:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0 -> l
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0:0 -> l
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> l
    3:3:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0 -> l
    4:4:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0:0 -> l
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> m
    1:1:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0 -> m
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0:0 -> m
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> m
    3:3:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0 -> m
    4:4:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0:0 -> m
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> n
    1:1:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0 -> n
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> n
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> n
    3:3:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0 -> n
    4:4:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> n
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder -> androidx.fragment.app.w$a:
androidx.fragment.app.FragmentManager -> androidx.fragment.app.x:
    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher -> m
    java.util.ArrayList mTmpIsPop -> F
    java.util.ArrayList mCreatedMenus -> e
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> h
    androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult -> w
    androidx.fragment.app.Fragment mPrimaryNav -> s
    java.util.ArrayList mPendingActions -> a
    androidx.fragment.app.FragmentHostCallback mHost -> p
    java.util.ArrayDeque mLaunchedFragments -> y
    androidx.fragment.app.FragmentFactory mHostFragmentFactory -> t
    java.util.Map mExitAnimationCancellationSignals -> k
    androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory -> u
    boolean mStateSaved -> A
    boolean mExecutingActions -> b
    boolean mDestroyed -> C
    int mCurState -> o
    androidx.fragment.app.FragmentTransition$Callback mFragmentTransitionCallback -> l
    java.util.ArrayList mTmpAddedFragments -> G
    java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners -> n
    androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory -> f
    androidx.fragment.app.Fragment mParent -> r
    java.util.ArrayList mTmpRecords -> E
    java.util.ArrayList mBackStack -> d
    androidx.activity.result.ActivityResultLauncher mStartActivityForResult -> v
    java.util.concurrent.atomic.AtomicInteger mBackStackIndex -> i
    androidx.activity.result.ActivityResultLauncher mRequestPermissions -> x
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> g
    androidx.fragment.app.FragmentStore mFragmentStore -> c
    java.lang.Runnable mExecCommit -> I
    boolean mNeedMenuInvalidate -> z
    androidx.fragment.app.FragmentContainer mContainer -> q
    java.util.Map mResults -> j
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> H
    boolean mStopped -> B
    boolean mHavePendingDeferredStart -> D
    void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> A
    androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> B
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentById(int):0:0 -> C
    1:1:androidx.fragment.app.Fragment findFragmentById(int):0 -> C
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> C
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentById(int):0 -> C
    2:2:androidx.fragment.app.Fragment findFragmentById(int):0 -> C
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentById(int):0:0 -> C
    3:3:androidx.fragment.app.Fragment findFragmentById(int):0 -> C
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> D
    androidx.fragment.app.FragmentFactory getFragmentFactory() -> E
    androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> F
    void hideFragment(androidx.fragment.app.Fragment) -> G
    boolean isLoggingEnabled(int) -> H
    0:65535:boolean checkForMenus():0:0 -> I
    0:65535:boolean isMenuAvailable(androidx.fragment.app.Fragment):0 -> I
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    0:65535:boolean androidx.fragment.app.Fragment.isMenuVisible():0:0 -> J
    0:65535:boolean isParentMenuVisible(androidx.fragment.app.Fragment):0 -> J
    1:1:androidx.fragment.app.Fragment getPrimaryNavigationFragment():0:0 -> K
    1:1:boolean isPrimaryNavigation(androidx.fragment.app.Fragment):0 -> K
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:boolean isPrimaryNavigation(androidx.fragment.app.Fragment):0:0 -> K
    boolean isStateSaved() -> L
    1:1:void androidx.fragment.app.FragmentStore.moveToExpectedState():0:0 -> M
    1:1:void moveToState(int,boolean):0 -> M
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> M
    2:2:void androidx.fragment.app.FragmentStore.moveToExpectedState():0 -> M
    2:2:void moveToState(int,boolean):0 -> M
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void androidx.fragment.app.FragmentStore.moveToExpectedState():0:0 -> M
    3:3:void moveToState(int,boolean):0 -> M
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void moveToState(int,boolean):0:0 -> M
    1:1:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> N
    1:1:void noteStateNotSaved():0 -> N
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void noteStateNotSaved():0:0 -> N
    3:3:void androidx.fragment.app.Fragment.noteStateNotSaved():0:0 -> N
    3:3:void noteStateNotSaved():0 -> N
    1:1:boolean popBackStackImmediate(java.lang.String,int,int):0:0 -> O
    1:1:boolean popBackStackImmediate():0 -> O
    2:2:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int):0:0 -> O
    2:2:boolean popBackStackImmediate(java.lang.String,int,int):0 -> O
    2:2:boolean popBackStackImmediate():0 -> O
    3:3:boolean popBackStackImmediate(java.lang.String,int,int):0:0 -> O
    3:3:boolean popBackStackImmediate():0 -> O
    1:1:void androidx.fragment.app.FragmentStore.removeFragment(androidx.fragment.app.Fragment):0:0 -> P
    1:1:void removeFragment(androidx.fragment.app.Fragment):0 -> P
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void removeFragment(androidx.fragment.app.Fragment):0:0 -> P
    3:3:void androidx.fragment.app.FragmentStore.removeFragment(androidx.fragment.app.Fragment):0:0 -> P
    3:3:void removeFragment(androidx.fragment.app.Fragment):0 -> P
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> Q
    1:1:void androidx.fragment.app.FragmentStore.resetActiveFragments():0:0 -> R
    1:1:void restoreSaveState(android.os.Parcelable):0 -> R
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void restoreSaveState(android.os.Parcelable):0:0 -> R
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManagerViewModel.findRetainedFragmentByWho(java.lang.String):0:0 -> R
    3:3:void restoreSaveState(android.os.Parcelable):0 -> R
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void restoreSaveState(android.os.Parcelable):0:0 -> R
    5:5:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> R
    5:5:void restoreSaveState(android.os.Parcelable):0 -> R
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void restoreSaveState(android.os.Parcelable):0:0 -> R
    7:7:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> R
    7:7:void restoreSaveState(android.os.Parcelable):0 -> R
    8:8:void restoreSaveState(android.os.Parcelable):0:0 -> R
    9:9:void restoreSaveState(android.os.Parcelable):0:0 -> R
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27}}
    25:25:void restoreSaveState(android.os.Parcelable):0:0 -> R
    26:26:void restoreSaveState(android.os.Parcelable):0:0 -> R
    27:27:void restoreSaveState(android.os.Parcelable):0:0 -> R
    10:10:void restoreSaveState(android.os.Parcelable):0:0 -> R
    11:11:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> R
    11:11:void restoreSaveState(android.os.Parcelable):0 -> R
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:void restoreSaveState(android.os.Parcelable):0:0 -> R
    13:13:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> R
    13:13:void restoreSaveState(android.os.Parcelable):0 -> R
    14:14:void restoreSaveState(android.os.Parcelable):0:0 -> R
    15:15:java.util.Collection androidx.fragment.app.FragmentManagerViewModel.getRetainedFragments():0:0 -> R
    15:15:void restoreSaveState(android.os.Parcelable):0 -> R
    16:16:void restoreSaveState(android.os.Parcelable):0:0 -> R
    17:17:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> R
    17:17:void restoreSaveState(android.os.Parcelable):0 -> R
    18:18:void restoreSaveState(android.os.Parcelable):0:0 -> R
    19:19:void androidx.fragment.app.FragmentStore.restoreAddedFragments(java.util.List):0:0 -> R
    19:19:void restoreSaveState(android.os.Parcelable):0 -> R
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:20:void restoreSaveState(android.os.Parcelable):0:0 -> R
    21:21:androidx.fragment.app.BackStackRecord androidx.fragment.app.BackStackState.instantiate(androidx.fragment.app.FragmentManager):0:0 -> R
    21:21:void restoreSaveState(android.os.Parcelable):0 -> R
    22:22:void restoreSaveState(android.os.Parcelable):0:0 -> R
    23:23:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> R
    23:23:void restoreSaveState(android.os.Parcelable):0 -> R
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    24:24:void restoreSaveState(android.os.Parcelable):0:0 -> R
    1:1:void forcePostponedTransactions():0:0 -> S
    1:1:android.os.Parcelable saveAllState():0 -> S
    2:2:void androidx.fragment.app.SpecialEffectsController.forcePostponedExecutePendingOperations():0:0 -> S
    2:2:void forcePostponedTransactions():0 -> S
    2:2:android.os.Parcelable saveAllState():0 -> S
    3:3:android.os.Parcelable saveAllState():0:0 -> S
    4:4:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> S
    4:4:android.os.Parcelable saveAllState():0 -> S
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:android.os.Parcelable saveAllState():0:0 -> S
    6:6:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0:0 -> S
    6:6:android.os.Parcelable saveAllState():0 -> S
    7:7:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> S
    7:7:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> S
    7:7:android.os.Parcelable saveAllState():0 -> S
    8:8:androidx.fragment.app.FragmentState androidx.fragment.app.FragmentStateManager.saveState():0:0 -> S
    8:8:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> S
    8:8:android.os.Parcelable saveAllState():0 -> S
    9:9:android.os.Bundle androidx.fragment.app.FragmentStateManager.saveBasicState():0:0 -> S
    9:9:androidx.fragment.app.FragmentState androidx.fragment.app.FragmentStateManager.saveState():0 -> S
    9:9:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> S
    9:9:android.os.Parcelable saveAllState():0 -> S
    10:10:void androidx.fragment.app.Fragment.performSaveInstanceState(android.os.Bundle):0:0 -> S
    10:10:android.os.Bundle androidx.fragment.app.FragmentStateManager.saveBasicState():0 -> S
    10:10:androidx.fragment.app.FragmentState androidx.fragment.app.FragmentStateManager.saveState():0 -> S
    10:10:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> S
    10:10:android.os.Parcelable saveAllState():0 -> S
    11:11:android.os.Bundle androidx.fragment.app.FragmentStateManager.saveBasicState():0:0 -> S
    11:11:androidx.fragment.app.FragmentState androidx.fragment.app.FragmentStateManager.saveState():0 -> S
    11:11:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> S
    11:11:android.os.Parcelable saveAllState():0 -> S
    12:12:androidx.fragment.app.FragmentState androidx.fragment.app.FragmentStateManager.saveState():0:0 -> S
    12:12:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> S
    12:12:android.os.Parcelable saveAllState():0 -> S
    13:13:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0:0 -> S
    13:13:android.os.Parcelable saveAllState():0 -> S
    14:14:android.os.Parcelable saveAllState():0:0 -> S
    15:15:java.util.ArrayList androidx.fragment.app.FragmentStore.saveAddedFragments():0:0 -> S
    15:15:android.os.Parcelable saveAllState():0 -> S
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:16:android.os.Parcelable saveAllState():0:0 -> S
    17:17:java.util.ArrayList androidx.fragment.app.FragmentStore.saveAddedFragments():0:0 -> S
    17:17:android.os.Parcelable saveAllState():0 -> S
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> T
    void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> U
    void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> V
    void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> W
    void showFragment(androidx.fragment.app.Fragment) -> X
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> Y
    1:1:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager):0 -> Y
    1:1:void startPendingDeferredFragments():0 -> Y
    2:2:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager):0:0 -> Y
    2:2:void startPendingDeferredFragments():0 -> Y
    1:1:void androidx.activity.OnBackPressedCallback.setEnabled(boolean):0:0 -> Z
    1:1:void updateOnBackPressedCallbackEnabled():0 -> Z
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void updateOnBackPressedCallbackEnabled():0:0 -> Z
    3:3:int getBackStackEntryCount():0:0 -> Z
    3:3:void updateOnBackPressedCallbackEnabled():0 -> Z
    4:4:void updateOnBackPressedCallbackEnabled():0:0 -> Z
    5:5:void androidx.activity.OnBackPressedCallback.setEnabled(boolean):0:0 -> Z
    5:5:void updateOnBackPressedCallbackEnabled():0 -> Z
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void updateOnBackPressedCallbackEnabled():0:0 -> Z
    androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> a
    1:1:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    2:2:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener):0:0 -> b
    2:2:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    3:3:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    4:4:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment):0:0 -> b
    4:4:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getChildNonConfig(androidx.fragment.app.Fragment):0:0 -> b
    5:5:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment):0 -> b
    5:5:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    6:6:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    7:7:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> b
    7:7:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    8:8:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    9:9:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> b
    9:9:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    11:11:void androidx.fragment.app.FragmentStore.setNonConfig(androidx.fragment.app.FragmentManagerViewModel):0:0 -> b
    11:11:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    void attachFragment(androidx.fragment.app.Fragment) -> c
    void cleanupExec() -> d
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> e
    1:1:java.util.Set collectAllSpecialEffectsController():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.util.Set collectAllSpecialEffectsController():0:0 -> e
    1:1:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> f
    1:1:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment):0:0 -> f
    3:3:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> f
    3:3:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment):0 -> f
    1:1:void androidx.fragment.app.FragmentStore.removeFragment(androidx.fragment.app.Fragment):0:0 -> g
    1:1:void detachFragment(androidx.fragment.app.Fragment):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void detachFragment(androidx.fragment.app.Fragment):0:0 -> g
    3:3:void androidx.fragment.app.FragmentStore.removeFragment(androidx.fragment.app.Fragment):0:0 -> g
    3:3:void detachFragment(androidx.fragment.app.Fragment):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void dispatchConfigurationChanged(android.content.res.Configuration) -> h
    boolean dispatchContextItemSelected(android.view.MenuItem) -> i
    1:1:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> j
    1:1:void dispatchCreate():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchCreate():0:0 -> j
    1:1:boolean androidx.fragment.app.Fragment.performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> k
    1:1:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0 -> k
    2:2:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> k
    1:1:void androidx.activity.OnBackPressedCallback.remove():0:0 -> l
    1:1:void dispatchDestroy():0 -> l
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dispatchDestroy():0:0 -> l
    void dispatchLowMemory() -> m
    void dispatchMultiWindowModeChanged(boolean) -> n
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> o
    void dispatchOptionsMenuClosed(android.view.Menu) -> p
    1:1:void androidx.fragment.app.Fragment.performPrimaryNavigationFragmentChanged():0:0 -> q
    1:1:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment):0 -> q
    2:2:void dispatchPrimaryNavigationFragmentChanged():0:0 -> q
    2:2:void androidx.fragment.app.Fragment.performPrimaryNavigationFragmentChanged():0 -> q
    2:2:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment):0 -> q
    void dispatchPictureInPictureModeChanged(boolean) -> r
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> s
    1:1:void androidx.fragment.app.FragmentStore.dispatchStateChange(int):0:0 -> t
    1:1:void dispatchStateChange(int):0 -> t
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> t
    2:2:void androidx.fragment.app.FragmentStore.dispatchStateChange(int):0 -> t
    2:2:void dispatchStateChange(int):0 -> t
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void dispatchStateChange(int):0:0 -> t
    void doPendingDeferredStart() -> u
    1:1:void androidx.fragment.app.FragmentStore.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> v
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> v
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> v
    2:2:void androidx.fragment.app.FragmentStore.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> v
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> v
    3:3:void androidx.fragment.app.FragmentStore.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> v
    3:3:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> v
    4:4:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> v
    5:5:void androidx.fragment.app.BackStackRecord.dump(java.lang.String,java.io.PrintWriter):0:0 -> v
    5:5:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> v
    6:6:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> v
    void endAnimatingAwayFragments() -> w
    1:1:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> x
    1:1:void ensureExecReady(boolean):0 -> x
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void ensureExecReady(boolean):0:0 -> x
    3:3:void checkStateLoss():0:0 -> x
    3:3:void ensureExecReady(boolean):0 -> x
    4:4:void ensureExecReady(boolean):0:0 -> x
    1:1:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> y
    1:1:boolean execPendingActions(boolean):0 -> y
    2:2:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> y
    2:2:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0 -> y
    2:2:boolean execPendingActions(boolean):0 -> y
    3:3:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> y
    3:3:boolean execPendingActions(boolean):0 -> y
    4:4:boolean execPendingActions(boolean):0:0 -> y
    5:5:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> y
    5:5:boolean execPendingActions(boolean):0 -> y
    1:1:androidx.fragment.app.Fragment getPrimaryNavigationFragment():0:0 -> z
    1:1:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
    2:2:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> z
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.BackStackRecord.expandOps(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> z
    3:3:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> z
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.BackStackRecord.trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> z
    5:5:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> z
    7:7:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> z
    7:7:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
    8:8:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> z
    9:9:java.util.Set collectChangedControllers(java.util.ArrayList,int,int):0:0 -> z
    9:9:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
    10:10:androidx.fragment.app.SpecialEffectsController androidx.fragment.app.SpecialEffectsController.getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager):0:0 -> z
    10:10:java.util.Set collectChangedControllers(java.util.ArrayList,int,int):0 -> z
    10:10:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
    11:11:java.util.Set collectChangedControllers(java.util.ArrayList,int,int):0:0 -> z
    11:11:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
    12:12:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> z
    13:13:void androidx.fragment.app.SpecialEffectsController.updateOperationDirection(boolean):0:0 -> z
    13:13:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> z
    15:15:void androidx.fragment.app.BackStackRecord.runOnCommitRunnables():0:0 -> z
    15:15:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> z
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.x$c:
    androidx.fragment.app.FragmentManager this$0 -> c
    1:1:void androidx.fragment.app.FragmentManager.handleOnBackPressed():0:0 -> a
    1:1:void handleOnBackPressed():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:boolean androidx.activity.OnBackPressedCallback.isEnabled():0:0 -> a
    2:2:void androidx.fragment.app.FragmentManager.handleOnBackPressed():0 -> a
    2:2:void handleOnBackPressed():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void androidx.fragment.app.FragmentManager.handleOnBackPressed():0:0 -> a
    3:3:void handleOnBackPressed():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.x$a:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    1:1:void onActivityResult(java.lang.Object):0 -> a
    2:2:androidx.fragment.app.FragmentStore androidx.fragment.app.FragmentManager.access$200(androidx.fragment.app.FragmentManager):0:0 -> a
    2:2:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    2:2:void onActivityResult(java.lang.Object):0 -> a
    3:3:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    3:3:void onActivityResult(java.lang.Object):0 -> a
    4:4:int androidx.activity.result.ActivityResult.getResultCode():0:0 -> a
    4:4:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    4:4:void onActivityResult(java.lang.Object):0 -> a
    5:5:android.content.Intent androidx.activity.result.ActivityResult.getData():0:0 -> a
    5:5:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    5:5:void onActivityResult(java.lang.Object):0 -> a
    6:6:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    6:6:void onActivityResult(java.lang.Object):0 -> a
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.x$b:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:void onActivityResult(java.util.Map):0:0 -> a
    1:1:void onActivityResult(java.lang.Object):0 -> a
    2:2:androidx.fragment.app.FragmentStore androidx.fragment.app.FragmentManager.access$200(androidx.fragment.app.FragmentManager):0:0 -> a
    2:2:void onActivityResult(java.util.Map):0 -> a
    2:2:void onActivityResult(java.lang.Object):0 -> a
    3:3:void onActivityResult(java.util.Map):0:0 -> a
    3:3:void onActivityResult(java.lang.Object):0 -> a
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.x$d:
    androidx.fragment.app.FragmentManager this$0 -> a
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.x$e:
    androidx.fragment.app.FragmentManager this$0 -> b
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> a
    1:1:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    2:2:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentContainer.instantiate(android.content.Context,java.lang.String,android.os.Bundle):0:0 -> a
    3:3:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0 -> a
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.Fragment.instantiate(android.content.Context,java.lang.String,android.os.Bundle):0:0 -> a
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.FragmentContainer.instantiate(android.content.Context,java.lang.String,android.os.Bundle):0 -> a
    4:4:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0 -> a
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.x$f:
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.x$g:
    androidx.fragment.app.FragmentManager this$0 -> a
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    0:65535:java.util.Map androidx.fragment.app.FragmentManager.access$000(androidx.fragment.app.FragmentManager):0:0 -> h
    0:65535:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.x$h:
    androidx.fragment.app.Fragment val$parent -> a
    void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> b
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.x$i:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    1:1:void onActivityResult(java.lang.Object):0 -> a
    2:2:androidx.fragment.app.FragmentStore androidx.fragment.app.FragmentManager.access$200(androidx.fragment.app.FragmentManager):0:0 -> a
    2:2:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    2:2:void onActivityResult(java.lang.Object):0 -> a
    3:3:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    3:3:void onActivityResult(java.lang.Object):0 -> a
    4:4:int androidx.activity.result.ActivityResult.getResultCode():0:0 -> a
    4:4:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    4:4:void onActivityResult(java.lang.Object):0 -> a
    5:5:android.content.Intent androidx.activity.result.ActivityResult.getData():0:0 -> a
    5:5:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    5:5:void onActivityResult(java.lang.Object):0 -> a
    6:6:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    6:6:void onActivityResult(java.lang.Object):0 -> a
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.x$j:
    0:65535:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent):0:0 -> a
    0:65535:java.lang.Object parseResult(int,android.content.Intent):0 -> a
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.x$k:
    java.lang.String mWho -> a
    int mRequestCode -> b
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.x$k$a:
    0:65535:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    0:65535:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    0:65535:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int):0:0 -> newArray
    0:65535:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentManager$OpGenerator -> androidx.fragment.app.x$l:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.y:
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.z:
    java.util.ArrayList mLaunchedFragments -> h
    java.util.ArrayList mResults -> g
    java.util.ArrayList mResultKeys -> f
    int mBackStackIndex -> d
    androidx.fragment.app.BackStackState[] mBackStack -> c
    java.util.ArrayList mAdded -> b
    java.util.ArrayList mActive -> a
    java.lang.String mPrimaryNavActiveWho -> e
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.z$a:
    0:65535:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    0:65535:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    0:65535:androidx.fragment.app.FragmentManagerState[] newArray(int):0:0 -> newArray
    0:65535:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.a0:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> h
    java.util.HashMap mRetainedFragments -> b
    boolean mStateAutomaticallySaved -> e
    boolean mHasBeenCleared -> f
    boolean mIsStateSaved -> g
    java.util.HashMap mViewModelStores -> d
    java.util.HashMap mChildNonConfigs -> c
    void onCleared() -> a
    void removeRetainedFragment(androidx.fragment.app.Fragment) -> b
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.a0$a:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.fragment.app.FragmentOnAttachListener -> androidx.fragment.app.b0:
    void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> b
androidx.fragment.app.FragmentState -> androidx.fragment.app.c0:
    java.lang.String mTag -> f
    int mMaxLifecycleState -> l
    boolean mDetached -> i
    boolean mHidden -> k
    int mFragmentId -> d
    int mContainerId -> e
    android.os.Bundle mArguments -> j
    android.os.Bundle mSavedFragmentState -> m
    java.lang.String mClassName -> a
    boolean mRetainInstance -> g
    boolean mRemoving -> h
    java.lang.String mWho -> b
    boolean mFromLayout -> c
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.c0$a:
    0:65535:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    0:65535:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    0:65535:androidx.fragment.app.FragmentState[] newArray(int):0:0 -> newArray
    0:65535:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.d0:
    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mDispatcher -> a
    androidx.fragment.app.FragmentStore mFragmentStore -> b
    int mFragmentManagerState -> e
    androidx.fragment.app.Fragment mFragment -> c
    boolean mMovingToState -> d
    1:1:void activityCreated():0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19}}
    17:17:void activityCreated():0:0 -> a
    18:18:void activityCreated():0:0 -> a
    19:19:void activityCreated():0:0 -> a
    2:2:void activityCreated():0:0 -> a
    3:3:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0:0 -> a
    3:3:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void androidx.fragment.app.Fragment.onActivityCreated(android.os.Bundle):0:0 -> a
    4:4:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    4:4:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void androidx.fragment.app.Fragment.restoreViewState():0:0 -> a
    5:5:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    5:5:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    6:6:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0:0 -> a
    6:6:void androidx.fragment.app.Fragment.restoreViewState():0 -> a
    6:6:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    6:6:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    7:7:void androidx.fragment.app.FragmentViewLifecycleOwner.performRestore(android.os.Bundle):0:0 -> a
    7:7:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0 -> a
    7:7:void androidx.fragment.app.Fragment.restoreViewState():0 -> a
    7:7:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    7:7:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(4)"]}
    8:8:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0:0 -> a
    8:8:void androidx.fragment.app.Fragment.restoreViewState():0 -> a
    8:8:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    8:8:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    9:9:void androidx.fragment.app.Fragment.onViewStateRestored(android.os.Bundle):0:0 -> a
    9:9:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0 -> a
    9:9:void androidx.fragment.app.Fragment.restoreViewState():0 -> a
    9:9:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    9:9:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(4)"]}
    10:10:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0:0 -> a
    10:10:void androidx.fragment.app.Fragment.restoreViewState():0 -> a
    10:10:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    10:10:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    11:11:void androidx.fragment.app.Fragment.restoreViewState():0:0 -> a
    11:11:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    11:11:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    12:12:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0:0 -> a
    12:12:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:13:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0:0 -> a
    13:13:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    13:13:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    14:14:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> a
    14:14:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0 -> a
    14:14:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    14:14:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    15:15:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0:0 -> a
    15:15:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    15:15:void activityCreated():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    16:16:void activityCreated():0:0 -> a
    1:1:int androidx.fragment.app.FragmentStore.findFragmentIndexInContainer(androidx.fragment.app.Fragment):0:0 -> b
    1:1:void addViewToContainer():0 -> b
    2:2:void addViewToContainer():0:0 -> b
    1:1:void attach():0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25}}
    23:23:void attach():0:0 -> c
    24:24:void attach():0:0 -> c
    25:25:void attach():0:0 -> c
    2:2:void attach():0:0 -> c
    3:3:void attach():0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":26,"2":27,"3":28}}
    26:26:void attach():0:0 -> c
    27:27:void attach():0:0 -> c
    28:28:void attach():0:0 -> c
    4:4:void attach():0:0 -> c
    5:5:void attach():0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":29,"2":30,"3":31}}
    29:29:void attach():0:0 -> c
    30:30:void attach():0:0 -> c
    31:31:void attach():0:0 -> c
    6:6:void attach():0:0 -> c
    7:7:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> c
    7:7:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:void attach():0:0 -> c
    9:9:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> c
    9:9:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void attach():0:0 -> c
    11:11:void androidx.fragment.app.Fragment.performAttach():0:0 -> c
    11:11:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:androidx.fragment.app.FragmentContainer androidx.fragment.app.Fragment.createFragmentContainer():0:0 -> c
    12:12:void androidx.fragment.app.Fragment.performAttach():0 -> c
    12:12:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    13:13:void androidx.fragment.app.Fragment.performAttach():0:0 -> c
    13:13:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> c
    14:14:void androidx.fragment.app.Fragment.performAttach():0 -> c
    14:14:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    15:15:void androidx.fragment.app.Fragment.performAttach():0:0 -> c
    15:15:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:16:void androidx.fragment.app.FragmentManager.dispatchOnAttachFragment(androidx.fragment.app.Fragment):0:0 -> c
    16:16:void androidx.fragment.app.Fragment.performAttach():0 -> c
    16:16:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    17:17:void androidx.fragment.app.Fragment.performAttach():0:0 -> c
    17:17:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:18:void androidx.fragment.app.FragmentManager.dispatchAttach():0:0 -> c
    18:18:void androidx.fragment.app.Fragment.performAttach():0 -> c
    18:18:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    19:19:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> c
    19:19:void androidx.fragment.app.FragmentManager.dispatchAttach():0 -> c
    19:19:void androidx.fragment.app.Fragment.performAttach():0 -> c
    19:19:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    20:20:void androidx.fragment.app.FragmentManager.dispatchAttach():0:0 -> c
    20:20:void androidx.fragment.app.Fragment.performAttach():0 -> c
    20:20:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    21:21:void attach():0:0 -> c
    22:22:void androidx.fragment.app.Fragment.performAttach():0:0 -> c
    22:22:void attach():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:androidx.fragment.app.SpecialEffectsController androidx.fragment.app.SpecialEffectsController.getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager):0:0 -> d
    1:1:int computeExpectedState():0 -> d
    2:2:int computeExpectedState():0:0 -> d
    3:3:androidx.fragment.app.Fragment getFragment():0:0 -> d
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    3:3:int computeExpectedState():0 -> d
    4:4:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0:0 -> d
    4:4:int computeExpectedState():0 -> d
    5:5:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController$Operation.getLifecycleImpact():0:0 -> d
    5:5:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    5:5:int computeExpectedState():0 -> d
    6:6:androidx.fragment.app.Fragment getFragment():0:0 -> d
    6:6:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    6:6:int computeExpectedState():0 -> d
    7:7:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation(androidx.fragment.app.Fragment):0:0 -> d
    7:7:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    7:7:int computeExpectedState():0 -> d
    8:8:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> d
    8:8:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation(androidx.fragment.app.Fragment):0 -> d
    8:8:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    8:8:int computeExpectedState():0 -> d
    9:9:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation(androidx.fragment.app.Fragment):0:0 -> d
    9:9:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    9:9:int computeExpectedState():0 -> d
    10:10:boolean androidx.fragment.app.SpecialEffectsController$Operation.isCanceled():0:0 -> d
    10:10:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation(androidx.fragment.app.Fragment):0 -> d
    10:10:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    10:10:int computeExpectedState():0 -> d
    11:11:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController$Operation.getLifecycleImpact():0:0 -> d
    11:11:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    11:11:int computeExpectedState():0 -> d
    12:12:int computeExpectedState():0:0 -> d
    1:1:void create():0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":7,"2":8,"3":9}}
    7:7:void create():0:0 -> e
    8:8:void create():0:0 -> e
    9:9:void create():0:0 -> e
    2:2:void create():0:0 -> e
    3:3:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0:0 -> e
    3:3:void create():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void create():0:0 -> e
    5:5:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0:0 -> e
    5:5:void create():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void create():0:0 -> e
    1:1:void createView():0:0 -> f
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20}}
    18:18:void createView():0:0 -> f
    19:19:void createView():0:0 -> f
    20:20:void createView():0:0 -> f
    2:2:void createView():0:0 -> f
    3:3:androidx.fragment.app.FragmentContainer androidx.fragment.app.FragmentManager.getContainer():0:0 -> f
    3:3:void createView():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void createView():0:0 -> f
    5:5:void createView():0:0 -> f
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":21,"2":22,"3":23}}
    21:21:void createView():0:0 -> f
    22:22:void createView():0:0 -> f
    23:23:void createView():0:0 -> f
    6:6:void createView():0:0 -> f
    7:7:void createView():0:0 -> f
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":24,"2":25,"3":26}}
    24:24:void createView():0:0 -> f
    25:25:void createView():0:0 -> f
    26:26:void createView():0:0 -> f
    8:8:void createView():0:0 -> f
    9:9:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> f
    9:9:void createView():0 -> f
    10:10:void createView():0:0 -> f
    11:11:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> f
    11:11:void createView():0 -> f
    12:12:void createView():0:0 -> f
    13:13:void androidx.fragment.app.Fragment.performViewCreated():0:0 -> f
    13:13:void createView():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:void androidx.fragment.app.FragmentManager.dispatchViewCreated():0:0 -> f
    14:14:void androidx.fragment.app.Fragment.performViewCreated():0 -> f
    14:14:void createView():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    15:15:void createView():0:0 -> f
    16:16:void androidx.fragment.app.Fragment.setPostOnViewCreatedAlpha(float):0:0 -> f
    16:16:void createView():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    17:17:void createView():0:0 -> f
    1:1:void destroy():0:0 -> g
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":21,"2":22,"3":23}}
    21:21:void destroy():0:0 -> g
    22:22:void destroy():0:0 -> g
    23:23:void destroy():0:0 -> g
    2:2:void destroy():0:0 -> g
    3:3:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentStore.getNonConfig():0:0 -> g
    3:3:void destroy():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void destroy():0:0 -> g
    5:5:boolean androidx.fragment.app.FragmentManagerViewModel.shouldDestroy(androidx.fragment.app.Fragment):0:0 -> g
    5:5:void destroy():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void destroy():0:0 -> g
    7:7:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentStore.getNonConfig():0:0 -> g
    7:7:void destroy():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:boolean androidx.fragment.app.FragmentManagerViewModel.isCleared():0:0 -> g
    8:8:void destroy():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> g
    9:9:void destroy():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void destroy():0:0 -> g
    11:11:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentStore.getNonConfig():0:0 -> g
    11:11:void destroy():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:void destroy():0:0 -> g
    13:13:void androidx.fragment.app.FragmentManagerViewModel.clearNonConfigState(androidx.fragment.app.Fragment):0:0 -> g
    13:13:void destroy():0 -> g
    14:14:void destroy():0:0 -> g
    15:15:void androidx.fragment.app.Fragment.performDestroy():0:0 -> g
    15:15:void destroy():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:16:void destroy():0:0 -> g
    17:17:androidx.fragment.app.Fragment getFragment():0:0 -> g
    17:17:void destroy():0 -> g
    18:18:void destroy():0:0 -> g
    19:19:void androidx.fragment.app.Fragment.performDestroy():0:0 -> g
    19:19:void destroy():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:20:void destroy():0:0 -> g
    1:1:void destroyFragmentView():0:0 -> h
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void destroyFragmentView():0:0 -> h
    4:4:void destroyFragmentView():0:0 -> h
    5:5:void destroyFragmentView():0:0 -> h
    2:2:void destroyFragmentView():0:0 -> h
    1:1:void detach():0:0 -> i
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20}}
    18:18:void detach():0:0 -> i
    19:19:void detach():0:0 -> i
    20:20:void detach():0:0 -> i
    2:2:void detach():0:0 -> i
    3:3:void androidx.fragment.app.Fragment.performDetach():0:0 -> i
    3:3:void detach():0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:boolean androidx.fragment.app.FragmentManager.isDestroyed():0:0 -> i
    4:4:void androidx.fragment.app.Fragment.performDetach():0 -> i
    4:4:void detach():0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void androidx.fragment.app.Fragment.performDetach():0:0 -> i
    5:5:void detach():0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void detach():0:0 -> i
    7:7:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentStore.getNonConfig():0:0 -> i
    7:7:void detach():0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:void detach():0:0 -> i
    9:9:boolean androidx.fragment.app.FragmentManagerViewModel.shouldDestroy(androidx.fragment.app.Fragment):0:0 -> i
    9:9:void detach():0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void detach():0:0 -> i
    11:11:void detach():0:0 -> i
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":21,"2":22,"3":23}}
    21:21:void detach():0:0 -> i
    22:22:void detach():0:0 -> i
    23:23:void detach():0:0 -> i
    12:12:void detach():0:0 -> i
    13:13:void androidx.fragment.app.Fragment.initLifecycle():0:0 -> i
    13:13:void androidx.fragment.app.Fragment.initState():0 -> i
    13:13:void detach():0 -> i
    14:14:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> i
    14:14:void androidx.fragment.app.Fragment.initLifecycle():0 -> i
    14:14:void androidx.fragment.app.Fragment.initState():0 -> i
    14:14:void detach():0 -> i
    15:15:void androidx.fragment.app.Fragment.initLifecycle():0:0 -> i
    15:15:void androidx.fragment.app.Fragment.initState():0 -> i
    15:15:void detach():0 -> i
    16:16:void androidx.fragment.app.Fragment.initState():0:0 -> i
    16:16:void detach():0 -> i
    17:17:void androidx.fragment.app.Fragment.performDetach():0:0 -> i
    17:17:void detach():0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void ensureInflatedView():0:0 -> j
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":6,"2":7,"3":8}}
    6:6:void ensureInflatedView():0:0 -> j
    7:7:void ensureInflatedView():0:0 -> j
    8:8:void ensureInflatedView():0:0 -> j
    2:2:void ensureInflatedView():0:0 -> j
    3:3:void androidx.fragment.app.Fragment.performViewCreated():0:0 -> j
    3:3:void ensureInflatedView():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void androidx.fragment.app.FragmentManager.dispatchViewCreated():0:0 -> j
    4:4:void androidx.fragment.app.Fragment.performViewCreated():0 -> j
    4:4:void ensureInflatedView():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void ensureInflatedView():0:0 -> j
    1:1:void moveToExpectedState():0:0 -> k
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30}}
    28:28:void moveToExpectedState():0:0 -> k
    29:29:void moveToExpectedState():0:0 -> k
    30:30:void moveToExpectedState():0:0 -> k
    2:2:androidx.fragment.app.Fragment getFragment():0:0 -> k
    2:2:void moveToExpectedState():0 -> k
    3:3:void moveToExpectedState():0:0 -> k
    4:4:androidx.fragment.app.SpecialEffectsController androidx.fragment.app.SpecialEffectsController.getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager):0:0 -> k
    4:4:void moveToExpectedState():0 -> k
    5:5:void moveToExpectedState():0:0 -> k
    6:6:void androidx.fragment.app.SpecialEffectsController.enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager):0:0 -> k
    6:6:void moveToExpectedState():0 -> k
    7:7:androidx.fragment.app.Fragment getFragment():0:0 -> k
    7:7:void androidx.fragment.app.SpecialEffectsController.enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager):0 -> k
    7:7:void moveToExpectedState():0 -> k
    8:8:void androidx.fragment.app.SpecialEffectsController.enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager):0:0 -> k
    8:8:void moveToExpectedState():0 -> k
    9:9:void moveToExpectedState():0:0 -> k
    10:10:androidx.fragment.app.SpecialEffectsController androidx.fragment.app.SpecialEffectsController.getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager):0:0 -> k
    10:10:void moveToExpectedState():0 -> k
    11:11:void moveToExpectedState():0:0 -> k
    12:12:void androidx.fragment.app.SpecialEffectsController.enqueueRemove(androidx.fragment.app.FragmentStateManager):0:0 -> k
    12:12:void moveToExpectedState():0 -> k
    13:13:androidx.fragment.app.Fragment getFragment():0:0 -> k
    13:13:void androidx.fragment.app.SpecialEffectsController.enqueueRemove(androidx.fragment.app.FragmentStateManager):0 -> k
    13:13:void moveToExpectedState():0 -> k
    14:14:void androidx.fragment.app.SpecialEffectsController.enqueueRemove(androidx.fragment.app.FragmentStateManager):0:0 -> k
    14:14:void moveToExpectedState():0 -> k
    15:15:void moveToExpectedState():0:0 -> k
    16:16:androidx.fragment.app.SpecialEffectsController androidx.fragment.app.SpecialEffectsController.getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager):0:0 -> k
    16:16:void moveToExpectedState():0 -> k
    17:17:void moveToExpectedState():0:0 -> k
    18:18:void androidx.fragment.app.SpecialEffectsController.enqueueHide(androidx.fragment.app.FragmentStateManager):0:0 -> k
    18:18:void moveToExpectedState():0 -> k
    19:19:androidx.fragment.app.Fragment getFragment():0:0 -> k
    19:19:void androidx.fragment.app.SpecialEffectsController.enqueueHide(androidx.fragment.app.FragmentStateManager):0 -> k
    19:19:void moveToExpectedState():0 -> k
    20:20:void androidx.fragment.app.SpecialEffectsController.enqueueHide(androidx.fragment.app.FragmentStateManager):0:0 -> k
    20:20:void moveToExpectedState():0 -> k
    21:21:void moveToExpectedState():0:0 -> k
    22:22:void androidx.fragment.app.SpecialEffectsController.enqueueShow(androidx.fragment.app.FragmentStateManager):0:0 -> k
    22:22:void moveToExpectedState():0 -> k
    23:23:androidx.fragment.app.Fragment getFragment():0:0 -> k
    23:23:void androidx.fragment.app.SpecialEffectsController.enqueueShow(androidx.fragment.app.FragmentStateManager):0 -> k
    23:23:void moveToExpectedState():0 -> k
    24:24:void androidx.fragment.app.SpecialEffectsController.enqueueShow(androidx.fragment.app.FragmentStateManager):0:0 -> k
    24:24:void moveToExpectedState():0 -> k
    25:25:void moveToExpectedState():0:0 -> k
    26:26:void androidx.fragment.app.FragmentManager.invalidateMenuForFragment(androidx.fragment.app.Fragment):0:0 -> k
    26:26:void moveToExpectedState():0 -> k
    27:27:void moveToExpectedState():0:0 -> k
    1:1:void pause():0:0 -> l
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":8,"2":9,"3":10}}
    8:8:void pause():0:0 -> l
    9:9:void pause():0:0 -> l
    10:10:void pause():0:0 -> l
    2:2:void pause():0:0 -> l
    3:3:void androidx.fragment.app.Fragment.performPause():0:0 -> l
    3:3:void pause():0 -> l
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void androidx.fragment.app.FragmentManager.dispatchPause():0:0 -> l
    4:4:void androidx.fragment.app.Fragment.performPause():0 -> l
    4:4:void pause():0 -> l
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void androidx.fragment.app.Fragment.performPause():0:0 -> l
    5:5:void pause():0 -> l
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void pause():0:0 -> l
    7:7:void androidx.fragment.app.Fragment.performPause():0:0 -> l
    7:7:void pause():0 -> l
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void restoreState(java.lang.ClassLoader) -> m
    1:1:void resume():0:0 -> n
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14}}
    12:12:void resume():0:0 -> n
    13:13:void resume():0:0 -> n
    14:14:void resume():0:0 -> n
    2:2:void resume():0:0 -> n
    3:3:android.view.View androidx.fragment.app.Fragment.getFocusedView():0:0 -> n
    3:3:void resume():0 -> n
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:boolean isFragmentViewChild(android.view.View):0:0 -> n
    4:4:void resume():0 -> n
    5:5:void resume():0:0 -> n
    6:6:void androidx.fragment.app.Fragment.performResume():0:0 -> n
    6:6:void resume():0 -> n
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void androidx.fragment.app.FragmentManager.dispatchResume():0:0 -> n
    7:7:void androidx.fragment.app.Fragment.performResume():0 -> n
    7:7:void resume():0 -> n
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    8:8:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> n
    8:8:void androidx.fragment.app.FragmentManager.dispatchResume():0 -> n
    8:8:void androidx.fragment.app.Fragment.performResume():0 -> n
    8:8:void resume():0 -> n
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    9:9:void androidx.fragment.app.FragmentManager.dispatchResume():0:0 -> n
    9:9:void androidx.fragment.app.Fragment.performResume():0 -> n
    9:9:void resume():0 -> n
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    10:10:void resume():0:0 -> n
    11:11:void androidx.fragment.app.Fragment.performResume():0:0 -> n
    11:11:void resume():0 -> n
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void androidx.fragment.app.FragmentViewLifecycleOwner.performSave(android.os.Bundle):0:0 -> o
    1:1:void saveViewState():0 -> o
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void saveViewState():0:0 -> o
    1:1:void start():0:0 -> p
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12}}
    10:10:void start():0:0 -> p
    11:11:void start():0:0 -> p
    12:12:void start():0:0 -> p
    2:2:void start():0:0 -> p
    3:3:void androidx.fragment.app.Fragment.performStart():0:0 -> p
    3:3:void start():0 -> p
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void androidx.fragment.app.Fragment.onStart():0:0 -> p
    4:4:void androidx.fragment.app.Fragment.performStart():0 -> p
    4:4:void start():0 -> p
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void androidx.fragment.app.Fragment.performStart():0:0 -> p
    5:5:void start():0 -> p
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void androidx.fragment.app.FragmentManager.dispatchStart():0:0 -> p
    6:6:void androidx.fragment.app.Fragment.performStart():0 -> p
    6:6:void start():0 -> p
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    7:7:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> p
    7:7:void androidx.fragment.app.FragmentManager.dispatchStart():0 -> p
    7:7:void androidx.fragment.app.Fragment.performStart():0 -> p
    7:7:void start():0 -> p
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    8:8:void androidx.fragment.app.FragmentManager.dispatchStart():0:0 -> p
    8:8:void androidx.fragment.app.Fragment.performStart():0 -> p
    8:8:void start():0 -> p
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    9:9:void start():0:0 -> p
    1:1:void stop():0:0 -> q
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12}}
    10:10:void stop():0:0 -> q
    11:11:void stop():0:0 -> q
    12:12:void stop():0:0 -> q
    2:2:void stop():0:0 -> q
    3:3:void androidx.fragment.app.Fragment.performStop():0:0 -> q
    3:3:void stop():0 -> q
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void androidx.fragment.app.FragmentManager.dispatchStop():0:0 -> q
    4:4:void androidx.fragment.app.Fragment.performStop():0 -> q
    4:4:void stop():0 -> q
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> q
    5:5:void androidx.fragment.app.FragmentManager.dispatchStop():0 -> q
    5:5:void androidx.fragment.app.Fragment.performStop():0 -> q
    5:5:void stop():0 -> q
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    6:6:void androidx.fragment.app.FragmentManager.dispatchStop():0:0 -> q
    6:6:void androidx.fragment.app.Fragment.performStop():0 -> q
    6:6:void stop():0 -> q
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    7:7:void androidx.fragment.app.Fragment.performStop():0:0 -> q
    7:7:void stop():0 -> q
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:void androidx.fragment.app.Fragment.onStop():0:0 -> q
    8:8:void androidx.fragment.app.Fragment.performStop():0 -> q
    8:8:void stop():0 -> q
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    9:9:void stop():0:0 -> q
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.d0$a:
    android.view.View val$fragmentView -> a
    0:65535:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onViewAttachedToWindow
    0:65535:void onViewAttachedToWindow(android.view.View):0 -> onViewAttachedToWindow
androidx.fragment.app.FragmentStore -> androidx.fragment.app.e0:
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> c
    java.util.HashMap mActive -> b
    java.util.ArrayList mAdded -> a
    void addFragment(androidx.fragment.app.Fragment) -> a
    void burpActive() -> b
    boolean containsActiveFragment(java.lang.String) -> c
    0:65535:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> d
    0:65535:androidx.fragment.app.Fragment findActiveFragment(java.lang.String):0 -> d
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> e
    1:1:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String):0 -> e
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.Fragment.findFragmentByWho(java.lang.String):0:0 -> e
    2:2:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.findFragmentByWho(java.lang.String):0:0 -> e
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.Fragment.findFragmentByWho(java.lang.String):0 -> e
    3:3:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    java.util.List getActiveFragmentStateManagers() -> f
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> g
    1:1:java.util.List getActiveFragments():0 -> g
    2:2:java.util.List getActiveFragments():0:0 -> g
    androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> h
    java.util.List getFragments() -> i
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> j
    1:1:void makeActive(androidx.fragment.app.FragmentStateManager):0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void makeActive(androidx.fragment.app.FragmentStateManager):0:0 -> j
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> k
    1:1:void makeInactive(androidx.fragment.app.FragmentStateManager):0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void makeInactive(androidx.fragment.app.FragmentStateManager):0:0 -> k
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.f0:
    boolean mReorderingAllowed -> o
    java.lang.String mName -> h
    int mBreadCrumbShortTitleRes -> k
    int mBreadCrumbTitleRes -> i
    int mTransition -> f
    int mPopEnterAnim -> d
    int mPopExitAnim -> e
    int mEnterAnim -> b
    int mExitAnim -> c
    java.util.ArrayList mOps -> a
    java.lang.CharSequence mBreadCrumbTitleText -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> l
    java.util.ArrayList mSharedElementTargetNames -> n
    java.util.ArrayList mSharedElementSourceNames -> m
    boolean mAddToBackStack -> g
    void addOp(androidx.fragment.app.FragmentTransaction$Op) -> b
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.f0$a:
    int mPopExitAnim -> f
    androidx.fragment.app.Fragment mFragment -> b
    int mExitAnim -> d
    androidx.lifecycle.Lifecycle$State mCurrentMaxState -> h
    int mPopEnterAnim -> e
    androidx.lifecycle.Lifecycle$State mOldMaxState -> g
    int mEnterAnim -> c
    int mCmd -> a
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.g0:
    androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL -> b
    androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL -> c
    int[] INVERSE_OPS -> a
    1:1:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> a
    1:1:int androidx.collection.SimpleArrayMap.size():0:0 -> b
    1:1:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> b
    void setViewVisibility(java.util.ArrayList,int) -> c
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.h0:
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> c
    boolean canHandle(java.lang.Object) -> d
    java.lang.Object cloneTransition(java.lang.Object) -> e
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> h
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> i
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> k
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> l
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> m
    void setEpicenter(java.lang.Object,android.view.View) -> n
    void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> o
    1:1:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0:0 -> q
    1:1:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> q
    2:2:boolean androidx.fragment.app.FragmentTransitionImpl.containedBeforeIndex(java.util.List,android.view.View,int):0:0 -> q
    2:2:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0 -> q
    2:2:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> q
    3:3:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0:0 -> q
    3:3:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> q
    4:4:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> q
    4:4:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0 -> q
    4:4:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> q
    5:5:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0:0 -> q
    5:5:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> q
    6:6:boolean androidx.fragment.app.FragmentTransitionImpl.containedBeforeIndex(java.util.List,android.view.View,int):0:0 -> q
    6:6:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0 -> q
    6:6:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> q
    7:7:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> q
    7:7:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0 -> q
    7:7:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> q
    8:8:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0:0 -> q
    8:8:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> q
    9:9:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0:0 -> q
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> r
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> s
    boolean hasSimpleTarget(android.transition.Transition) -> t
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> u
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.h0$a:
    android.graphics.Rect val$epicenter -> a
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.h0$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.h0$c:
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> g
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.i0:
    java.lang.Runnable val$transitionCompleteRunnable -> a
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.h0$d:
    android.graphics.Rect val$epicenter -> a
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.j0:
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> c
    boolean canHandle(java.lang.Object) -> d
    java.lang.Object cloneTransition(java.lang.Object) -> e
    1:1:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> f
    1:1:void getBoundsOnScreen(android.view.View,android.graphics.Rect):0 -> f
    2:2:void getBoundsOnScreen(android.view.View,android.graphics.Rect):0:0 -> f
    boolean isNullOrEmpty(java.util.List) -> g
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> h
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> i
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> j
    1:1:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList):0 -> j
    2:2:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList):0:0 -> j
    3:3:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> j
    3:3:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList):0 -> j
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> k
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> l
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> m
    void setEpicenter(java.lang.Object,android.view.View) -> n
    void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> o
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> p
    1:1:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> p
    2:2:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> p
    3:3:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> p
    3:3:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> p
    4:4:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> p
    5:5:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> p
    5:5:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> p
    6:6:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> p
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> q
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> r
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> s
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.j0$a:
    java.util.ArrayList val$outNames -> e
    java.util.ArrayList val$sharedElementsOut -> d
    java.util.ArrayList val$inNames -> c
    java.util.ArrayList val$sharedElementsIn -> b
    int val$numSharedElements -> a
    1:1:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    3:3:void run():0 -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.k0:
    androidx.lifecycle.ViewModelStore mViewModelStore -> a
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> c
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> b
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> b
    1:1:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> c
    1:1:void initialize():0 -> c
    2:2:void initialize():0:0 -> c
    0:65535:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> g
    0:65535:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    androidx.lifecycle.ViewModelStore getViewModelStore() -> h
androidx.fragment.app.LogWriter -> androidx.fragment.app.l0:
    java.lang.StringBuilder mBuilder -> b
    java.lang.String mTag -> a
    void flushBuilder() -> a
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.o0:
    android.view.ViewGroup mContainer -> a
    boolean mIsContainerPostponed -> e
    java.util.ArrayList mRunningOperations -> c
    java.util.ArrayList mPendingOperations -> b
    boolean mOperationDirectionIsPop -> d
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> a
    1:1:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0:0 -> a
    void executeOperations(java.util.List,boolean) -> b
    1:1:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> c
    1:1:void executePendingOperations():0 -> c
    2:2:void executePendingOperations():0:0 -> c
    3:3:boolean androidx.fragment.app.SpecialEffectsController$Operation.isComplete():0:0 -> c
    3:3:void executePendingOperations():0 -> c
    4:4:void executePendingOperations():0:0 -> c
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> d
    1:1:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment):0:0 -> d
    3:3:boolean androidx.fragment.app.SpecialEffectsController$Operation.isCanceled():0:0 -> d
    3:3:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment):0 -> d
    1:1:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> e
    1:1:void forceCompleteAllOperations():0 -> e
    2:2:void forceCompleteAllOperations():0:0 -> e
    androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> f
    1:1:androidx.fragment.app.SpecialEffectsController androidx.fragment.app.FragmentManager$4.createController(android.view.ViewGroup):0:0 -> g
    1:1:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory):0 -> g
    2:2:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory):0:0 -> g
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> h
    1:1:void markPostponedState():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void markPostponedState():0:0 -> h
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> h
    3:3:void markPostponedState():0 -> h
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> h
    4:4:void markPostponedState():0 -> h
    5:5:void markPostponedState():0:0 -> h
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController$Operation.getLifecycleImpact():0:0 -> i
    1:1:void updateFinalState():0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> i
    2:2:void updateFinalState():0 -> i
    3:3:void updateFinalState():0:0 -> i
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.m0:
    androidx.fragment.app.SpecialEffectsController this$0 -> b
    androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation val$operation -> a
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> run
    1:1:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> run
    2:2:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:void run():0:0 -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.n0:
    androidx.fragment.app.SpecialEffectsController this$0 -> b
    androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation val$operation -> a
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.o0$a:
    androidx.fragment.app.FragmentStateManager mFragmentStateManager -> h
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal):0:0 -> <init>
    void complete() -> c
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController$Operation.getLifecycleImpact():0:0 -> e
    1:1:void onStart():0 -> e
    2:2:void onStart():0:0 -> e
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> e
    3:3:void onStart():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void onStart():0:0 -> e
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> e
    5:5:void onStart():0 -> e
    6:6:void onStart():0:0 -> e
    7:7:float androidx.fragment.app.Fragment.getPostOnViewCreatedAlpha():0:0 -> e
    7:7:void onStart():0 -> e
    8:8:void onStart():0:0 -> e
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.o0$b:
    java.util.List mCompletionListeners -> d
    androidx.fragment.app.SpecialEffectsController$Operation$State mFinalState -> a
    boolean mIsCanceled -> f
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact mLifecycleImpact -> b
    boolean mIsComplete -> g
    java.util.HashSet mSpecialEffectsSignals -> e
    androidx.fragment.app.Fragment mFragment -> c
    void addCompletionListener(java.lang.Runnable) -> a
    1:1:boolean isCanceled():0:0 -> b
    1:1:void cancel():0 -> b
    2:2:void cancel():0:0 -> b
    void complete() -> c
    1:1:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":7,"2":8,"3":9}}
    7:7:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    8:8:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    9:9:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    2:2:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    3:3:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12}}
    10:10:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    11:11:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    12:12:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    4:4:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    5:5:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15}}
    13:13:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    14:14:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    15:15:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    6:6:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> d
    void onStart() -> e
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.p0:
    androidx.fragment.app.SpecialEffectsController$Operation this$0 -> a
    void onCancel() -> a
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact$EnumUnboxingSharedUtility -> androidx.fragment.app.q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int[] $VALUES -> a
    void $r8$clinit$synthetic() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.fragment.app.SpecialEffectsController$Operation$State.applyState(android.view.View) -> a
    androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation$State.from(int) -> b
    androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation$State.from(android.view.View) -> c
    int ordinal(int) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact$EnumUnboxingLocalUtility.stringValueOf(int) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.fragment.app.SpecialEffectsController$Operation$State$EnumUnboxingLocalUtility.stringValueOf(int) -> f
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.SpecialEffectsControllerFactory -> androidx.fragment.app.r0:
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.s0:
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.a:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    1:1:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> a
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0 -> a
    2:2:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0:0 -> a
    3:3:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> a
    3:3:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0 -> a
    androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> b
    1:1:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> c
    4:4:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> c
    5:5:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> c
    2:2:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> c
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.a$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    0:65535:void androidx.lifecycle.ClassesInfoCache$MethodReference.invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
    0:65535:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0 -> a
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.a$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
    1:1:void androidx.lifecycle.MethodCallsLogger.<init>():0:0 -> h
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
androidx.lifecycle.FullLifecycleObserver -> androidx.lifecycle.b:
    void onCreate(androidx.lifecycle.LifecycleOwner) -> a
    void onStop(androidx.lifecycle.LifecycleOwner) -> b
    void onPause(androidx.lifecycle.LifecycleOwner) -> c
    void onResume(androidx.lifecycle.LifecycleOwner) -> d
    void onStart(androidx.lifecycle.LifecycleOwner) -> e
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> g
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver -> b
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$a:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> a
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.c:
    void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger) -> a
androidx.lifecycle.Lifecycle -> androidx.lifecycle.d:
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> b
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.d$a:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> b
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$State -> a
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.d$b:
    androidx.lifecycle.Lifecycle$State getTargetState() -> a
    androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> b
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.d$c:
    androidx.lifecycle.Lifecycle$State INITIALIZED -> b
    androidx.lifecycle.Lifecycle$State DESTROYED -> a
    androidx.lifecycle.Lifecycle$State[] $VALUES -> f
    androidx.lifecycle.Lifecycle$State RESUMED -> e
    androidx.lifecycle.Lifecycle$State STARTED -> d
    androidx.lifecycle.Lifecycle$State CREATED -> c
    boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> a
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.e:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.f:
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.g:
    androidx.lifecycle.Lifecycle getLifecycle() -> a
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.h:
    androidx.lifecycle.Lifecycle$State mState -> b
    androidx.arch.core.internal.FastSafeIterableMap mObserverMap -> a
    boolean mHandlingEvent -> e
    java.util.ArrayList mParentStates -> g
    java.lang.ref.WeakReference mLifecycleOwner -> c
    boolean mNewEventOccurred -> f
    int mAddingObserverCounter -> d
    boolean mEnforceMainThread -> h
    0:65535:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
    0:65535:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
    1:1:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    4:4:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    5:5:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    2:2:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> b
    1:1:java.util.Map$Entry androidx.arch.core.internal.FastSafeIterableMap.ceil(java.lang.Object):0:0 -> c
    1:1:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> c
    2:2:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0 -> c
    3:3:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0:0 -> c
    void enforceMainThreadIfNeeded(java.lang.String) -> d
    void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> e
    androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> f
    void moveToState(androidx.lifecycle.Lifecycle$State) -> g
    void popParentState() -> h
    void pushParentState(androidx.lifecycle.Lifecycle$State) -> i
    void setCurrentState(androidx.lifecycle.Lifecycle$State) -> j
    1:1:boolean isSynced():0:0 -> k
    1:1:void sync():0 -> k
    2:2:int androidx.arch.core.internal.SafeIterableMap.size():0:0 -> k
    2:2:boolean isSynced():0 -> k
    2:2:void sync():0 -> k
    3:3:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.eldest():0:0 -> k
    3:3:boolean isSynced():0 -> k
    3:3:void sync():0 -> k
    4:4:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> k
    4:4:boolean isSynced():0 -> k
    4:4:void sync():0 -> k
    5:5:boolean isSynced():0:0 -> k
    5:5:void sync():0 -> k
    6:6:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.newest():0:0 -> k
    6:6:boolean isSynced():0 -> k
    6:6:void sync():0 -> k
    7:7:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> k
    7:7:boolean isSynced():0 -> k
    7:7:void sync():0 -> k
    8:8:boolean isSynced():0:0 -> k
    8:8:void sync():0 -> k
    9:9:void sync():0:0 -> k
    10:10:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.eldest():0:0 -> k
    10:10:void sync():0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:11:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> k
    11:11:void sync():0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:void sync():0:0 -> k
    13:13:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    13:13:void sync():0 -> k
    14:14:java.util.Iterator androidx.arch.core.internal.SafeIterableMap.descendingIterator():0:0 -> k
    14:14:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> k
    14:14:void sync():0 -> k
    15:15:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    15:15:void sync():0 -> k
    16:16:androidx.lifecycle.Lifecycle$Event androidx.lifecycle.Lifecycle$Event.downFrom(androidx.lifecycle.Lifecycle$State):0:0 -> k
    16:16:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> k
    16:16:void sync():0 -> k
    17:17:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    17:17:void sync():0 -> k
    18:18:void sync():0:0 -> k
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":29,"2":30,"3":31}}
    29:29:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    29:29:void sync():0 -> k
    30:30:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    30:30:void sync():0 -> k
    31:31:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    31:31:void sync():0 -> k
    19:19:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    19:19:void sync():0 -> k
    20:20:void sync():0:0 -> k
    21:21:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.newest():0:0 -> k
    21:21:void sync():0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    22:22:void sync():0:0 -> k
    23:23:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> k
    23:23:void sync():0 -> k
    24:24:void sync():0:0 -> k
    25:25:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    25:25:void sync():0 -> k
    26:26:void sync():0:0 -> k
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":32,"2":33,"3":34}}
    32:32:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    32:32:void sync():0 -> k
    33:33:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    33:33:void sync():0 -> k
    34:34:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    34:34:void sync():0 -> k
    27:27:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> k
    27:27:void sync():0 -> k
    28:28:void sync():0:0 -> k
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.h$a:
    androidx.lifecycle.Lifecycle$State mState -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> b
    1:1:androidx.lifecycle.LifecycleEventObserver androidx.lifecycle.Lifecycling.lifecycleEventObserver(java.lang.Object):0:0 -> <init>
    1:1:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State):0 -> <init>
    2:2:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State):0:0 -> <init>
    void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleRegistryOwner -> androidx.lifecycle.i:
    androidx.lifecycle.LifecycleRegistry getLifecycle() -> a
androidx.lifecycle.Lifecycling -> androidx.lifecycle.j:
    java.util.Map sCallbackCache -> a
    java.util.Map sClassToAdapters -> b
    androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> a
    java.lang.String getAdapterName(java.lang.String) -> b
    1:1:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    1:1:int getObserverConstructorType(java.lang.Class):0 -> c
    2:2:java.lang.reflect.Constructor generatedConstructor(java.lang.Class):0:0 -> c
    2:2:int resolveObserverCallbackType(java.lang.Class):0 -> c
    2:2:int getObserverConstructorType(java.lang.Class):0 -> c
    3:3:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    3:3:int getObserverConstructorType(java.lang.Class):0 -> c
    4:4:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0:0 -> c
    4:4:int resolveObserverCallbackType(java.lang.Class):0 -> c
    4:4:int getObserverConstructorType(java.lang.Class):0 -> c
    5:5:java.lang.reflect.Method[] androidx.lifecycle.ClassesInfoCache.getDeclaredMethods(java.lang.Class):0:0 -> c
    5:5:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0 -> c
    5:5:int resolveObserverCallbackType(java.lang.Class):0 -> c
    5:5:int getObserverConstructorType(java.lang.Class):0 -> c
    6:6:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0:0 -> c
    6:6:int resolveObserverCallbackType(java.lang.Class):0 -> c
    6:6:int getObserverConstructorType(java.lang.Class):0 -> c
    7:7:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    7:7:int getObserverConstructorType(java.lang.Class):0 -> c
    8:8:boolean isLifecycleParent(java.lang.Class):0:0 -> c
    8:8:int resolveObserverCallbackType(java.lang.Class):0 -> c
    8:8:int getObserverConstructorType(java.lang.Class):0 -> c
    9:9:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    9:9:int getObserverConstructorType(java.lang.Class):0 -> c
    10:10:boolean isLifecycleParent(java.lang.Class):0:0 -> c
    10:10:int resolveObserverCallbackType(java.lang.Class):0 -> c
    10:10:int getObserverConstructorType(java.lang.Class):0 -> c
    11:11:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    11:11:int getObserverConstructorType(java.lang.Class):0 -> c
    12:12:int getObserverConstructorType(java.lang.Class):0:0 -> c
    13:13:java.lang.reflect.Method[] androidx.lifecycle.ClassesInfoCache.getDeclaredMethods(java.lang.Class):0:0 -> c
    13:13:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0 -> c
    13:13:int resolveObserverCallbackType(java.lang.Class):0 -> c
    13:13:int getObserverConstructorType(java.lang.Class):0 -> c
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    java.lang.Object NOT_SET -> j
    java.lang.Object mPendingData -> f
    boolean mDispatchInvalidated -> i
    java.lang.Object mData -> e
    androidx.arch.core.internal.SafeIterableMap mObservers -> b
    int mVersion -> g
    java.lang.Object mDataLock -> a
    boolean mDispatchingValue -> h
    int mActiveCount -> c
    boolean mChangingActiveState -> d
    void assertMainThread(java.lang.String) -> a
    void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> b
    void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> c
    void onActive() -> d
    void onInactive() -> e
    void removeObserver(androidx.lifecycle.Observer) -> f
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    androidx.lifecycle.LiveData this$0 -> f
    androidx.lifecycle.LifecycleOwner mOwner -> e
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> h
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
    3:3:boolean shouldBeActive():0:0 -> h
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    4:4:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> h
    4:4:boolean shouldBeActive():0 -> h
    4:4:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    5:5:boolean shouldBeActive():0:0 -> h
    5:5:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    6:6:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
    7:7:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> h
    7:7:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void detachObserver() -> i
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> j
    1:1:boolean shouldBeActive():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:boolean shouldBeActive():0:0 -> j
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$a:
    androidx.lifecycle.Observer mObserver -> a
    androidx.lifecycle.LiveData this$0 -> d
    boolean mActive -> b
    int mLastVersion -> c
    1:1:void androidx.lifecycle.LiveData.changeActiveCounter(int):0:0 -> f
    1:1:void activeStateChanged(boolean):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void activeStateChanged(boolean):0:0 -> f
    3:3:void androidx.lifecycle.LiveData.changeActiveCounter(int):0:0 -> f
    3:3:void activeStateChanged(boolean):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void detachObserver() -> i
    boolean shouldBeActive() -> j
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.k:
    java.util.Map mCalledMethods -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void $r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void org.godotengine.godot.vulkan.VkRenderer.<init>():0:0 -> <init>
    2:2:void $r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:org.godotengine.godot.plugin.GodotPluginRegistry org.godotengine.godot.plugin.GodotPluginRegistry.getPluginRegistry():0:0 -> <init>
    3:3:void org.godotengine.godot.vulkan.VkRenderer.<init>():0 -> <init>
    3:3:void $r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    4:4:void org.godotengine.godot.vulkan.VkRenderer.<init>():0:0 -> <init>
    4:4:void $r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    5:5:org.godotengine.godot.plugin.GodotPluginRegistry org.godotengine.godot.plugin.GodotPluginRegistry.getPluginRegistry():0:0 -> <init>
    5:5:void org.godotengine.godot.vulkan.VkRenderer.<init>():0 -> <init>
    5:5:void $r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void org.godotengine.godot.vulkan.VkRenderer.onVkDrawFrame() -> a
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.l:
    0:65535:void androidx.lifecycle.LiveData.setValue(java.lang.Object):0:0 -> g
    0:65535:void setValue(java.lang.Object):0 -> g
androidx.lifecycle.Observer -> androidx.lifecycle.m:
    void onChanged(java.lang.Object) -> a
androidx.lifecycle.OnLifecycleEvent -> androidx.lifecycle.n:
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    java.lang.Object mWrapped -> a
    0:65535:void androidx.lifecycle.ClassesInfoCache$CallbackInfo.invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> h
    0:65535:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.lifecycle.ReportFragment -> androidx.lifecycle.o:
    void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> a
    void dispatch(androidx.lifecycle.Lifecycle$Event) -> b
    void injectIfNeededIn(android.app.Activity) -> c
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.o$a:
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    boolean mIsAttached -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    androidx.lifecycle.Lifecycle val$lifecycle -> a
    androidx.savedstate.SavedStateRegistry val$registry -> b
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$a:
    1:1:java.util.Set androidx.lifecycle.ViewModelStore.keys():0:0 -> a
    1:1:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    2:2:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
    3:3:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> a
    3:3:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    4:4:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
    5:5:java.lang.Object androidx.lifecycle.ViewModel.getTag(java.lang.String):0:0 -> a
    5:5:void androidx.lifecycle.SavedStateHandleController.attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> a
    5:5:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    6:6:void androidx.lifecycle.SavedStateHandleController.attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> a
    6:6:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    7:7:boolean androidx.lifecycle.SavedStateHandleController.isAttached():0:0 -> a
    7:7:void androidx.lifecycle.SavedStateHandleController.attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> a
    7:7:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    8:8:void androidx.lifecycle.SavedStateHandleController.attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> a
    8:8:void androidx.lifecycle.SavedStateHandleController.attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> a
    8:8:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    9:9:java.lang.Object androidx.lifecycle.ViewModel.getTag(java.lang.String):0:0 -> a
    9:9:void androidx.lifecycle.SavedStateHandleController.attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> a
    9:9:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    10:10:java.util.Set androidx.lifecycle.ViewModelStore.keys():0:0 -> a
    10:10:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    11:11:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    androidx.lifecycle.GeneratedAdapter mGeneratedAdapter -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.lifecycle.ViewModel -> androidx.lifecycle.p:
    java.util.Map mBagOfTags -> a
    void onCleared() -> a
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.q:
    androidx.lifecycle.ViewModelStore mViewModelStore -> b
    androidx.lifecycle.ViewModelProvider$Factory mFactory -> a
    1:1:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class):0:0 -> a
    1:1:androidx.lifecycle.ViewModel get(java.lang.Class):0 -> a
    2:2:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> a
    2:2:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class):0 -> a
    2:2:androidx.lifecycle.ViewModel get(java.lang.Class):0 -> a
    3:3:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class):0:0 -> a
    3:3:androidx.lifecycle.ViewModel get(java.lang.Class):0 -> a
    4:4:void androidx.lifecycle.ViewModelStore.put(java.lang.String,androidx.lifecycle.ViewModel):0:0 -> a
    4:4:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class):0 -> a
    4:4:androidx.lifecycle.ViewModel get(java.lang.Class):0 -> a
    5:5:androidx.lifecycle.ViewModel get(java.lang.Class):0:0 -> a
androidx.lifecycle.ViewModelProvider$Factory -> androidx.lifecycle.q$a:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.q$b:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
    androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> b
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.q$c:
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.r:
    java.util.HashMap mMap -> a
    1:1:void androidx.lifecycle.ViewModel.clear():0:0 -> a
    1:1:void clear():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.lifecycle.ViewModel.closeWithRuntimeException(java.lang.Object):0:0 -> a
    2:2:void androidx.lifecycle.ViewModel.clear():0 -> a
    2:2:void clear():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void androidx.lifecycle.ViewModel.clear():0:0 -> a
    3:3:void clear():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void clear():0:0 -> a
androidx.lifecycle.ViewModelStoreOwner -> androidx.lifecycle.s:
    androidx.lifecycle.ViewModelStore getViewModelStore() -> h
androidx.loader.app.LoaderManager -> l.a:
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> b
androidx.loader.app.LoaderManagerImpl -> l.b:
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> a
    androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
    1:1:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> <init>
    1:1:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    2:2:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0:0 -> <init>
    1:1:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:int androidx.collection.SparseArrayCompat.size():0:0 -> a
    2:2:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    3:3:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    3:3:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:int androidx.collection.SparseArrayCompat.size():0:0 -> a
    4:4:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:java.lang.Object androidx.collection.SparseArrayCompat.valueAt(int):0:0 -> a
    5:5:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    6:6:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    6:6:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:int androidx.collection.SparseArrayCompat.keyAt(int):0:0 -> a
    7:7:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    7:7:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    8:8:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    8:8:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:void androidx.loader.app.LoaderManagerImpl$LoaderInfo.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    9:9:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    9:9:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> l.b$a:
    void onActive() -> d
    void onInactive() -> e
    void removeObserver(androidx.lifecycle.Observer) -> f
    void setValue(java.lang.Object) -> g
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> l.b$b:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> c
    androidx.collection.SparseArrayCompat mLoaders -> b
    1:1:int androidx.collection.SparseArrayCompat.size():0:0 -> a
    1:1:void onCleared():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.collection.SparseArrayCompat.clear():0:0 -> a
    2:2:void onCleared():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:java.lang.Object androidx.collection.SparseArrayCompat.valueAt(int):0:0 -> a
    3:3:void onCleared():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void onCleared():0:0 -> a
    5:5:androidx.loader.content.Loader androidx.loader.app.LoaderManagerImpl$LoaderInfo.destroy(boolean):0:0 -> a
    5:5:void onCleared():0 -> a
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> l.b$b$a:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    1:1:void reflectiveNew(java.lang.String):0:0 -> h
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":5,"2":6,"3":7}}
    5:5:void reflectiveNew(java.lang.String):0:0 -> h
    5:5:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    6:6:void reflectiveNew(java.lang.String):0:0 -> h
    6:6:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    7:7:void reflectiveNew(java.lang.String):0:0 -> h
    7:7:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    3:3:void reflectiveNew(java.lang.String):0:0 -> h
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> h
    4:4:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> h
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$a:
    java.util.Set mClasses -> a
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.a:
    android.os.Bundle mRestoredState -> b
    androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider -> d
    boolean mAllowingSavingState -> e
    androidx.arch.core.internal.SafeIterableMap mComponents -> a
    boolean mRestored -> c
    android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> a
    1:1:java.lang.Object androidx.arch.core.internal.SafeIterableMap.putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> b
    1:1:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider):0:0 -> b
    1:1:void androidx.savedstate.Recreator$SavedStateProvider.add(java.lang.String):0:0 -> c
    1:1:void runOnNextRecreation(java.lang.Class):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void runOnNextRecreation(java.lang.Class):0:0 -> c
    3:3:void runOnNextRecreation(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":5,"2":6,"3":7}}
    5:5:void runOnNextRecreation(java.lang.Class):0:0 -> c
    6:6:void runOnNextRecreation(java.lang.Class):0:0 -> c
    7:7:void runOnNextRecreation(java.lang.Class):0:0 -> c
    4:4:void runOnNextRecreation(java.lang.Class):0:0 -> c
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    androidx.savedstate.SavedStateRegistry this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> h
androidx.savedstate.SavedStateRegistry$AutoRecreated -> androidx.savedstate.a$a:
    void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> a
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> androidx.savedstate.a$b:
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.b:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    androidx.savedstate.SavedStateRegistry mRegistry -> b
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> a
    1:1:void performRestore(android.os.Bundle):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void performRestore(android.os.Bundle):0:0 -> a
    3:3:void androidx.savedstate.SavedStateRegistry.performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle):0:0 -> a
    3:3:void performRestore(android.os.Bundle):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void performRestore(android.os.Bundle):0:0 -> a
    0:65535:void androidx.savedstate.SavedStateRegistry.performSave(android.os.Bundle):0:0 -> b
    0:65535:void performSave(android.os.Bundle):0 -> b
androidx.savedstate.SavedStateRegistryOwner -> androidx.savedstate.c:
    androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> g
androidx.tracing.Trace -> m.a:
    long sTraceTagApp -> a
    java.lang.reflect.Method sIsTagEnabledMethod -> b
    1:1:boolean androidx.tracing.Trace.isEnabledFallback():0:0 -> a
    1:1:boolean isEnabled():0 -> a
    2:2:void androidx.tracing.Trace.handleException(java.lang.String,java.lang.Exception):0:0 -> a
    2:2:boolean androidx.tracing.Trace.isEnabledFallback():0 -> a
    2:2:boolean isEnabled():0 -> a
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    0:65535:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    0:65535:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    0:65535:androidx.versionedparcelable.ParcelImpl[] newArray(int):0:0 -> newArray
    0:65535:java.lang.Object[] newArray(int):0 -> newArray
androidx.versionedparcelable.VersionedParcel -> n.a:
    androidx.collection.ArrayMap mParcelizerCache -> c
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    void closeField() -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> c
    1:1:java.lang.Class findParcelClass(java.lang.Class):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Class findParcelClass(java.lang.Class):0:0 -> c
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> d
    1:1:java.lang.reflect.Method getReadMethod(java.lang.String):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> d
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> e
    1:1:java.lang.reflect.Method getWriteMethod(java.lang.Class):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> e
    boolean readBoolean() -> f
    byte[] readByteArray() -> g
    java.lang.CharSequence readCharSequence() -> h
    boolean readField(int) -> i
    int readInt() -> j
    int readInt(int,int) -> k
    android.os.Parcelable readParcelable() -> l
    android.os.Parcelable readParcelable(android.os.Parcelable,int) -> m
    java.lang.String readString() -> n
    0:65535:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> o
    0:65535:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> o
    void setOutputField(int) -> p
    void writeBoolean(boolean) -> q
    void writeByteArray(byte[]) -> r
    void writeCharSequence(java.lang.CharSequence) -> s
    void writeInt(int) -> t
    void writeInt(int,int) -> u
    void writeParcelable(android.os.Parcelable) -> v
    void writeParcelable(android.os.Parcelable,int) -> w
    void writeString(java.lang.String) -> x
    1:1:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> y
    1:1:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> y
    2:2:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> y
    3:3:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> y
    3:3:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> y
    4:4:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> y
    5:5:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> y
    5:5:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> y
    6:6:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> y
    6:6:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> y
androidx.versionedparcelable.VersionedParcelParcel -> n.b:
    android.util.SparseIntArray mPositionLookup -> d
    java.lang.String mPrefix -> h
    int mNextRead -> j
    android.os.Parcel mParcel -> e
    int mFieldId -> k
    int mCurrentField -> i
    int mOffset -> f
    int mEnd -> g
    void closeField() -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    boolean readBoolean() -> f
    byte[] readByteArray() -> g
    java.lang.CharSequence readCharSequence() -> h
    boolean readField(int) -> i
    int readInt() -> j
    android.os.Parcelable readParcelable() -> l
    java.lang.String readString() -> n
    void setOutputField(int) -> p
    void writeBoolean(boolean) -> q
    void writeByteArray(byte[]) -> r
    void writeCharSequence(java.lang.CharSequence) -> s
    void writeInt(int) -> t
    void writeParcelable(android.os.Parcelable) -> v
    void writeString(java.lang.String) -> x
androidx.versionedparcelable.VersionedParcelable -> n.c:
com.android.vending.licensing.ILicenseResultListener -> com.android.vending.licensing.a:
com.android.vending.licensing.ILicenseResultListener$Stub -> com.android.vending.licensing.a$a:
    1:1:void com.google.android.vending.licensing.LicenseChecker$ResultListener.verifyLicense(int,java.lang.String,java.lang.String):0:0 -> onTransact
    1:1:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    2:2:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
com.android.vending.licensing.ILicensingService -> com.android.vending.licensing.ILicensingService:
    void checkLicense(long,java.lang.String,com.android.vending.licensing.ILicenseResultListener) -> a
com.android.vending.licensing.ILicensingService$Stub -> com.android.vending.licensing.ILicensingService$a:
    int $r8$clinit -> a
com.android.vending.licensing.ILicensingService$Stub$Proxy -> com.android.vending.licensing.ILicensingService$a$a:
    android.os.IBinder mRemote -> a
    void checkLicense(long,java.lang.String,com.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.expansion.downloader.DownloadProgressInfo -> o.a:
    long mOverallProgress -> b
    float mCurrentSpeed -> d
    long mOverallTotal -> a
    long mTimeRemaining -> c
com.google.android.vending.expansion.downloader.DownloadProgressInfo$1 -> o.a$a:
    0:65535:com.google.android.vending.expansion.downloader.DownloadProgressInfo com.google.android.vending.expansion.downloader.DownloadProgressInfo$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    0:65535:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    0:65535:com.google.android.vending.expansion.downloader.DownloadProgressInfo[] com.google.android.vending.expansion.downloader.DownloadProgressInfo$1.newArray(int):0:0 -> newArray
    0:65535:java.lang.Object[] newArray(int):0 -> newArray
com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Proxy -> o.b:
    android.os.Messenger mServiceMessenger -> a
    void onServiceConnected(android.os.Messenger) -> b
    0:65535:void com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Proxy.send(int,android.os.Bundle):0:0 -> c
    0:65535:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0 -> c
    0:65535:void com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Proxy.send(int,android.os.Bundle):0:0 -> d
    0:65535:void onDownloadStateChanged(int):0 -> d
com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Stub -> o.c:
    android.os.Messenger mMessenger -> f
    com.google.android.vending.expansion.downloader.IDownloaderClient mItf -> a
    android.os.Messenger mServiceMessenger -> d
    java.lang.Class mDownloaderServiceClass -> b
    android.content.Context mContext -> e
    boolean mBound -> c
    android.content.ServiceConnection mConnection -> g
    void connect(android.content.Context) -> a
    void disconnect(android.content.Context) -> b
com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Stub$1 -> o.c$a:
    com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Stub this$0 -> a
com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Stub$MessengerHandlerClient -> o.c$b:
    java.lang.ref.WeakReference mDownloader -> a
    0:65535:void com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Stub.handleMessage(android.os.Message):0:0 -> handleMessage
    0:65535:void handleMessage(android.os.Message):0 -> handleMessage
com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller$Stub -> o.d:
    android.os.Messenger mMessenger -> b
    com.google.android.vending.expansion.downloader.IDownloaderService mItf -> a
com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller$Stub$MessengerHandlerServer -> o.d$a:
    java.lang.ref.WeakReference mDownloader -> a
    0:65535:void com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller$Stub.handleMessage(android.os.Message):0:0 -> handleMessage
    0:65535:void handleMessage(android.os.Message):0 -> handleMessage
com.google.android.vending.expansion.downloader.Helpers -> o.e:
    java.util.Random sRandom -> a
    boolean doesFileExist(android.content.Context,java.lang.String,long,boolean) -> a
    1:1:java.lang.String com.google.android.vending.expansion.downloader.Helpers.getSaveFilePath(android.content.Context):0:0 -> b
    1:1:java.lang.String generateSaveFileName(android.content.Context,java.lang.String):0 -> b
    2:2:java.lang.String generateSaveFileName(android.content.Context,java.lang.String):0:0 -> b
    long getAvailableBytes(java.io.File) -> c
    java.lang.String getDownloadProgressString(long,long) -> d
    int getDownloaderStringResourceIDFromState(int) -> e
    java.io.File getFilesystemRoot(java.lang.String) -> f
    java.lang.String getSaveFilePath(android.content.Context) -> g
    java.lang.String getTimeRemaining(long) -> h
com.google.android.vending.expansion.downloader.IDownloaderClient -> o.f:
    void onServiceConnected(android.os.Messenger) -> b
    void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo) -> c
    void onDownloadStateChanged(int) -> d
com.google.android.vending.expansion.downloader.IDownloaderService -> o.g:
    void requestPauseDownload() -> a
    void requestDownloadStatus() -> b
    void requestContinueDownload() -> c
    void onClientUpdated(android.os.Messenger) -> d
    void setDownloadFlags(int) -> e
    void requestAbortDownload() -> f
com.google.android.vending.expansion.downloader.impl.CustomIntentService -> p.a:
    android.os.Looper mServiceLooper -> c
    java.lang.String mName -> a
    com.google.android.vending.expansion.downloader.impl.CustomIntentService$ServiceHandler mServiceHandler -> b
    1:1:void onCreate():0:0 -> onCreate
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void onCreate():0:0 -> onCreate
    4:4:void onCreate():0:0 -> onCreate
    5:5:void onCreate():0:0 -> onCreate
    2:2:void onCreate():0:0 -> onCreate
com.google.android.vending.expansion.downloader.impl.CustomIntentService$ServiceHandler -> p.a$a:
    com.google.android.vending.expansion.downloader.impl.CustomIntentService this$0 -> a
    1:1:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0:0 -> handleMessage
    1:1:void handleMessage(android.os.Message):0 -> handleMessage
    2:2:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0:0 -> handleMessage
    2:2:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    2:2:void handleMessage(android.os.Message):0 -> handleMessage
    3:3:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setContentIntent(android.app.PendingIntent):0:0 -> handleMessage
    3:3:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0 -> handleMessage
    3:3:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    3:3:void handleMessage(android.os.Message):0 -> handleMessage
    4:4:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0:0 -> handleMessage
    4:4:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    4:4:void handleMessage(android.os.Message):0 -> handleMessage
    5:5:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setContentIntent(android.app.PendingIntent):0:0 -> handleMessage
    5:5:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0 -> handleMessage
    5:5:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    5:5:void handleMessage(android.os.Message):0 -> handleMessage
    6:6:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0:0 -> handleMessage
    6:6:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    6:6:void handleMessage(android.os.Message):0 -> handleMessage
    7:7:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0:0 -> handleMessage
    7:7:void handleMessage(android.os.Message):0 -> handleMessage
    8:8:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0:0 -> handleMessage
    8:8:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    8:8:void handleMessage(android.os.Message):0 -> handleMessage
    9:9:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setContentIntent(android.app.PendingIntent):0:0 -> handleMessage
    9:9:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0 -> handleMessage
    9:9:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    9:9:void handleMessage(android.os.Message):0 -> handleMessage
    10:10:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0:0 -> handleMessage
    10:10:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    10:10:void handleMessage(android.os.Message):0 -> handleMessage
    11:11:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setContentIntent(android.app.PendingIntent):0:0 -> handleMessage
    11:11:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0 -> handleMessage
    11:11:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    11:11:void handleMessage(android.os.Message):0 -> handleMessage
    12:12:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setClientIntent(android.app.PendingIntent):0:0 -> handleMessage
    12:12:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    12:12:void handleMessage(android.os.Message):0 -> handleMessage
    13:13:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0:0 -> handleMessage
    13:13:void handleMessage(android.os.Message):0 -> handleMessage
    14:14:boolean com.google.android.vending.expansion.downloader.impl.DownloaderService.isLVLCheckRequired(com.google.android.vending.expansion.downloader.impl.DownloadsDB,android.content.pm.PackageInfo):0:0 -> handleMessage
    14:14:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0 -> handleMessage
    14:14:void handleMessage(android.os.Message):0 -> handleMessage
    15:15:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0:0 -> handleMessage
    15:15:void handleMessage(android.os.Message):0 -> handleMessage
    16:16:void handleMessage(android.os.Message):0:0 -> handleMessage
    17:17:boolean com.google.android.vending.expansion.downloader.impl.DownloaderService.shouldStop():0:0 -> handleMessage
    17:17:void handleMessage(android.os.Message):0 -> handleMessage
    18:18:void handleMessage(android.os.Message):0:0 -> handleMessage
    19:19:void com.google.android.vending.expansion.downloader.impl.DownloaderService.onHandleIntent(android.content.Intent):0:0 -> handleMessage
    19:19:void handleMessage(android.os.Message):0 -> handleMessage
com.google.android.vending.expansion.downloader.impl.DownloadInfo -> p.b:
    int mRedirectCount -> l
    long mCurrentBytes -> f
    int mNumFailed -> j
    long mTotalBytes -> e
    int mRetryAfter -> k
    int mStatus -> h
    long mLastMod -> g
    int mControl -> i
    java.lang.String mUri -> a
    int mIndex -> b
    java.lang.String mFileName -> c
    java.lang.String mETag -> d
com.google.android.vending.expansion.downloader.impl.DownloadNotification -> p.c:
    com.google.android.vending.expansion.downloader.IDownloaderClient mClientProxy -> e
    android.app.NotificationManager mNotificationManager -> c
    com.google.android.vending.expansion.downloader.DownloadProgressInfo mProgressInfo -> k
    android.content.Context mContext -> b
    java.lang.String mCurrentText -> j
    android.app.PendingIntent mContentIntent -> l
    java.lang.CharSequence mCurrentTitle -> d
    androidx.core.app.NotificationCompat$Builder mActiveDownloadBuilder -> f
    androidx.core.app.NotificationCompat$Builder mBuilder -> g
    java.lang.CharSequence mLabel -> i
    androidx.core.app.NotificationCompat$Builder mCurrentBuilder -> h
    int mState -> a
    1:1:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setPriority(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,java.lang.CharSequence):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setCategory(java.lang.String):0:0 -> <init>
    2:2:void <init>(android.content.Context,java.lang.CharSequence):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setPriority(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,java.lang.CharSequence):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setCategory(java.lang.String):0:0 -> <init>
    4:4:void <init>(android.content.Context,java.lang.CharSequence):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void <init>(android.content.Context,java.lang.CharSequence):0:0 -> <init>
    void onServiceConnected(android.os.Messenger) -> b
    1:1:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setSmallIcon(int):0:0 -> c
    1:1:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0:0 -> c
    3:3:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setProgress(int,int,boolean):0:0 -> c
    3:3:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0:0 -> c
    5:5:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setSmallIcon(int):0:0 -> c
    5:5:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0:0 -> c
    7:7:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setContentInfo(java.lang.CharSequence):0:0 -> c
    7:7:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0 -> c
    8:8:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0:0 -> c
    1:1:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setSmallIcon(int):0:0 -> d
    1:1:void onDownloadStateChanged(int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void onDownloadStateChanged(int):0:0 -> d
    3:3:void androidx.core.app.NotificationCompat$Builder.setFlag(int,boolean):0:0 -> d
    3:3:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setOngoing(boolean):0 -> d
    3:3:void onDownloadStateChanged(int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    4:4:void androidx.core.app.NotificationCompat$Builder.setFlag(int,boolean):0:0 -> d
    4:4:androidx.core.app.NotificationCompat$Builder androidx.core.app.NotificationCompat$Builder.setAutoCancel(boolean):0 -> d
    4:4:void onDownloadStateChanged(int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void onDownloadStateChanged(int):0:0 -> d
com.google.android.vending.expansion.downloader.impl.DownloadThread -> p.d:
    android.content.Context mContext -> a
    java.lang.String mUserAgent -> f
    com.google.android.vending.expansion.downloader.impl.DownloadNotification mNotification -> e
    com.google.android.vending.expansion.downloader.impl.DownloadsDB mDB -> d
    com.google.android.vending.expansion.downloader.impl.DownloaderService mService -> c
    com.google.android.vending.expansion.downloader.impl.DownloadInfo mInfo -> b
    1:1:void <init>(com.google.android.vending.expansion.downloader.impl.DownloadInfo,com.google.android.vending.expansion.downloader.impl.DownloaderService,com.google.android.vending.expansion.downloader.impl.DownloadNotification):0:0 -> <init>
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void <init>(com.google.android.vending.expansion.downloader.impl.DownloadInfo,com.google.android.vending.expansion.downloader.impl.DownloaderService,com.google.android.vending.expansion.downloader.impl.DownloadNotification):0:0 -> <init>
    4:4:void <init>(com.google.android.vending.expansion.downloader.impl.DownloadInfo,com.google.android.vending.expansion.downloader.impl.DownloaderService,com.google.android.vending.expansion.downloader.impl.DownloadNotification):0:0 -> <init>
    5:5:void <init>(com.google.android.vending.expansion.downloader.impl.DownloadInfo,com.google.android.vending.expansion.downloader.impl.DownloaderService,com.google.android.vending.expansion.downloader.impl.DownloadNotification):0:0 -> <init>
    2:2:void <init>(com.google.android.vending.expansion.downloader.impl.DownloadInfo,com.google.android.vending.expansion.downloader.impl.DownloaderService,com.google.android.vending.expansion.downloader.impl.DownloadNotification):0:0 -> <init>
    void checkConnectivity(com.google.android.vending.expansion.downloader.impl.DownloadThread$State) -> a
    1:1:int com.google.android.vending.expansion.downloader.impl.DownloaderService.getControl():0:0 -> b
    1:1:void checkPausedOrCanceled(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:int com.google.android.vending.expansion.downloader.impl.DownloaderService.getStatus():0:0 -> b
    2:2:void checkPausedOrCanceled(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:void checkPausedOrCanceled(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> b
    4:4:int com.google.android.vending.expansion.downloader.impl.DownloaderService.getStatus():0:0 -> b
    4:4:void checkPausedOrCanceled(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void checkPausedOrCanceled(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> b
    void cleanupDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,int) -> c
    void closeDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State) -> d
    1:1:void com.google.android.vending.expansion.downloader.impl.DownloadThread.setupDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    1:1:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    2:2:boolean com.google.android.vending.expansion.downloader.Helpers.isFilenameValid(java.lang.String):0:0 -> e
    2:2:void com.google.android.vending.expansion.downloader.impl.DownloadThread.setupDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0 -> e
    2:2:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    3:3:void com.google.android.vending.expansion.downloader.impl.DownloadThread.setupDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    3:3:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    4:4:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":51,"2":52,"3":53}}
    51:51:void com.google.android.vending.expansion.downloader.impl.DownloadThread.setupDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    51:51:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    52:52:void com.google.android.vending.expansion.downloader.impl.DownloadThread.setupDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    52:52:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    53:53:void com.google.android.vending.expansion.downloader.impl.DownloadThread.setupDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    53:53:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    5:5:void com.google.android.vending.expansion.downloader.impl.DownloadThread.setupDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    5:5:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    6:6:void com.google.android.vending.expansion.downloader.impl.DownloadThread.addRequestHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    6:6:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    7:7:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    8:8:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    8:8:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    9:9:void com.google.android.vending.expansion.downloader.impl.DownloadThread.handleExceptionalStatus(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection,int):0:0 -> e
    9:9:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    10:10:void com.google.android.vending.expansion.downloader.impl.DownloadThread.handleServiceUnavailable(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    10:10:void com.google.android.vending.expansion.downloader.impl.DownloadThread.handleExceptionalStatus(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection,int):0 -> e
    10:10:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    11:11:void com.google.android.vending.expansion.downloader.impl.DownloadThread.handleOtherStatus(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,int):0:0 -> e
    11:11:void com.google.android.vending.expansion.downloader.impl.DownloadThread.handleExceptionalStatus(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection,int):0 -> e
    11:11:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    12:12:void com.google.android.vending.expansion.downloader.impl.DownloadThread.handleExceptionalStatus(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection,int):0:0 -> e
    12:12:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    13:13:void com.google.android.vending.expansion.downloader.impl.DownloadThread.readResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    13:13:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0 -> e
    13:13:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    14:14:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    14:14:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    15:15:void com.google.android.vending.expansion.downloader.impl.DownloadThread.updateDatabaseFromHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    15:15:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0 -> e
    15:15:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    16:16:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    16:16:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    17:17:java.io.InputStream com.google.android.vending.expansion.downloader.impl.DownloadThread.openResponseEntity(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    17:17:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    18:18:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    19:19:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    19:19:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    19:19:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    20:20:void com.google.android.vending.expansion.downloader.impl.DownloadThread.handleEndOfStream(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    20:20:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    20:20:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    21:21:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    21:21:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    22:22:void com.google.android.vending.expansion.downloader.impl.DownloadThread.writeDataToDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,byte[],int):0:0 -> e
    22:22:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    22:22:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    23:23:void com.google.android.vending.expansion.downloader.impl.DownloadThread.reportProgress(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    23:23:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    23:23:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    24:24:android.database.sqlite.SQLiteStatement com.google.android.vending.expansion.downloader.impl.DownloadsDB.getUpdateCurrentBytesStatement():0:0 -> e
    24:24:void com.google.android.vending.expansion.downloader.impl.DownloadsDB.updateDownloadCurrentBytes(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0 -> e
    24:24:void com.google.android.vending.expansion.downloader.impl.DownloadThread.reportProgress(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0 -> e
    24:24:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    24:24:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    25:25:void com.google.android.vending.expansion.downloader.impl.DownloadsDB.updateDownloadCurrentBytes(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0:0 -> e
    25:25:void com.google.android.vending.expansion.downloader.impl.DownloadThread.reportProgress(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0 -> e
    25:25:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    25:25:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    26:26:void com.google.android.vending.expansion.downloader.impl.DownloadThread.reportProgress(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0:0 -> e
    26:26:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    26:26:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    27:27:void com.google.android.vending.expansion.downloader.impl.DownloaderService.notifyUpdateBytes(long):0:0 -> e
    27:27:void com.google.android.vending.expansion.downloader.impl.DownloadThread.reportProgress(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState):0 -> e
    27:27:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    27:27:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    28:28:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    28:28:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    29:29:void com.google.android.vending.expansion.downloader.impl.DownloadThread.writeDataToDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,byte[],int):0:0 -> e
    29:29:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    29:29:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    30:30:boolean com.google.android.vending.expansion.downloader.Helpers.isExternalMediaMounted():0:0 -> e
    30:30:void com.google.android.vending.expansion.downloader.impl.DownloadThread.writeDataToDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,byte[],int):0 -> e
    30:30:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    30:30:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    31:31:void com.google.android.vending.expansion.downloader.impl.DownloadThread.writeDataToDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,byte[],int):0:0 -> e
    31:31:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    31:31:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    32:32:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":54,"2":55,"3":56}}
    54:54:void com.google.android.vending.expansion.downloader.impl.DownloadThread.writeDataToDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,byte[],int):0:0 -> e
    54:54:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    54:54:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    55:55:void com.google.android.vending.expansion.downloader.impl.DownloadThread.writeDataToDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,byte[],int):0:0 -> e
    55:55:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    55:55:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    56:56:void com.google.android.vending.expansion.downloader.impl.DownloadThread.writeDataToDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,byte[],int):0:0 -> e
    56:56:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    56:56:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    33:33:void com.google.android.vending.expansion.downloader.impl.DownloadThread.writeDataToDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,byte[],int):0:0 -> e
    33:33:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    33:33:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    34:34:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    34:34:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    34:34:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    35:35:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":57,"2":58,"3":59}}
    57:57:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    57:57:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    57:57:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    58:58:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    58:58:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    58:58:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    59:59:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    59:59:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    59:59:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    36:36:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    36:36:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    36:36:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    37:37:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":60,"2":61,"3":62}}
    60:60:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    60:60:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    60:60:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    61:61:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    61:61:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    61:61:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    62:62:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    62:62:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    62:62:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    38:38:int com.google.android.vending.expansion.downloader.impl.DownloadThread.readFromResponse(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0:0 -> e
    38:38:void com.google.android.vending.expansion.downloader.impl.DownloadThread.transferData(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,byte[],java.io.InputStream):0 -> e
    38:38:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    39:39:java.io.InputStream com.google.android.vending.expansion.downloader.impl.DownloadThread.openResponseEntity(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    39:39:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    40:40:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":63,"2":64,"3":65}}
    63:63:java.io.InputStream com.google.android.vending.expansion.downloader.impl.DownloadThread.openResponseEntity(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    63:63:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    64:64:java.io.InputStream com.google.android.vending.expansion.downloader.impl.DownloadThread.openResponseEntity(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    64:64:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    65:65:java.io.InputStream com.google.android.vending.expansion.downloader.impl.DownloadThread.openResponseEntity(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    65:65:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    41:41:java.io.InputStream com.google.android.vending.expansion.downloader.impl.DownloadThread.openResponseEntity(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    41:41:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    42:42:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    42:42:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    43:43:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":66,"2":67,"3":68}}
    66:66:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    66:66:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    67:67:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    67:67:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    68:68:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    68:68:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    44:44:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    44:44:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    45:45:void com.google.android.vending.expansion.downloader.impl.DownloadThread.readResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0:0 -> e
    45:45:void com.google.android.vending.expansion.downloader.impl.DownloadThread.processResponseHeaders(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,com.google.android.vending.expansion.downloader.impl.DownloadThread$InnerState,java.net.HttpURLConnection):0 -> e
    45:45:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    46:46:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    46:46:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    47:47:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":69,"2":70,"3":71}}
    69:69:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    69:69:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    70:70:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    70:70:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    71:71:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    71:71:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    48:48:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    48:48:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    49:49:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":72,"2":73,"3":74}}
    72:72:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    72:72:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    73:73:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    73:73:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    74:74:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    74:74:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    50:50:int com.google.android.vending.expansion.downloader.impl.DownloadThread.sendRequest(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0:0 -> e
    50:50:void executeDownload(com.google.android.vending.expansion.downloader.impl.DownloadThread$State,java.net.HttpURLConnection):0 -> e
    1:1:void com.google.android.vending.expansion.downloader.impl.DownloadThread.syncDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> f
    1:1:void finalizeDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0 -> f
    2:2:void finalizeDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> f
    3:3:void com.google.android.vending.expansion.downloader.impl.DownloadThread.syncDestination(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> f
    3:3:void finalizeDestinationFile(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0 -> f
    1:1:int getFinalStatusForHttpError(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> g
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:int getFinalStatusForHttpError(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> g
    4:4:int getFinalStatusForHttpError(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> g
    5:5:int getFinalStatusForHttpError(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> g
    2:2:int getFinalStatusForHttpError(com.google.android.vending.expansion.downloader.impl.DownloadThread$State):0:0 -> g
    1:1:void logNetworkState():0:0 -> h
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void logNetworkState():0:0 -> h
    4:4:void logNetworkState():0:0 -> h
    5:5:void logNetworkState():0:0 -> h
    2:2:void logNetworkState():0:0 -> h
    1:1:void com.google.android.vending.expansion.downloader.impl.DownloadThread.updateDownloadDatabase(int,boolean,int,int,boolean,java.lang.String):0:0 -> i
    1:1:void notifyDownloadCompleted(int,boolean,int,int,boolean,java.lang.String):0 -> i
    2:2:void notifyDownloadCompleted(int,boolean,int,int,boolean,java.lang.String):0:0 -> i
    1:1:java.lang.String com.google.android.vending.expansion.downloader.impl.DownloadThread.userAgent():0:0 -> j
    1:1:void run():0 -> j
    2:2:void run():0:0 -> j
com.google.android.vending.expansion.downloader.impl.DownloadThread$State -> p.d$a:
    java.lang.String mRequestUri -> g
    java.io.FileOutputStream mStream -> b
    boolean mGotData -> f
    java.lang.String mFilename -> a
    int mRetryAfter -> d
    int mRedirectCount -> e
    boolean mCountRetry -> c
com.google.android.vending.expansion.downloader.impl.DownloadThread$StopRequest -> p.d$b:
    int mFinalStatus -> a
com.google.android.vending.expansion.downloader.impl.DownloaderService -> p.e:
    android.app.PendingIntent mAlarmIntent -> y
    android.app.PendingIntent mPendingIntent -> x
    boolean mStateChanged -> i
    int mControl -> j
    int mStatus -> k
    com.google.android.vending.expansion.downloader.impl.DownloadNotification mNotification -> w
    com.google.android.vending.expansion.downloader.IStub mServiceStub -> u
    android.os.Messenger mServiceMessenger -> v
    android.content.pm.PackageInfo mPackageInfo -> n
    boolean sIsRunning -> z
    boolean mIsFailover -> e
    long mMillisecondsAtSample -> r
    boolean mIsCellularConnection -> f
    long mBytesAtSample -> q
    float mAverageDownloadSpeed -> s
    android.content.BroadcastReceiver mConnReceiver -> t
    boolean mIsRoaming -> g
    boolean mIsAtLeast3G -> h
    android.net.ConnectivityManager mConnectivityManager -> l
    android.net.wifi.WifiManager mWifiManager -> m
    long mTotalLength -> p
    boolean mIsConnected -> d
    long mBytesSoFar -> o
    1:1:com.google.android.vending.expansion.downloader.IStub com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller.CreateStub(com.google.android.vending.expansion.downloader.IDownloaderService):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    3:3:android.os.Messenger com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller$Stub.getMessenger():0:0 -> <init>
    3:3:void <init>():0 -> <init>
    4:4:void <init>():0:0 -> <init>
    void requestPauseDownload() -> a
    0:65535:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.resendState():0:0 -> b
    0:65535:void requestDownloadStatus():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void requestContinueDownload() -> c
    1:1:com.google.android.vending.expansion.downloader.IDownloaderClient com.google.android.vending.expansion.downloader.DownloaderClientMarshaller.CreateProxy(android.os.Messenger):0:0 -> d
    1:1:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setMessenger(android.os.Messenger):0 -> d
    1:1:void onClientUpdated(android.os.Messenger):0 -> d
    2:2:void com.google.android.vending.expansion.downloader.impl.DownloadNotification.setMessenger(android.os.Messenger):0:0 -> d
    2:2:void onClientUpdated(android.os.Messenger):0 -> d
    0:65535:boolean com.google.android.vending.expansion.downloader.impl.DownloadsDB.updateFlags(int):0:0 -> e
    0:65535:void setDownloadFlags(int):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void requestAbortDownload() -> f
    void cancelAlarms() -> g
    1:1:boolean com.google.android.vending.expansion.downloader.Helpers.isExternalMediaMounted():0:0 -> h
    1:1:java.lang.String generateSaveFile(java.lang.String,long):0 -> h
    2:2:java.lang.String generateSaveFile(java.lang.String,long):0:0 -> h
    1:1:java.lang.String com.google.android.vending.expansion.downloader.Helpers.getSaveFilePath(android.content.Context):0:0 -> i
    1:1:java.lang.String generateTempSaveFileName(java.lang.String):0 -> i
    2:2:java.lang.String generateTempSaveFileName(java.lang.String):0:0 -> i
    java.lang.String getAlarmReceiverClassName() -> j
    int getNetworkAvailabilityState(com.google.android.vending.expansion.downloader.impl.DownloadsDB) -> k
    java.lang.String getPublicKey() -> l
    byte[] getSALT() -> m
    0:65535:void com.google.android.vending.expansion.downloader.impl.DownloaderService.updateNetworkState(android.net.NetworkInfo):0:0 -> n
    0:65535:void pollNetworkState():0 -> n
    void scheduleAlarm(long) -> o
    void setServiceRunning(boolean) -> p
    1:1:int com.google.android.vending.expansion.downloader.impl.DownloaderService.startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.String,java.lang.String):0:0 -> q
    1:1:int startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.Class):0 -> q
    2:2:boolean com.google.android.vending.expansion.downloader.impl.DownloaderService.isLVLCheckRequired(com.google.android.vending.expansion.downloader.impl.DownloadsDB,android.content.pm.PackageInfo):0:0 -> q
    2:2:int com.google.android.vending.expansion.downloader.impl.DownloaderService.startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.String,java.lang.String):0 -> q
    2:2:int startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.Class):0 -> q
    3:3:int com.google.android.vending.expansion.downloader.impl.DownloaderService.startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.String,java.lang.String):0:0 -> q
    3:3:int startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.Class):0 -> q
    4:4:boolean com.google.android.vending.expansion.downloader.impl.DownloadsDB.updateStatus(int):0:0 -> q
    4:4:int com.google.android.vending.expansion.downloader.impl.DownloaderService.startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.String,java.lang.String):0 -> q
    4:4:int startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.Class):0 -> q
    5:5:int com.google.android.vending.expansion.downloader.impl.DownloaderService.startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.String,java.lang.String):0:0 -> q
    5:5:int startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.Class):0 -> q
    void updateLVL(android.content.Context) -> r
    void updateNetworkType(int,int) -> s
com.google.android.vending.expansion.downloader.impl.DownloaderService$GenerateSaveFileError -> p.e$a:
    java.lang.String mMessage -> b
    int mStatus -> a
com.google.android.vending.expansion.downloader.impl.DownloaderService$InnerBroadcastReceiver -> p.e$b:
    android.app.Service mService -> a
    com.google.android.vending.expansion.downloader.impl.DownloaderService this$0 -> b
    1:1:boolean com.google.android.vending.expansion.downloader.impl.DownloaderService.isServiceRunning():0:0 -> onReceive
    1:1:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    2:2:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    3:3:boolean com.google.android.vending.expansion.downloader.impl.DownloaderService.isServiceRunning():0:0 -> onReceive
    3:3:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
com.google.android.vending.expansion.downloader.impl.DownloaderService$LVLRunnable -> p.e$c:
    android.content.Context mContext -> a
    com.google.android.vending.expansion.downloader.impl.DownloaderService this$0 -> b
    1:1:void com.google.android.vending.licensing.APKExpansionPolicy.resetPolicy():0:0 -> run
    1:1:void run():0 -> run
    2:2:void com.google.android.vending.licensing.PreferenceObfuscator.commit():0:0 -> run
    2:2:void com.google.android.vending.licensing.APKExpansionPolicy.resetPolicy():0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
    4:4:void com.google.android.vending.licensing.LicenseChecker.checkAccess(com.google.android.vending.licensing.LicenseCheckerCallback):0:0 -> run
    4:4:void run():0 -> run
    5:5:int com.google.android.vending.licensing.LicenseChecker.generateNonce():0:0 -> run
    5:5:void com.google.android.vending.licensing.LicenseChecker.checkAccess(com.google.android.vending.licensing.LicenseCheckerCallback):0 -> run
    5:5:void run():0 -> run
    6:6:void com.google.android.vending.licensing.LicenseChecker.checkAccess(com.google.android.vending.licensing.LicenseCheckerCallback):0:0 -> run
    6:6:void run():0 -> run
com.google.android.vending.expansion.downloader.impl.DownloaderService$LVLRunnable$1 -> p.e$c$a:
    com.google.android.vending.licensing.APKExpansionPolicy val$aep -> a
    com.google.android.vending.expansion.downloader.impl.DownloaderService$LVLRunnable this$1 -> b
    1:1:int com.google.android.vending.licensing.APKExpansionPolicy.getExpansionURLCount():0:0 -> a
    1:1:void allow(int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void allow(int):0:0 -> a
    3:3:java.lang.String com.google.android.vending.licensing.APKExpansionPolicy.getExpansionFileName(int):0:0 -> a
    3:3:void allow(int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void allow(int):0:0 -> a
    5:5:long com.google.android.vending.licensing.APKExpansionPolicy.getExpansionFileSize(int):0:0 -> a
    5:5:void allow(int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void allow(int):0:0 -> a
    7:7:boolean com.google.android.vending.expansion.downloader.impl.DownloaderService.handleFileUpdated(com.google.android.vending.expansion.downloader.impl.DownloadsDB,int,java.lang.String,long):0:0 -> a
    7:7:void allow(int):0 -> a
    8:8:void com.google.android.vending.expansion.downloader.impl.DownloadInfo.resetDownload():0:0 -> a
    8:8:void allow(int):0 -> a
    9:9:void allow(int):0:0 -> a
    void applicationError(int) -> b
    void dontAllow(int) -> c
com.google.android.vending.expansion.downloader.impl.DownloadsDB -> p.f:
    com.google.android.vending.expansion.downloader.impl.DownloadsDB mDownloadsDB -> h
    java.lang.String[] DC_PROJECTION -> i
    android.database.sqlite.SQLiteOpenHelper mHelper -> a
    int mStatus -> f
    int mFlags -> g
    long mMetadataRowID -> d
    int mVersionCode -> e
    android.database.sqlite.SQLiteStatement mUpdateCurrentBytes -> c
    android.database.sqlite.SQLiteStatement mGetDownloadByIndex -> b
    com.google.android.vending.expansion.downloader.impl.DownloadsDB getDB(android.content.Context) -> a
    com.google.android.vending.expansion.downloader.impl.DownloadInfo getDownloadInfoByFileName(java.lang.String) -> b
    com.google.android.vending.expansion.downloader.impl.DownloadInfo getDownloadInfoFromCursor(android.database.Cursor) -> c
    com.google.android.vending.expansion.downloader.impl.DownloadInfo[] getDownloads() -> d
    void setDownloadInfoFromCursor(com.google.android.vending.expansion.downloader.impl.DownloadInfo,android.database.Cursor) -> e
    1:1:long com.google.android.vending.expansion.downloader.impl.DownloadsDB.getIDForDownloadInfo(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0:0 -> f
    1:1:boolean com.google.android.vending.expansion.downloader.impl.DownloadsDB.updateDownload(com.google.android.vending.expansion.downloader.impl.DownloadInfo,android.content.ContentValues):0 -> f
    1:1:boolean updateDownload(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0 -> f
    2:2:android.database.sqlite.SQLiteStatement com.google.android.vending.expansion.downloader.impl.DownloadsDB.getDownloadByIndexStatement():0:0 -> f
    2:2:long com.google.android.vending.expansion.downloader.impl.DownloadsDB.getIDByIndex(int):0 -> f
    2:2:long com.google.android.vending.expansion.downloader.impl.DownloadsDB.getIDForDownloadInfo(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0 -> f
    2:2:boolean com.google.android.vending.expansion.downloader.impl.DownloadsDB.updateDownload(com.google.android.vending.expansion.downloader.impl.DownloadInfo,android.content.ContentValues):0 -> f
    2:2:boolean updateDownload(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0 -> f
    3:3:long com.google.android.vending.expansion.downloader.impl.DownloadsDB.getIDByIndex(int):0:0 -> f
    3:3:long com.google.android.vending.expansion.downloader.impl.DownloadsDB.getIDForDownloadInfo(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0 -> f
    3:3:boolean com.google.android.vending.expansion.downloader.impl.DownloadsDB.updateDownload(com.google.android.vending.expansion.downloader.impl.DownloadInfo,android.content.ContentValues):0 -> f
    3:3:boolean updateDownload(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0 -> f
    4:4:boolean com.google.android.vending.expansion.downloader.impl.DownloadsDB.updateDownload(com.google.android.vending.expansion.downloader.impl.DownloadInfo,android.content.ContentValues):0:0 -> f
    4:4:boolean updateDownload(com.google.android.vending.expansion.downloader.impl.DownloadInfo):0 -> f
    boolean updateFromDb(com.google.android.vending.expansion.downloader.impl.DownloadInfo) -> g
    boolean updateMetadata(int,int) -> h
    1:1:boolean updateMetadata(android.content.ContentValues):0:0 -> i
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:boolean updateMetadata(android.content.ContentValues):0:0 -> i
    4:4:boolean updateMetadata(android.content.ContentValues):0:0 -> i
    5:5:boolean updateMetadata(android.content.ContentValues):0:0 -> i
    2:2:boolean updateMetadata(android.content.ContentValues):0:0 -> i
com.google.android.vending.expansion.downloader.impl.DownloadsDB$DownloadColumns -> p.f$a:
    java.lang.String[][] SCHEMA -> a
com.google.android.vending.expansion.downloader.impl.DownloadsDB$DownloadsContentDBHelper -> p.f$b:
    java.lang.String[][][] sSchemas -> a
    java.lang.String[] sTables -> b
    java.lang.String createTableQueryFromArray(java.lang.String,java.lang.String[][]) -> a
    1:1:void com.google.android.vending.expansion.downloader.impl.DownloadsDB$DownloadsContentDBHelper.dropTables(android.database.sqlite.SQLiteDatabase):0:0 -> onUpgrade
    1:1:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):0 -> onUpgrade
    2:2:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):0:0 -> onUpgrade
com.google.android.vending.expansion.downloader.impl.DownloadsDB$MetadataColumns -> p.f$c:
    java.lang.String[][] SCHEMA -> a
com.google.android.vending.licensing.AESObfuscator -> q.a:
    javax.crypto.Cipher mEncryptor -> a
    javax.crypto.Cipher mDecryptor -> b
    byte[] IV -> c
    java.lang.String unobfuscate(java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.APKExpansionPolicy -> q.b:
    long mLastResponseTime -> e
    com.google.android.vending.licensing.PreferenceObfuscator mPreferences -> g
    long mRetryUntil -> b
    int mLastResponse -> f
    long mValidityTimestamp -> a
    java.util.Vector mExpansionFileSizes -> j
    long mRetryCount -> d
    java.util.Vector mExpansionFileNames -> i
    long mMaxRetries -> c
    java.util.Vector mExpansionURLs -> h
    boolean allowAccess() -> a
    java.lang.String getExpansionURL(int) -> b
    1:1:java.util.Map com.google.android.vending.licensing.APKExpansionPolicy.decodeExtras(com.google.android.vending.licensing.ResponseData):0:0 -> c
    1:1:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0 -> c
    2:2:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0:0 -> c
    3:3:void com.google.android.vending.licensing.APKExpansionPolicy.setLicensingUrl(java.lang.String):0:0 -> c
    3:3:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0 -> c
    4:4:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0:0 -> c
    5:5:void com.google.android.vending.licensing.APKExpansionPolicy.setExpansionURL(int,java.lang.String):0:0 -> c
    5:5:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0 -> c
    6:6:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0:0 -> c
    7:7:void com.google.android.vending.licensing.APKExpansionPolicy.setExpansionFileName(int,java.lang.String):0:0 -> c
    7:7:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0 -> c
    8:8:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0:0 -> c
    9:9:void com.google.android.vending.licensing.APKExpansionPolicy.setExpansionFileSize(int,long):0:0 -> c
    9:9:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0 -> c
    10:10:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0:0 -> c
    11:11:void com.google.android.vending.licensing.APKExpansionPolicy.setLicensingUrl(java.lang.String):0:0 -> c
    11:11:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0 -> c
    12:12:void com.google.android.vending.licensing.APKExpansionPolicy.setLastResponse(int):0:0 -> c
    12:12:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0 -> c
    13:13:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0:0 -> c
    14:14:void com.google.android.vending.licensing.PreferenceObfuscator.commit():0:0 -> c
    14:14:void processServerResponse(int,com.google.android.vending.licensing.ResponseData):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    void setMaxRetries(java.lang.String) -> d
    void setRetryCount(long) -> e
    void setRetryUntil(java.lang.String) -> f
    void setValidityTimestamp(java.lang.String) -> g
com.google.android.vending.licensing.LicenseChecker -> q.c:
    java.lang.String mVersionCode -> g
    com.android.vending.licensing.ILicensingService mService -> a
    java.lang.String mPackageName -> f
    java.util.Set mChecksInProgress -> h
    android.content.Context mContext -> c
    android.os.Handler mHandler -> e
    java.util.Queue mPendingChecks -> i
    com.google.android.vending.licensing.Policy mPolicy -> d
    java.security.PublicKey mPublicKey -> b
    java.security.SecureRandom RANDOM -> j
    1:1:java.security.PublicKey com.google.android.vending.licensing.LicenseChecker.generatePublicKey(java.lang.String):0:0 -> <init>
    1:1:void <init>(android.content.Context,com.google.android.vending.licensing.Policy,java.lang.String):0 -> <init>
    2:2:void <init>(android.content.Context,com.google.android.vending.licensing.Policy,java.lang.String):0:0 -> <init>
    3:3:java.lang.String com.google.android.vending.licensing.LicenseChecker.getVersionCode(android.content.Context,java.lang.String):0:0 -> <init>
    3:3:void <init>(android.content.Context,com.google.android.vending.licensing.Policy,java.lang.String):0 -> <init>
    4:4:void <init>(android.content.Context,com.google.android.vending.licensing.Policy,java.lang.String):0:0 -> <init>
    5:5:java.security.PublicKey com.google.android.vending.licensing.LicenseChecker.generatePublicKey(java.lang.String):0:0 -> <init>
    5:5:void <init>(android.content.Context,com.google.android.vending.licensing.Policy,java.lang.String):0 -> <init>
    1:1:void com.google.android.vending.licensing.LicenseChecker.finishCheck(com.google.android.vending.licensing.LicenseValidator):0:0 -> a
    1:1:void -$$Nest$mfinishCheck(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void com.google.android.vending.licensing.LicenseChecker.cleanupService():0:0 -> a
    2:2:void com.google.android.vending.licensing.LicenseChecker.finishCheck(com.google.android.vending.licensing.LicenseValidator):0 -> a
    2:2:void -$$Nest$mfinishCheck(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:void com.google.android.vending.licensing.LicenseChecker.finishCheck(com.google.android.vending.licensing.LicenseValidator):0:0 -> a
    3:3:void -$$Nest$mfinishCheck(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:com.google.android.vending.licensing.LicenseCheckerCallback com.google.android.vending.licensing.LicenseValidator.getCallback():0:0 -> b
    1:1:void handleServiceConnectionError(com.google.android.vending.licensing.LicenseValidator):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void handleServiceConnectionError(com.google.android.vending.licensing.LicenseValidator):0:0 -> b
    3:3:com.google.android.vending.licensing.LicenseCheckerCallback com.google.android.vending.licensing.LicenseValidator.getCallback():0:0 -> b
    3:3:void handleServiceConnectionError(com.google.android.vending.licensing.LicenseValidator):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void handleServiceConnectionError(com.google.android.vending.licensing.LicenseValidator):0:0 -> b
    1:1:java.lang.String com.google.android.vending.licensing.LicenseValidator.getPackageName():0:0 -> c
    1:1:void runChecks():0 -> c
    2:2:void runChecks():0:0 -> c
    3:3:int com.google.android.vending.licensing.LicenseValidator.getNonce():0:0 -> c
    3:3:void runChecks():0 -> c
    4:4:java.lang.String com.google.android.vending.licensing.LicenseValidator.getPackageName():0:0 -> c
    4:4:void runChecks():0 -> c
    5:5:void runChecks():0:0 -> c
    1:1:com.android.vending.licensing.ILicensingService com.android.vending.licensing.ILicensingService$Stub.asInterface(android.os.IBinder):0:0 -> onServiceConnected
    1:1:void onServiceConnected(android.content.ComponentName,android.os.IBinder):0 -> onServiceConnected
    2:2:void onServiceConnected(android.content.ComponentName,android.os.IBinder):0:0 -> onServiceConnected
com.google.android.vending.licensing.LicenseChecker$ResultListener -> q.c$a:
    java.lang.Runnable mOnTimeout -> b
    com.google.android.vending.licensing.LicenseValidator mValidator -> a
    com.google.android.vending.licensing.LicenseChecker this$0 -> c
    0:65535:void com.google.android.vending.licensing.LicenseChecker$ResultListener.startTimeout():0:0 -> <init>
    0:65535:void <init>(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator):0 -> <init>
com.google.android.vending.licensing.LicenseChecker$ResultListener$1 -> q.c$a$a:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
com.google.android.vending.licensing.LicenseChecker$ResultListener$2 -> q.d:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> d
    java.lang.String val$signature -> c
    java.lang.String val$signedData -> b
    int val$responseCode -> a
    1:1:void com.google.android.vending.licensing.LicenseChecker$ResultListener.clearTimeout():0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void com.google.android.vending.licensing.LicenseValidator.verify(java.security.PublicKey,int,java.lang.String,java.lang.String):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:void com.google.android.vending.licensing.LicenseValidator.verify(java.security.PublicKey,int,java.lang.String,java.lang.String):0:0 -> run
    5:5:void run():0 -> run
com.google.android.vending.licensing.LicenseCheckerCallback -> q.e:
com.google.android.vending.licensing.LicenseValidator -> q.f:
    com.google.android.vending.licensing.DeviceLimiter mDeviceLimiter -> f
    com.google.android.vending.licensing.Policy mPolicy -> a
    int mNonce -> c
    java.lang.String mVersionCode -> e
    com.google.android.vending.licensing.LicenseCheckerCallback mCallback -> b
    java.lang.String mPackageName -> d
    void handleApplicationError(int) -> a
    void handleInvalidResponse() -> b
    void handleResponse(int,com.google.android.vending.licensing.ResponseData) -> c
com.google.android.vending.licensing.NullDeviceLimiter -> q.g:
    java.lang.Object[] androidx.collection.ContainerHelpers.EMPTY_OBJECTS -> b
    kotlin.UNINITIALIZED_VALUE kotlin.UNINITIALIZED_VALUE.INSTANCE -> h
    int[] androidx.fragment.R$styleable.Fragment -> d
    int[] androidx.fragment.R$styleable.FragmentContainerView -> e
    byte[] com.google.android.vending.licensing.util.Base64.DECODABET -> g
    int[] androidx.collection.ContainerHelpers.EMPTY_INTS -> a
    java.lang.Object[] kotlin.jvm.internal.CollectionToArray.EMPTY -> i
    boolean org.godotengine.godot.utils.GLUtils.use_debug_opengl -> c
    byte[] com.google.android.vending.licensing.util.Base64.ALPHABET -> f
    1:1:void androidx.collection.ContainerHelpers.<clinit>():0:0 -> <clinit>
    1:1:void q.NullDeviceLimiter.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void androidx.fragment.R$styleable.<clinit>():0:0 -> <clinit>
    2:2:void q.NullDeviceLimiter.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:void com.google.android.vending.licensing.util.Base64.<clinit>():0:0 -> <clinit>
    3:3:void q.NullDeviceLimiter.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    4:4:void kotlin.UNINITIALIZED_VALUE.<clinit>():0:0 -> <clinit>
    4:4:void q.NullDeviceLimiter.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    5:5:void kotlin.jvm.internal.CollectionToArray.<clinit>():0:0 -> <clinit>
    5:5:void q.NullDeviceLimiter.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    0:65535:void com.google.android.vending.licensing.NullDeviceLimiter.$r8$init$synthetic():0:0 -> <init>
    0:65535:void q.NullDeviceLimiter.$r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.vending.licensing.util.URIQueryDecoder.DecodeQuery(java.net.URI,java.util.Map) -> a
    boolean kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object,java.lang.Object) -> b
    int androidx.collection.ContainerHelpers.binarySearch(int[],int,int) -> c
    void androidx.core.util.DebugUtils.buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> d
    void org.godotengine.godot.utils.GLUtils.checkEglError(java.lang.String,java.lang.String,javax.microedition.khronos.egl.EGL10) -> e
    java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object,java.lang.Object) -> f
    0:65535:void kotlin.jvm.internal.Intrinsics.throwJavaNpe():0:0 -> g
    0:65535:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):0 -> g
    0:65535:void kotlin.jvm.internal.Intrinsics.throwJavaNpe(java.lang.String):0:0 -> h
    0:65535:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object,java.lang.String):0 -> h
    void kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> i
    1:1:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> j
    1:1:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> j
    2:2:java.lang.String kotlin.jvm.internal.Intrinsics.createParameterIsNullExceptionMessage(java.lang.String):0:0 -> j
    2:2:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0 -> j
    2:2:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> j
    3:3:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> j
    3:3:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> j
    1:1:void kotlin.ExceptionsKt__ExceptionsKt.addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> k
    1:1:void kotlin.io.CloseableKt.closeFinally(java.io.Closeable,java.lang.Throwable):0 -> k
    2:2:void kotlin.internal.PlatformImplementations.addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> k
    2:2:void kotlin.ExceptionsKt__ExceptionsKt.addSuppressed(java.lang.Throwable,java.lang.Throwable):0 -> k
    2:2:void kotlin.io.CloseableKt.closeFinally(java.io.Closeable,java.lang.Throwable):0 -> k
    1:1:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int):0:0 -> l
    1:1:byte[] com.google.android.vending.licensing.util.Base64.decode(java.lang.String):0 -> l
    2:2:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int,byte[]):0:0 -> l
    2:2:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int):0 -> l
    2:2:byte[] com.google.android.vending.licensing.util.Base64.decode(java.lang.String):0 -> l
    3:3:byte[] com.google.android.vending.licensing.util.Base64.decode(java.lang.String):0:0 -> l
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":5,"2":6,"3":7}}
    5:5:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int,byte[]):0:0 -> l
    5:5:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int):0 -> l
    5:5:byte[] com.google.android.vending.licensing.util.Base64.decode(java.lang.String):0 -> l
    6:6:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int,byte[]):0:0 -> l
    6:6:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int):0 -> l
    6:6:byte[] com.google.android.vending.licensing.util.Base64.decode(java.lang.String):0 -> l
    7:7:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int,byte[]):0:0 -> l
    7:7:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int):0 -> l
    7:7:byte[] com.google.android.vending.licensing.util.Base64.decode(java.lang.String):0 -> l
    4:4:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int,byte[]):0:0 -> l
    4:4:byte[] com.google.android.vending.licensing.util.Base64.decode(byte[],int,int):0 -> l
    4:4:byte[] com.google.android.vending.licensing.util.Base64.decode(java.lang.String):0 -> l
    int com.google.android.vending.licensing.util.Base64.decode4to3(byte[],int,byte[],int,byte[]) -> m
    1:1:byte[] com.google.android.vending.licensing.util.Base64.encode(byte[],int,int,byte[],int):0:0 -> n
    1:1:java.lang.String com.google.android.vending.licensing.util.Base64.encode(byte[],int,int,byte[],boolean):0 -> n
    1:1:java.lang.String com.google.android.vending.licensing.util.Base64.encode(byte[]):0 -> n
    2:2:byte[] com.google.android.vending.licensing.util.Base64.encode3to4(byte[],int,int,byte[],int,byte[]):0:0 -> n
    2:2:byte[] com.google.android.vending.licensing.util.Base64.encode(byte[],int,int,byte[],int):0 -> n
    2:2:java.lang.String com.google.android.vending.licensing.util.Base64.encode(byte[],int,int,byte[],boolean):0 -> n
    2:2:java.lang.String com.google.android.vending.licensing.util.Base64.encode(byte[]):0 -> n
    3:3:byte[] com.google.android.vending.licensing.util.Base64.encode(byte[],int,int,byte[],int):0:0 -> n
    3:3:java.lang.String com.google.android.vending.licensing.util.Base64.encode(byte[],int,int,byte[],boolean):0 -> n
    3:3:java.lang.String com.google.android.vending.licensing.util.Base64.encode(byte[]):0 -> n
    4:4:java.lang.String com.google.android.vending.licensing.util.Base64.encode(byte[],int,int,byte[],boolean):0:0 -> n
    4:4:java.lang.String com.google.android.vending.licensing.util.Base64.encode(byte[]):0 -> n
    boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object) -> o
    boolean kotlin.text.CharsKt__CharKt.equals(char,char,boolean) -> p
    0:65535:java.lang.Throwable kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable,java.lang.String):0:0 -> q
    0:65535:java.lang.Throwable kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable):0 -> q
    java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection) -> r
    java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection,java.lang.Object[]) -> s
com.google.android.vending.licensing.Obfuscator -> q.h:
com.google.android.vending.licensing.PreferenceObfuscator -> q.i:
    com.google.android.vending.licensing.Obfuscator mObfuscator -> b
    android.content.SharedPreferences mPreferences -> a
    android.content.SharedPreferences$Editor mEditor -> c
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    1:1:java.lang.String com.google.android.vending.licensing.AESObfuscator.obfuscate(java.lang.String,java.lang.String):0:0 -> b
    1:1:void putString(java.lang.String,java.lang.String):0 -> b
    2:2:void putString(java.lang.String,java.lang.String):0:0 -> b
    3:3:java.lang.String com.google.android.vending.licensing.AESObfuscator.obfuscate(java.lang.String,java.lang.String):0:0 -> b
    3:3:void putString(java.lang.String,java.lang.String):0 -> b
com.google.android.vending.licensing.ResponseData -> q.j:
    java.lang.String extra -> g
    long timestamp -> f
    int nonce -> b
    java.lang.String packageName -> c
    java.lang.String userId -> e
    int responseCode -> a
    java.lang.String versionCode -> d
    com.google.android.vending.licensing.ResponseData parse(java.lang.String) -> a
com.google.android.vending.licensing.ValidationException -> q.k:
com.google.android.vending.licensing.util.Base64DecoderException -> r.a:
kotlin.NoWhenBranchMatchedException -> s.a:
    void <init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void kotlin.UninitializedPropertyAccessException.<init>(java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.SynchronizedLazyImpl -> s.b:
    java.lang.Object _value -> b
    java.lang.Object lock -> c
    kotlin.jvm.functions.Function0 initializer -> a
    0:65535:void kotlin.SynchronizedLazyImpl.<init>(kotlin.jvm.functions.Function0,java.lang.Object):0:0 -> <init>
    0:65535:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker):0 -> <init>
    java.lang.Object getValue() -> a
    1:1:boolean kotlin.SynchronizedLazyImpl.isInitialized():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
kotlin.collections.EmptyIterator -> t.a:
    kotlin.collections.EmptyIterator INSTANCE -> a
    0:65535:java.lang.Void kotlin.collections.EmptyIterator.next():0:0 -> next
    0:65535:java.lang.Object next():0 -> next
    0:65535:java.lang.Void kotlin.collections.EmptyIterator.previous():0:0 -> previous
    0:65535:java.lang.Object previous():0 -> previous
kotlin.collections.EmptyList -> t.b:
    kotlin.collections.EmptyList INSTANCE -> a
    0:65535:boolean kotlin.collections.EmptyList.contains(java.lang.Void):0:0 -> contains
    0:65535:boolean contains(java.lang.Object):0 -> contains
    0:65535:java.lang.Void kotlin.collections.EmptyList.get(int):0:0 -> get
    0:65535:java.lang.Object get(int):0 -> get
    0:65535:int kotlin.collections.EmptyList.indexOf(java.lang.Void):0:0 -> indexOf
    0:65535:int indexOf(java.lang.Object):0 -> indexOf
    0:65535:int kotlin.collections.EmptyList.lastIndexOf(java.lang.Void):0:0 -> lastIndexOf
    0:65535:int lastIndexOf(java.lang.Object):0 -> lastIndexOf
kotlin.collections.EmptyMap -> t.c:
    kotlin.collections.EmptyMap INSTANCE -> a
    0:65535:boolean kotlin.collections.EmptyMap.containsValue(java.lang.Void):0:0 -> containsValue
    0:65535:boolean containsValue(java.lang.Object):0 -> containsValue
    0:65535:java.lang.Void kotlin.collections.EmptyMap.remove(java.lang.Object):0:0 -> remove
    0:65535:java.lang.Object remove(java.lang.Object):0 -> remove
kotlin.collections.EmptySet -> t.d:
    kotlin.collections.EmptySet INSTANCE -> a
    0:65535:boolean kotlin.collections.EmptySet.contains(java.lang.Void):0:0 -> contains
    0:65535:boolean contains(java.lang.Object):0 -> contains
kotlin.collections.IntIterator -> t.e:
    int nextInt() -> a
kotlin.internal.PlatformImplementations -> u.a:
kotlin.internal.PlatformImplementations$ReflectThrowable -> u.a$a:
    java.lang.reflect.Method addSuppressed -> a
    1:1:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.singleOrNull(java.lang.Object[]):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
kotlin.internal.PlatformImplementationsKt -> u.b:
    kotlin.internal.PlatformImplementations IMPLEMENTATIONS -> a
    1:1:int kotlin.internal.PlatformImplementationsKt.getJavaVersion():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
kotlin.jvm.functions.Function0 -> v.a:
    java.lang.Object invoke() -> a
kotlin.jvm.internal.Lambda -> w.a:
    1:1:java.lang.String kotlin.jvm.internal.Reflection.renderLambdaToString(kotlin.jvm.internal.Lambda):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String kotlin.jvm.internal.ReflectionFactory.renderLambdaToString(kotlin.jvm.internal.FunctionBase):0:0 -> toString
    2:2:java.lang.String kotlin.jvm.internal.ReflectionFactory.renderLambdaToString(kotlin.jvm.internal.Lambda):0 -> toString
    2:2:java.lang.String kotlin.jvm.internal.Reflection.renderLambdaToString(kotlin.jvm.internal.Lambda):0 -> toString
    2:2:java.lang.String toString():0 -> toString
    3:3:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.Reflection -> w.b:
    kotlin.jvm.internal.ReflectionFactory factory -> a
kotlin.jvm.internal.ReflectionFactory -> w.c:
kotlin.ranges.IntProgression -> x.a:
    int last -> b
    int step -> c
    int first -> a
    1:1:int kotlin.internal.ProgressionUtilKt.mod(int,int):0:0 -> <init>
    1:1:int kotlin.internal.ProgressionUtilKt.differenceModulo(int,int,int):0 -> <init>
    1:1:int kotlin.internal.ProgressionUtilKt.getProgressionLastElement(int,int,int):0 -> <init>
    1:1:void <init>(int,int,int):0 -> <init>
    2:2:void <init>(int,int,int):0:0 -> <init>
    3:3:int kotlin.internal.ProgressionUtilKt.getProgressionLastElement(int,int,int):0:0 -> <init>
    3:3:void <init>(int,int,int):0 -> <init>
    4:4:void <init>(int,int,int):0:0 -> <init>
    0:65535:kotlin.collections.IntIterator kotlin.ranges.IntProgression.iterator():0:0 -> iterator
    0:65535:java.util.Iterator iterator():0 -> iterator
kotlin.ranges.IntProgressionIterator -> x.b:
    int next -> d
    int finalElement -> b
    boolean hasNext -> c
    int step -> a
    int nextInt() -> a
kotlin.ranges.IntRange -> x.c:
    1:1:int kotlin.ranges.IntProgression.getFirst():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:int kotlin.ranges.IntProgression.getFirst():0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:int kotlin.ranges.IntProgression.getLast():0:0 -> equals
    4:4:boolean equals(java.lang.Object):0 -> equals
    5:5:int kotlin.ranges.IntProgression.getLast():0:0 -> equals
    5:5:boolean equals(java.lang.Object):0 -> equals
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:int kotlin.ranges.IntProgression.getFirst():0:0 -> hashCode
    1:1:int hashCode():0 -> hashCode
    2:2:int kotlin.ranges.IntProgression.getLast():0:0 -> hashCode
    2:2:int hashCode():0 -> hashCode
    1:1:int kotlin.ranges.IntProgression.getFirst():0:0 -> isEmpty
    1:1:boolean isEmpty():0 -> isEmpty
    2:2:int kotlin.ranges.IntProgression.getLast():0:0 -> isEmpty
    2:2:boolean isEmpty():0 -> isEmpty
    1:1:int kotlin.ranges.IntProgression.getFirst():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:int kotlin.ranges.IntProgression.getLast():0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
kotlin.text.Charsets -> y.a:
    java.nio.charset.Charset UTF_8 -> a
kotlin.text.StringsKt__RegexExtensionsKt -> y.b:
kotlin.text.StringsKt__StringBuilderKt -> y.c:
kotlin.text.StringsKt__StringNumberConversionsKt -> y.d:
kotlin.text.StringsKt__StringsKt -> y.e:
    1:1:int kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean):0:0 -> t
    1:1:int kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object):0 -> t
    1:1:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean):0 -> t
    2:2:int kotlin.ranges.IntProgression.getLast():0:0 -> t
    2:2:int kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean):0 -> t
    2:2:int kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object):0 -> t
    2:2:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean):0 -> t
    3:3:int kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean):0:0 -> t
    3:3:int kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object):0 -> t
    3:3:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean):0 -> t
    0:65535:int kotlin.text.StringsKt__StringsKt.indexOf(java.lang.CharSequence,char,int,boolean):0:0 -> u
    0:65535:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object):0 -> u
    1:1:kotlin.ranges.IntRange kotlin.text.StringsKt__StringsKt.getIndices(java.lang.CharSequence):0:0 -> v
    1:1:boolean kotlin.text.StringsKt__StringsJVMKt.isBlank(java.lang.CharSequence):0 -> v
    2:2:boolean kotlin.text.StringsKt__StringsJVMKt.isBlank(java.lang.CharSequence):0:0 -> v
    3:3:boolean kotlin.text.CharsKt__CharJVMKt.isWhitespace(char):0:0 -> v
    3:3:boolean kotlin.text.StringsKt__StringsJVMKt.isBlank(java.lang.CharSequence):0 -> v
    boolean kotlin.text.StringsKt__StringsJVMKt.regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> w
org.godotengine.godot.FullScreenGodotApp -> z.b:
    org.godotengine.godot.Godot godotFragment -> m
    void onGodotForceQuit(org.godotengine.godot.Godot) -> b
    1:1:org.godotengine.godot.Godot org.godotengine.godot.FullScreenGodotApp.initGodotInstance():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    3:3:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentManager.beginTransaction():0:0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void onCreate(android.os.Bundle):0:0 -> onCreate
    5:5:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.replace(int,androidx.fragment.app.Fragment,java.lang.String):0:0 -> onCreate
    5:5:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.replace(int,androidx.fragment.app.Fragment):0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0:0 -> onCreate
    7:7:androidx.fragment.app.FragmentTransaction androidx.fragment.app.BackStackRecord.setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0:0 -> onCreate
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14}}
    12:12:androidx.fragment.app.FragmentTransaction androidx.fragment.app.BackStackRecord.setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> onCreate
    12:12:void onCreate(android.os.Bundle):0 -> onCreate
    13:13:androidx.fragment.app.FragmentTransaction androidx.fragment.app.BackStackRecord.setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> onCreate
    13:13:void onCreate(android.os.Bundle):0 -> onCreate
    14:14:androidx.fragment.app.FragmentTransaction androidx.fragment.app.BackStackRecord.setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> onCreate
    14:14:void onCreate(android.os.Bundle):0 -> onCreate
    9:9:androidx.fragment.app.FragmentTransaction androidx.fragment.app.BackStackRecord.setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    10:10:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> onCreate
    10:10:androidx.fragment.app.FragmentTransaction androidx.fragment.app.BackStackRecord.setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0 -> onCreate
    10:10:void onCreate(android.os.Bundle):0 -> onCreate
    11:11:void onCreate(android.os.Bundle):0:0 -> onCreate
    1:1:void org.godotengine.godot.utils.ProcessPhoenix.forceQuit(android.app.Activity):0:0 -> p
    1:1:void handleStartIntent(android.content.Intent,boolean):0 -> p
    2:2:void org.godotengine.godot.utils.ProcessPhoenix.forceQuit(android.app.Activity,int):0:0 -> p
    2:2:void org.godotengine.godot.utils.ProcessPhoenix.forceQuit(android.app.Activity):0 -> p
    2:2:void handleStartIntent(android.content.Intent,boolean):0 -> p
    3:3:void handleStartIntent(android.content.Intent,boolean):0:0 -> p
    4:4:void org.godotengine.godot.utils.ProcessPhoenix.triggerRebirth(android.content.Context,android.content.Intent[]):0:0 -> p
    4:4:void handleStartIntent(android.content.Intent,boolean):0 -> p
    1:1:void org.godotengine.godot.utils.ProcessPhoenix.forceQuit(android.app.Activity):0:0 -> q
    1:1:void terminateGodotInstance(org.godotengine.godot.Godot):0 -> q
    2:2:void org.godotengine.godot.utils.ProcessPhoenix.forceQuit(android.app.Activity,int):0:0 -> q
    2:2:void org.godotengine.godot.utils.ProcessPhoenix.forceQuit(android.app.Activity):0 -> q
    2:2:void terminateGodotInstance(org.godotengine.godot.Godot):0 -> q
org.godotengine.godot.Godot -> org.godotengine.godot.Godot:
    android.view.View mDashboard -> Y
    boolean use_debug_opengl -> d0
    boolean activityResumed -> e0
    org.godotengine.godot.io.directory.DirectoryAccessHandler directoryAccessHandler -> u0
    android.widget.TextView mStatusText -> S
    android.widget.TextView mProgressPercent -> U
    boolean use_immersive -> c0
    android.widget.TextView mTimeRemaining -> W
    android.widget.Button mPauseButton -> a0
    java.lang.String[] command_line -> i0
    org.godotengine.godot.plugin.GodotPluginRegistry pluginRegistry -> h0
    org.godotengine.godot.utils.GodotNetUtils netUtils -> t0
    org.godotengine.godot.xr.XRMode xrMode -> b0
    com.google.android.vending.expansion.downloader.IStub mDownloaderClientStub -> R
    java.lang.String expansion_pack_path -> w0
    org.godotengine.godot.GodotIO io -> s0
    android.hardware.SensorManager mSensorManager -> n0
    android.hardware.Sensor mAccelerometer -> o0
    android.widget.ProgressBar mPB -> X
    android.hardware.Sensor mGravity -> p0
    android.hardware.Sensor mMagnetometer -> q0
    org.godotengine.godot.GodotHost godotHost -> g0
    android.hardware.Sensor mGyroscope -> r0
    android.view.View mCellMessage -> Z
    int mState -> f0
    org.godotengine.godot.GodotRenderView mRenderView -> l0
    android.widget.TextView mProgressFraction -> T
    android.widget.TextView mAverageSpeed -> V
    org.godotengine.godot.io.file.FileAccessHandler fileAccessHandler -> v0
    android.view.ViewGroup containerLayout -> k0
    int $r8$clinit -> x0
    boolean godot_initialized -> m0
    boolean use_apk_expansion -> j0
    1:1:void androidx.fragment.app.Fragment.onAttach(android.content.Context):0:0 -> A
    1:1:void onAttach(android.content.Context):0 -> A
    2:2:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> A
    2:2:void androidx.fragment.app.Fragment.onAttach(android.content.Context):0 -> A
    2:2:void onAttach(android.content.Context):0 -> A
    3:3:void androidx.fragment.app.Fragment.onAttach(android.app.Activity):0:0 -> A
    3:3:void androidx.fragment.app.Fragment.onAttach(android.content.Context):0 -> A
    3:3:void onAttach(android.content.Context):0 -> A
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.Fragment.getParentFragment():0:0 -> A
    4:4:void onAttach(android.content.Context):0 -> A
    5:5:void onAttach(android.content.Context):0:0 -> A
    1:1:void androidx.fragment.app.Fragment.onCreate(android.os.Bundle):0:0 -> B
    1:1:void onCreate(android.os.Bundle):0 -> B
    2:2:boolean androidx.fragment.app.FragmentManager.isStateAtLeast(int):0:0 -> B
    2:2:void androidx.fragment.app.Fragment.onCreate(android.os.Bundle):0 -> B
    2:2:void onCreate(android.os.Bundle):0 -> B
    3:3:void androidx.fragment.app.Fragment.onCreate(android.os.Bundle):0:0 -> B
    3:3:void onCreate(android.os.Bundle):0 -> B
    4:4:void onCreate(android.os.Bundle):0:0 -> B
    5:5:org.godotengine.godot.plugin.GodotPluginRegistry org.godotengine.godot.plugin.GodotPluginRegistry.initializePluginRegistry(org.godotengine.godot.Godot):0:0 -> B
    5:5:void onCreate(android.os.Bundle):0 -> B
    6:6:void onCreate(android.os.Bundle):0:0 -> B
    7:7:java.lang.String[] parseCommandLine():0:0 -> B
    7:7:java.lang.String[] getCommandLine():0 -> B
    7:7:void onCreate(android.os.Bundle):0 -> B
    8:8:java.lang.String[] getCommandLine():0:0 -> B
    8:8:void onCreate(android.os.Bundle):0 -> B
    9:9:void onCreate(android.os.Bundle):0:0 -> B
    10:10:void UiChangeListener():0:0 -> B
    10:10:void onCreate(android.os.Bundle):0 -> B
    11:11:void onCreate(android.os.Bundle):0:0 -> B
    12:12:void org.godotengine.godot.utils.BenchmarkUtils.setUseBenchmark(boolean):0:0 -> B
    12:12:void onCreate(android.os.Bundle):0 -> B
    13:13:void onCreate(android.os.Bundle):0:0 -> B
    14:14:void org.godotengine.godot.utils.BenchmarkUtils.setUseBenchmark(boolean):0:0 -> B
    14:14:void onCreate(android.os.Bundle):0 -> B
    15:15:void onCreate(android.os.Bundle):0:0 -> B
    16:16:void org.godotengine.godot.utils.BenchmarkUtils.setBenchmarkFile(java.lang.String):0:0 -> B
    16:16:void onCreate(android.os.Bundle):0 -> B
    17:17:void onCreate(android.os.Bundle):0:0 -> B
    18:18:boolean obbIsCorrupted(java.lang.String,java.lang.String):0:0 -> B
    18:18:void onCreate(android.os.Bundle):0 -> B
    19:19:void onCreate(android.os.Bundle):0:0 -> B
    20:20:int com.google.android.vending.expansion.downloader.DownloaderClientMarshaller.startDownloadServiceIfRequired(android.content.Context,android.app.PendingIntent,java.lang.Class):0:0 -> B
    20:20:void onCreate(android.os.Bundle):0 -> B
    21:21:void onCreate(android.os.Bundle):0:0 -> B
    22:22:com.google.android.vending.expansion.downloader.IStub com.google.android.vending.expansion.downloader.DownloaderClientMarshaller.CreateStub(com.google.android.vending.expansion.downloader.IDownloaderClient,java.lang.Class):0:0 -> B
    22:22:void onCreate(android.os.Bundle):0 -> B
    23:23:void onCreate(android.os.Bundle):0:0 -> B
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> C
    1:1:void androidx.fragment.app.Fragment.onDestroy():0:0 -> D
    1:1:void onDestroy():0 -> D
    2:2:void forceQuit():0:0 -> D
    2:2:void onDestroy():0 -> D
    1:1:void androidx.fragment.app.Fragment.onDetach():0:0 -> E
    1:1:void onDetach():0 -> E
    2:2:void onDetach():0:0 -> E
    1:1:void androidx.fragment.app.Fragment.onPause():0:0 -> G
    1:1:void onPause():0 -> G
    2:2:void onPause():0:0 -> G
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> H
    1:1:void androidx.fragment.app.Fragment.onResume():0:0 -> I
    1:1:void onResume():0 -> I
    2:2:void onResume():0:0 -> I
    1:1:android.os.Messenger com.google.android.vending.expansion.downloader.DownloaderClientMarshaller$Stub.getMessenger():0:0 -> b
    1:1:void onServiceConnected(android.os.Messenger):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller$Proxy.onClientUpdated(android.os.Messenger):0:0 -> b
    2:2:void onServiceConnected(android.os.Messenger):0 -> b
    3:3:void com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller$Proxy.send(int,android.os.Bundle):0:0 -> b
    3:3:void com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller$Proxy.onClientUpdated(android.os.Messenger):0 -> b
    3:3:void onServiceConnected(android.os.Messenger):0 -> b
    0:65535:void forceQuit():0:0 -> b0
    0:65535:void $r8$lambda$5wHLAXqrNb_pOUOR_xUZMbvLsrs(org.godotengine.godot.Godot):0 -> b0
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String com.google.android.vending.expansion.downloader.Helpers.getSpeedString(float):0:0 -> c
    1:1:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0 -> c
    2:2:java.lang.String androidx.fragment.app.Fragment.getString(int,java.lang.Object[]):0:0 -> c
    2:2:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0 -> c
    3:3:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0:0 -> c
    4:4:java.lang.String androidx.fragment.app.Fragment.getString(int,java.lang.Object[]):0:0 -> c
    4:4:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0 -> c
    5:5:void onDownloadProgress(com.google.android.vending.expansion.downloader.DownloadProgressInfo):0:0 -> c
    1:1:void alert(java.lang.String,java.lang.String,java.lang.Runnable):0:0 -> c0
    1:1:void alert(int,int,java.lang.Runnable):0 -> c0
    2:2:void runOnUiThread(java.lang.Runnable):0:0 -> c0
    2:2:void alert(java.lang.String,java.lang.String,java.lang.Runnable):0 -> c0
    2:2:void alert(int,int,java.lang.Runnable):0 -> c0
    1:1:void setState(int):0:0 -> d
    1:1:void onDownloadStateChanged(int):0 -> d
    2:2:void onDownloadStateChanged(int):0:0 -> d
    3:3:void setButtonPausedState(boolean):0:0 -> d
    3:3:void onDownloadStateChanged(int):0 -> d
    float[] getRotatedValues(float[]) -> d0
    1:1:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0:0 -> dumpBenchmark
    1:1:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    2:2:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> dumpBenchmark
    2:2:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0 -> dumpBenchmark
    2:2:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    2:2:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    3:3:java.lang.Appendable kotlin.collections.CollectionsKt___CollectionsKt.joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> dumpBenchmark
    3:3:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0 -> dumpBenchmark
    3:3:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0 -> dumpBenchmark
    3:3:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    3:3:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    4:4:void kotlin.text.StringsKt__AppendableKt.appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> dumpBenchmark
    4:4:java.lang.Appendable kotlin.collections.CollectionsKt___CollectionsKt.joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0 -> dumpBenchmark
    4:4:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0 -> dumpBenchmark
    4:4:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0 -> dumpBenchmark
    4:4:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    4:4:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    5:5:java.lang.Appendable kotlin.collections.CollectionsKt___CollectionsKt.joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> dumpBenchmark
    5:5:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0 -> dumpBenchmark
    5:5:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0 -> dumpBenchmark
    5:5:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    5:5:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    6:6:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> dumpBenchmark
    6:6:java.lang.String kotlin.collections.CollectionsKt___CollectionsKt.joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0 -> dumpBenchmark
    6:6:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    6:6:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    7:7:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0:0 -> dumpBenchmark
    7:7:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    8:8:int org.godotengine.godot.io.file.FileAccessHandler.fileOpen$lib_templateRelease(java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0:0 -> dumpBenchmark
    8:8:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    8:8:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    9:9:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0:0 -> dumpBenchmark
    9:9:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    10:10:java.util.Map kotlin.collections.MapsKt__MapsKt.toMap(java.util.Map):0:0 -> dumpBenchmark
    10:10:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    10:10:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    11:11:java.util.Map kotlin.collections.MapsKt__MapsKt.toMutableMap(java.util.Map):0:0 -> dumpBenchmark
    11:11:java.util.Map kotlin.collections.MapsKt__MapsKt.toMap(java.util.Map):0 -> dumpBenchmark
    11:11:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    11:11:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    12:12:java.util.Map kotlin.collections.MapsKt__MapsJVMKt.toSingletonMap(java.util.Map):0:0 -> dumpBenchmark
    12:12:java.util.Map kotlin.collections.MapsKt__MapsKt.toMap(java.util.Map):0 -> dumpBenchmark
    12:12:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    12:12:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    13:13:java.util.Map kotlin.collections.MapsKt__MapsKt.toMap(java.util.Map):0:0 -> dumpBenchmark
    13:13:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    13:13:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    14:14:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0:0 -> dumpBenchmark
    14:14:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    15:15:boolean org.godotengine.godot.io.file.FileAccessHandler.hasFileId(int):0:0 -> dumpBenchmark
    15:15:void org.godotengine.godot.io.file.FileAccessHandler.fileWrite(int,java.nio.ByteBuffer):0 -> dumpBenchmark
    15:15:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    15:15:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    16:16:void org.godotengine.godot.io.file.FileAccessHandler.fileWrite(int,java.nio.ByteBuffer):0:0 -> dumpBenchmark
    16:16:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    16:16:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    17:17:void org.godotengine.godot.io.file.DataAccess.write(java.nio.ByteBuffer):0:0 -> dumpBenchmark
    17:17:void org.godotengine.godot.io.file.FileAccessHandler.fileWrite(int,java.nio.ByteBuffer):0 -> dumpBenchmark
    17:17:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    17:17:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    18:18:boolean org.godotengine.godot.io.file.FileAccessHandler.hasFileId(int):0:0 -> dumpBenchmark
    18:18:void org.godotengine.godot.io.file.FileAccessHandler.fileClose(int):0 -> dumpBenchmark
    18:18:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    18:18:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    19:19:void org.godotengine.godot.io.file.FileAccessHandler.fileClose(int):0:0 -> dumpBenchmark
    19:19:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    19:19:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    20:20:void org.godotengine.godot.io.file.DataAccess.close():0:0 -> dumpBenchmark
    20:20:void org.godotengine.godot.io.file.FileAccessHandler.fileClose(int):0 -> dumpBenchmark
    20:20:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    20:20:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    21:21:void org.godotengine.godot.io.file.FileAccessHandler.fileClose(int):0:0 -> dumpBenchmark
    21:21:void org.godotengine.godot.utils.BenchmarkUtils.dumpBenchmark(org.godotengine.godot.io.file.FileAccessHandler,java.lang.String):0 -> dumpBenchmark
    21:21:void dumpBenchmark(java.lang.String):0 -> dumpBenchmark
    void initializeGodot() -> e0
    void onBackPressed() -> f0
    0:65535:java.lang.String org.godotengine.godot.utils.GodotNetUtils.getCACertificates():0:0 -> getCACertificates
    0:65535:java.lang.String getCACertificates():0 -> getCACertificates
    1:1:boolean usesVulkan():0:0 -> onVideoInit
    1:1:boolean onVideoInit():0 -> onVideoInit
    2:2:boolean onVideoInit():0:0 -> onVideoInit
    3:3:boolean meetsVulkanRequirements(android.content.pm.PackageManager):0:0 -> onVideoInit
    3:3:boolean onVideoInit():0 -> onVideoInit
    4:6:boolean onVideoInit():0:0 -> onVideoInit
    1:1:boolean requestPermission(java.lang.String):0:0 -> vibrate
    1:1:void vibrate(int):0 -> vibrate
    2:2:void vibrate(int):0:0 -> vibrate
    void onActivityResult(int,int,android.content.Intent) -> z
org.godotengine.godot.Godot$1 -> org.godotengine.godot.Godot$a:
    android.view.View val$decorView -> c
    int endBottom -> b
    int startBottom -> a
org.godotengine.godot.Godot$2 -> org.godotengine.godot.Godot$b:
    org.godotengine.godot.Godot this$0 -> b
    android.graphics.Rect visibleSize -> a
org.godotengine.godot.GodotDownloaderAlarmReceiver -> z.j:
    1:1:int com.google.android.vending.expansion.downloader.DownloaderClientMarshaller.startDownloadServiceIfRequired(android.content.Context,android.content.Intent,java.lang.Class):0:0 -> onReceive
    1:1:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    2:2:int com.google.android.vending.expansion.downloader.impl.DownloaderService.startDownloadServiceIfRequired(android.content.Context,android.content.Intent,java.lang.Class):0:0 -> onReceive
    2:2:int com.google.android.vending.expansion.downloader.DownloaderClientMarshaller.startDownloadServiceIfRequired(android.content.Context,android.content.Intent,java.lang.Class):0 -> onReceive
    2:2:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    3:3:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
org.godotengine.godot.GodotDownloaderService -> org.godotengine.godot.GodotDownloaderService:
    byte[] SALT -> A
    java.lang.String getAlarmReceiverClassName() -> j
    1:1:java.lang.String getPublicKey():0:0 -> l
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:java.lang.String getPublicKey():0:0 -> l
    4:4:java.lang.String getPublicKey():0:0 -> l
    5:5:java.lang.String getPublicKey():0:0 -> l
    2:2:java.lang.String getPublicKey():0:0 -> l
    byte[] getSALT() -> m
org.godotengine.godot.GodotGLRenderView -> org.godotengine.godot.GodotGLRenderView:
    android.util.SparseArray customPointerIcons -> p
    org.godotengine.godot.Godot godot -> m
    org.godotengine.godot.input.GodotInputHandler inputHandler -> n
    org.godotengine.godot.gl.GodotRenderer godotRenderer -> o
    int $r8$clinit -> q
    0:65535:void init(org.godotengine.godot.xr.XRMode,boolean):0:0 -> <init>
    0:65535:void <init>(android.content.Context,org.godotengine.godot.Godot,org.godotengine.godot.xr.XRMode,boolean):0 -> <init>
    1:1:void org.godotengine.godot.gl.GLSurfaceView.onPause():0:0 -> a
    1:1:void onPause():0 -> a
    1:1:void onActivityPaused():0 -> a
    2:2:void org.godotengine.godot.gl.GLSurfaceView$GLThread.onPause():0:0 -> a
    2:2:void org.godotengine.godot.gl.GLSurfaceView.onPause():0 -> a
    2:2:void onPause():0 -> a
    2:2:void onActivityPaused():0 -> a
    3:3:void onPause():0:0 -> a
    3:3:void onActivityPaused():0 -> a
    4:4:void org.godotengine.godot.gl.GLSurfaceView$GLThread.onPause():0:0 -> a
    4:4:void org.godotengine.godot.gl.GLSurfaceView.onPause():0 -> a
    4:4:void onPause():0 -> a
    4:4:void onActivityPaused():0 -> a
    void onBackPressed() -> b
    1:1:void org.godotengine.godot.gl.GLSurfaceView.onResume():0:0 -> c
    1:1:void onResume():0 -> c
    1:1:void onActivityResumed():0 -> c
    2:2:void org.godotengine.godot.gl.GLSurfaceView$GLThread.onResume():0:0 -> c
    2:2:void org.godotengine.godot.gl.GLSurfaceView.onResume():0 -> c
    2:2:void onResume():0 -> c
    2:2:void onActivityResumed():0 -> c
    3:3:void onResume():0:0 -> c
    3:3:void onActivityResumed():0 -> c
    4:4:void org.godotengine.godot.gl.GLSurfaceView$GLThread.onResume():0:0 -> c
    4:4:void org.godotengine.godot.gl.GLSurfaceView.onResume():0 -> c
    4:4:void onResume():0 -> c
    4:4:void onActivityResumed():0 -> c
    void queueOnRenderThread(java.lang.Runnable) -> d
    1:1:boolean org.godotengine.godot.GodotRenderView.canCapturePointer():0:0 -> requestPointerCapture
    1:1:void requestPointerCapture():0 -> requestPointerCapture
    2:2:boolean org.godotengine.godot.input.GodotInputHandler.canCapturePointer():0:0 -> requestPointerCapture
    2:2:boolean org.godotengine.godot.GodotRenderView.canCapturePointer():0 -> requestPointerCapture
    2:2:void requestPointerCapture():0 -> requestPointerCapture
    3:3:void requestPointerCapture():0:0 -> requestPointerCapture
org.godotengine.godot.GodotHost -> z.l:
    void onGodotForceQuit(org.godotengine.godot.Godot) -> b
    int onNewGodotInstanceRequested(java.lang.String[]) -> c
    boolean onGodotForceQuit(int) -> d
    java.util.List getCommandLine() -> i
org.godotengine.godot.GodotRenderView -> z.m:
    void onActivityPaused() -> a
    void onBackPressed() -> b
    void onActivityResumed() -> c
    void queueOnRenderThread(java.lang.Runnable) -> d
org.godotengine.godot.GodotVulkanRenderView -> org.godotengine.godot.GodotVulkanRenderView:
    int $r8$clinit -> g
    android.util.SparseArray customPointerIcons -> f
    org.godotengine.godot.Godot godot -> c
    org.godotengine.godot.input.GodotInputHandler mInputHandler -> d
    org.godotengine.godot.vulkan.VkRenderer mRenderer -> e
    0:65535:void onPause():0:0 -> a
    0:65535:void onActivityPaused():0 -> a
    void onBackPressed() -> b
    0:65535:void onResume():0:0 -> c
    0:65535:void onActivityResumed():0 -> c
    void queueOnRenderThread(java.lang.Runnable) -> d
    1:1:boolean org.godotengine.godot.GodotRenderView.canCapturePointer():0:0 -> requestPointerCapture
    1:1:void requestPointerCapture():0 -> requestPointerCapture
    2:2:boolean org.godotengine.godot.input.GodotInputHandler.canCapturePointer():0:0 -> requestPointerCapture
    2:2:boolean org.godotengine.godot.GodotRenderView.canCapturePointer():0 -> requestPointerCapture
    2:2:void requestPointerCapture():0 -> requestPointerCapture
    3:3:void requestPointerCapture():0:0 -> requestPointerCapture
org.godotengine.godot.gl.GLSurfaceView -> a0.a:
    org.godotengine.godot.gl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> e
    org.godotengine.godot.gl.GLSurfaceView$GLThreadManager sGLThreadManager -> l
    org.godotengine.godot.gl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> g
    int mEGLContextClientVersion -> j
    org.godotengine.godot.gl.GLSurfaceView$GLThread mGLThread -> b
    boolean mPreserveEGLContextOnPause -> k
    int mDebugFlags -> i
    org.godotengine.godot.gl.GLSurfaceView$Renderer mRenderer -> c
    java.lang.ref.WeakReference mThisWeakRef -> a
    org.godotengine.godot.gl.GLSurfaceView$EGLContextFactory mEGLContextFactory -> f
    org.godotengine.godot.gl.GLSurfaceView$GLWrapper mGLWrapper -> h
    boolean mDetached -> d
    0:65535:void org.godotengine.godot.gl.GLSurfaceView.init():0:0 -> <init>
    0:65535:void <init>(android.content.Context):0 -> <init>
    void checkRenderThreadState() -> e
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$GLThread.queueEvent(java.lang.Runnable):0:0 -> f
    0:65535:void queueEvent(java.lang.Runnable):0 -> f
    0:65535:int org.godotengine.godot.gl.GLSurfaceView$GLThread.getRenderMode():0:0 -> getRenderMode
    0:65535:int getRenderMode():0 -> getRenderMode
    1:1:int org.godotengine.godot.gl.GLSurfaceView$GLThread.getRenderMode():0:0 -> onAttachedToWindow
    1:1:void onAttachedToWindow():0 -> onAttachedToWindow
    2:2:void onAttachedToWindow():0:0 -> onAttachedToWindow
    1:1:void org.godotengine.godot.gl.GLSurfaceView$GLThread.onWindowResize(int,int):0:0 -> surfaceChanged
    1:1:void surfaceChanged(android.view.SurfaceHolder,int,int,int):0 -> surfaceChanged
    2:2:boolean org.godotengine.godot.gl.GLSurfaceView$GLThread.ableToDraw():0:0 -> surfaceChanged
    2:2:void org.godotengine.godot.gl.GLSurfaceView$GLThread.onWindowResize(int,int):0 -> surfaceChanged
    2:2:void surfaceChanged(android.view.SurfaceHolder,int,int,int):0 -> surfaceChanged
    3:3:void org.godotengine.godot.gl.GLSurfaceView$GLThread.onWindowResize(int,int):0:0 -> surfaceChanged
    3:3:void surfaceChanged(android.view.SurfaceHolder,int,int,int):0 -> surfaceChanged
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$GLThread.surfaceCreated():0:0 -> surfaceCreated
    0:65535:void surfaceCreated(android.view.SurfaceHolder):0 -> surfaceCreated
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$GLThread.surfaceDestroyed():0:0 -> surfaceDestroyed
    0:65535:void surfaceDestroyed(android.view.SurfaceHolder):0 -> surfaceDestroyed
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$GLThread.requestRenderAndNotify(java.lang.Runnable):0:0 -> surfaceRedrawNeededAsync
    0:65535:void surfaceRedrawNeededAsync(android.view.SurfaceHolder,java.lang.Runnable):0 -> surfaceRedrawNeededAsync
org.godotengine.godot.gl.GLSurfaceView$BaseConfigChooser -> a0.a$a:
    int[] mConfigSpec -> a
    org.godotengine.godot.gl.GLSurfaceView this$0 -> b
    1:1:int[] org.godotengine.godot.gl.GLSurfaceView$BaseConfigChooser.filterConfigSpec(int[]):0:0 -> <init>
    1:1:void <init>(org.godotengine.godot.gl.GLSurfaceView,int[]):0 -> <init>
    2:2:void <init>(org.godotengine.godot.gl.GLSurfaceView,int[]):0:0 -> <init>
    1:1:javax.microedition.khronos.egl.EGLConfig org.godotengine.godot.gl.GLSurfaceView$ComponentSizeChooser.chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]):0:0 -> a
    1:1:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):0 -> a
    2:2:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):0:0 -> a
org.godotengine.godot.gl.GLSurfaceView$ComponentSizeChooser -> a0.a$b:
    int[] mValue -> c
    int mDepthSize -> h
    int mStencilSize -> i
    org.godotengine.godot.gl.GLSurfaceView this$0 -> j
    int mBlueSize -> f
    int mAlphaSize -> g
    int mRedSize -> d
    int mGreenSize -> e
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> b
org.godotengine.godot.gl.GLSurfaceView$DefaultContextFactory -> a0.a$c:
    org.godotengine.godot.gl.GLSurfaceView this$0 -> a
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$DefaultContextFactory.<init>(org.godotengine.godot.gl.GLSurfaceView):0:0 -> <init>
    0:65535:void <init>(org.godotengine.godot.gl.GLSurfaceView,org.godotengine.godot.gl.GLSurfaceView$DefaultContextFactory-IA):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$EglHelper.throwEglException(java.lang.String,int):0:0 -> b
    0:65535:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext):0 -> b
org.godotengine.godot.gl.GLSurfaceView$DefaultWindowSurfaceFactory -> a0.a$d:
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$DefaultWindowSurfaceFactory.<init>():0:0 -> <init>
    0:65535:void <init>(org.godotengine.godot.gl.GLSurfaceView$DefaultWindowSurfaceFactory-IA):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> b
org.godotengine.godot.gl.GLSurfaceView$EGLConfigChooser -> a0.a$e:
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
org.godotengine.godot.gl.GLSurfaceView$EGLContextFactory -> a0.a$f:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> b
org.godotengine.godot.gl.GLSurfaceView$EGLWindowSurfaceFactory -> a0.a$g:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> b
org.godotengine.godot.gl.GLSurfaceView$EglHelper -> a0.a$h:
    javax.microedition.khronos.egl.EGL10 mEgl -> b
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> e
    javax.microedition.khronos.egl.EGLContext mEglContext -> f
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> a
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> d
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> c
    1:1:void org.godotengine.godot.gl.GLSurfaceView$EglHelper.logEglErrorAsWarning(java.lang.String,java.lang.String,int):0:0 -> a
    1:1:boolean createSurface():0 -> a
    2:2:boolean createSurface():0:0 -> a
    void destroySurfaceImp() -> b
    1:1:java.lang.String formatEglError(java.lang.String,int):0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":4,"2":5,"3":6}}
    4:4:java.lang.String org.godotengine.godot.gl.EGLLogWrapper.getHex(int):0:0 -> c
    4:4:java.lang.String org.godotengine.godot.gl.EGLLogWrapper.getErrorString(int):0 -> c
    4:4:java.lang.String formatEglError(java.lang.String,int):0 -> c
    5:5:java.lang.String org.godotengine.godot.gl.EGLLogWrapper.getHex(int):0:0 -> c
    5:5:java.lang.String org.godotengine.godot.gl.EGLLogWrapper.getErrorString(int):0 -> c
    5:5:java.lang.String formatEglError(java.lang.String,int):0 -> c
    6:6:java.lang.String org.godotengine.godot.gl.EGLLogWrapper.getHex(int):0:0 -> c
    6:6:java.lang.String org.godotengine.godot.gl.EGLLogWrapper.getErrorString(int):0 -> c
    6:6:java.lang.String formatEglError(java.lang.String,int):0 -> c
    2:2:java.lang.String org.godotengine.godot.gl.EGLLogWrapper.getHex(int):0:0 -> c
    2:2:java.lang.String org.godotengine.godot.gl.EGLLogWrapper.getErrorString(int):0 -> c
    2:2:java.lang.String formatEglError(java.lang.String,int):0 -> c
    3:3:java.lang.String formatEglError(java.lang.String,int):0:0 -> c
    1:1:void org.godotengine.godot.gl.GLSurfaceView$EglHelper.throwEglException(java.lang.String):0:0 -> d
    1:1:void start():0 -> d
    2:2:void org.godotengine.godot.gl.GLSurfaceView$EglHelper.throwEglException(java.lang.String,int):0:0 -> d
    2:2:void org.godotengine.godot.gl.GLSurfaceView$EglHelper.throwEglException(java.lang.String):0 -> d
    2:2:void start():0 -> d
    3:3:void start():0:0 -> d
org.godotengine.godot.gl.GLSurfaceView$GLThread -> a0.a$i:
    boolean mRequestRender -> n
    int mHeight -> l
    boolean mWantRenderNotification -> o
    java.lang.Runnable mFinishDrawingRunnable -> s
    int mRenderMode -> m
    boolean mRenderComplete -> p
    boolean mHaveEglSurface -> i
    boolean mFinishedCreatingEglSurface -> j
    int mWidth -> k
    boolean mSizeChanged -> r
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> u
    boolean mHasSurface -> e
    boolean mSurfaceIsBad -> f
    boolean mWaitingForSurface -> g
    boolean mHaveEglContext -> h
    boolean mShouldExit -> a
    boolean mExited -> b
    boolean mRequestPaused -> c
    java.util.ArrayList mEventQueue -> q
    boolean mPaused -> d
    org.godotengine.godot.gl.GLSurfaceView$EglHelper mEglHelper -> t
    1:1:void org.godotengine.godot.gl.GLSurfaceView$GLThreadManager.releaseEglContextLocked(org.godotengine.godot.gl.GLSurfaceView$GLThread):0:0 -> a
    1:1:void guardedRun():0 -> a
    2:2:void guardedRun():0:0 -> a
    3:3:javax.microedition.khronos.opengles.GL org.godotengine.godot.gl.GLSurfaceView$EglHelper.createGL():0:0 -> a
    3:3:void guardedRun():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void guardedRun():0:0 -> a
    5:5:void org.godotengine.godot.gl.GodotRenderer.onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig):0:0 -> a
    5:5:void guardedRun():0 -> a
    6:6:void guardedRun():0:0 -> a
    7:7:void org.godotengine.godot.gl.GodotRenderer.onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int):0:0 -> a
    7:7:void guardedRun():0 -> a
    8:8:void guardedRun():0:0 -> a
    9:9:boolean org.godotengine.godot.gl.GodotRenderer.onDrawFrame(javax.microedition.khronos.opengles.GL10):0:0 -> a
    9:9:void guardedRun():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void guardedRun():0:0 -> a
    11:11:int org.godotengine.godot.gl.GLSurfaceView$EglHelper.swap():0:0 -> a
    11:11:void guardedRun():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:void org.godotengine.godot.gl.GLSurfaceView$EglHelper.logEglErrorAsWarning(java.lang.String,java.lang.String,int):0:0 -> a
    12:12:void guardedRun():0 -> a
    13:13:void guardedRun():0:0 -> a
    boolean readyToDraw() -> b
    void requestExitAndWait() -> c
    void setRenderMode(int) -> d
    1:1:void org.godotengine.godot.gl.GLSurfaceView$EglHelper.finish():0:0 -> e
    1:1:void stopEglContextLocked():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void stopEglContextLocked():0:0 -> e
    3:3:void org.godotengine.godot.gl.GLSurfaceView$GLThreadManager.releaseEglContextLocked(org.godotengine.godot.gl.GLSurfaceView$GLThread):0:0 -> e
    3:3:void stopEglContextLocked():0 -> e
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$EglHelper.destroySurface():0:0 -> f
    0:65535:void stopEglSurfaceLocked():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void run():0:0 -> run
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5}}
    3:3:void run():0:0 -> run
    4:4:void run():0:0 -> run
    5:5:void run():0:0 -> run
    2:2:void run():0:0 -> run
org.godotengine.godot.gl.GLSurfaceView$GLThreadManager -> a0.a$j:
    0:65535:void org.godotengine.godot.gl.GLSurfaceView$GLThreadManager.<init>():0:0 -> <init>
    0:65535:void <init>(org.godotengine.godot.gl.GLSurfaceView$GLThreadManager-IA):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void threadExiting(org.godotengine.godot.gl.GLSurfaceView$GLThread) -> a
org.godotengine.godot.gl.GLSurfaceView$GLWrapper -> a0.a$k:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> a
org.godotengine.godot.gl.GLSurfaceView$LogWriter -> a0.a$l:
    java.lang.StringBuilder mBuilder -> a
    void flushBuilder() -> a
org.godotengine.godot.gl.GLSurfaceView$Renderer -> a0.a$m:
org.godotengine.godot.gl.GLSurfaceView$SimpleEGLConfigChooser -> a0.a$n:
    org.godotengine.godot.gl.GLSurfaceView this$0 -> k
org.godotengine.godot.gl.GodotRenderer -> a0.b:
    org.godotengine.godot.plugin.GodotPluginRegistry pluginRegistry -> a
    boolean activityJustResumed -> b
    1:1:org.godotengine.godot.plugin.GodotPluginRegistry org.godotengine.godot.plugin.GodotPluginRegistry.getPluginRegistry():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    3:3:org.godotengine.godot.plugin.GodotPluginRegistry org.godotengine.godot.plugin.GodotPluginRegistry.getPluginRegistry():0:0 -> <init>
    3:3:void <init>():0 -> <init>
org.godotengine.godot.input.GodotEditText -> b0.a:
    org.godotengine.godot.GodotRenderView mRenderView -> a
    org.godotengine.godot.input.GodotEditText$VirtualKeyboardType mKeyboardType -> d
    int mMaxInputLength -> c
    org.godotengine.godot.input.GodotTextInputWrapper mInputWrapper -> b
    0:65535:void org.godotengine.godot.input.GodotEditText.initView():0:0 -> <init>
    0:65535:void <init>(android.content.Context):0 -> <init>
    1:1:void org.godotengine.godot.input.GodotEditText.handleMessage(android.os.Message):0:0 -> a
    1:1:void -$$Nest$mhandleMessage(org.godotengine.godot.input.GodotEditText,android.os.Message):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void org.godotengine.godot.input.GodotTextInputWrapper.setSelection(boolean):0:0 -> a
    2:2:void org.godotengine.godot.input.GodotEditText.handleMessage(android.os.Message):0 -> a
    2:2:void -$$Nest$mhandleMessage(org.godotengine.godot.input.GodotEditText,android.os.Message):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:void org.godotengine.godot.input.GodotEditText.handleMessage(android.os.Message):0:0 -> a
    3:3:void -$$Nest$mhandleMessage(org.godotengine.godot.input.GodotEditText,android.os.Message):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    4:4:void org.godotengine.godot.input.GodotTextInputWrapper.setSelection(boolean):0:0 -> a
    4:4:void org.godotengine.godot.input.GodotEditText.handleMessage(android.os.Message):0 -> a
    4:4:void -$$Nest$mhandleMessage(org.godotengine.godot.input.GodotEditText,android.os.Message):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    5:5:void org.godotengine.godot.input.GodotEditText.handleMessage(android.os.Message):0:0 -> a
    5:5:void -$$Nest$mhandleMessage(org.godotengine.godot.input.GodotEditText,android.os.Message):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    boolean needHandlingInGodot(int,android.view.KeyEvent) -> b
org.godotengine.godot.input.GodotEditText$EditHandler -> b0.a$a:
    java.lang.ref.WeakReference mEdit -> a
org.godotengine.godot.input.GodotEditText$VirtualKeyboardType -> b0.a$b:
    org.godotengine.godot.input.GodotEditText$VirtualKeyboardType KEYBOARD_TYPE_MULTILINE -> b
    org.godotengine.godot.input.GodotEditText$VirtualKeyboardType KEYBOARD_TYPE_DEFAULT -> a
    org.godotengine.godot.input.GodotEditText$VirtualKeyboardType[] $VALUES -> c
org.godotengine.godot.input.GodotGestureHandler -> b0.b:
    boolean nextDownIsDoubleTap -> a
    boolean dragInProgress -> b
    boolean contextClickInProgress -> c
    boolean pointerCaptureInProgress -> d
    1:1:boolean org.godotengine.godot.input.GodotGestureHandler.onActionMove(android.view.MotionEvent):0:0 -> a
    1:1:boolean onMotionEvent(android.view.MotionEvent):0 -> a
    2:2:boolean org.godotengine.godot.input.GodotGestureHandler.onActionUp(android.view.MotionEvent):0:0 -> a
    2:2:boolean onMotionEvent(android.view.MotionEvent):0 -> a
    3:3:boolean org.godotengine.godot.input.GodotInputHandler.isMouseEvent(android.view.MotionEvent):0:0 -> a
    3:3:boolean org.godotengine.godot.input.GodotGestureHandler.onActionUp(android.view.MotionEvent):0 -> a
    3:3:boolean onMotionEvent(android.view.MotionEvent):0 -> a
    4:4:boolean org.godotengine.godot.input.GodotGestureHandler.onActionUp(android.view.MotionEvent):0:0 -> a
    4:4:boolean onMotionEvent(android.view.MotionEvent):0 -> a
    1:1:void org.godotengine.godot.input.GodotGestureHandler.contextClickRouter(android.view.MotionEvent):0:0 -> onLongPress
    1:1:void onLongPress(android.view.MotionEvent):0 -> onLongPress
    2:2:boolean org.godotengine.godot.input.GodotInputHandler.handleMotionEvent(int,int,int,float,float):0:0 -> onLongPress
    2:2:void org.godotengine.godot.input.GodotGestureHandler.contextClickRouter(android.view.MotionEvent):0 -> onLongPress
    2:2:void onLongPress(android.view.MotionEvent):0 -> onLongPress
    3:3:void org.godotengine.godot.input.GodotGestureHandler.contextClickRouter(android.view.MotionEvent):0:0 -> onLongPress
    3:3:void onLongPress(android.view.MotionEvent):0 -> onLongPress
    4:4:boolean org.godotengine.godot.input.GodotInputHandler.handleMouseEvent(int,int,float,float):0:0 -> onLongPress
    4:4:void org.godotengine.godot.input.GodotGestureHandler.contextClickRouter(android.view.MotionEvent):0 -> onLongPress
    4:4:void onLongPress(android.view.MotionEvent):0 -> onLongPress
    5:5:void org.godotengine.godot.input.GodotGestureHandler.contextClickRouter(android.view.MotionEvent):0:0 -> onLongPress
    5:5:void onLongPress(android.view.MotionEvent):0 -> onLongPress
org.godotengine.godot.input.GodotInputHandler -> b0.c:
    java.lang.String TAG -> i
    android.util.SparseIntArray mJoystickIds -> a
    int lastSeenToolType -> h
    android.util.SparseArray mJoysticksDevices -> b
    android.view.GestureDetector gestureDetector -> e
    org.godotengine.godot.GodotRenderView mRenderView -> c
    android.view.ScaleGestureDetector scaleGestureDetector -> f
    org.godotengine.godot.input.GodotGestureHandler godotGestureHandler -> g
    android.hardware.input.InputManager mInputManager -> d
    int getGodotButton(int) -> a
    1:1:boolean org.godotengine.godot.input.GodotInputHandler.handleMotionEvent(int,int,int,float,float,float,float,boolean):0:0 -> b
    1:1:boolean handleMotionEvent(int,int,int,float,float,boolean):0 -> b
    2:2:boolean org.godotengine.godot.input.GodotInputHandler.handleTouchEvent(int,float,float,boolean):0:0 -> b
    2:2:boolean org.godotengine.godot.input.GodotInputHandler.handleMotionEvent(int,int,int,float,float,float,float,boolean):0 -> b
    2:2:boolean handleMotionEvent(int,int,int,float,float,boolean):0 -> b
    1:1:boolean org.godotengine.godot.input.GodotInputHandler.isMouseEvent(android.view.MotionEvent):0:0 -> c
    1:1:boolean handleMotionEvent(android.view.MotionEvent):0 -> c
    2:2:boolean handleMotionEvent(android.view.MotionEvent):0:0 -> c
    boolean handleMouseEvent(int,int,float,float,float,float,boolean,boolean) -> d
    boolean handleMouseEvent(android.view.MotionEvent) -> e
    boolean handleTouchEvent(int,int,int,float[],boolean) -> f
    boolean handleTouchEvent(android.view.MotionEvent) -> g
    boolean isKeyEventGameDevice(int) -> h
    boolean isMouseEvent(int) -> i
    boolean onGenericMotionEvent(android.view.MotionEvent) -> j
    boolean onKeyDown(int,android.view.KeyEvent) -> k
    boolean onKeyUp(int,android.view.KeyEvent) -> l
    0:65535:void org.godotengine.godot.input.GodotGestureHandler.onPointerCaptureChange(boolean):0:0 -> m
    0:65535:void onPointerCaptureChange(boolean):0 -> m
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:boolean org.godotengine.godot.input.GodotInputHandler.isMouseEvent(android.view.MotionEvent):0:0 -> n
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> n
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> n
    1:1:int org.godotengine.godot.input.GodotInputHandler.assignJoystickIdNumber(int):0:0 -> onInputDeviceAdded
    1:1:void onInputDeviceAdded(int):0 -> onInputDeviceAdded
    2:2:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
    3:3:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":7,"2":8,"3":9}}
    7:7:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
    8:8:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
    9:9:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
    4:4:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
    5:5:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12}}
    10:10:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
    11:11:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
    12:12:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
    6:6:void onInputDeviceAdded(int):0:0 -> onInputDeviceAdded
org.godotengine.godot.input.GodotTextInputWrapper -> b0.d:
    org.godotengine.godot.GodotRenderView mRenderView -> a
    int $r8$clinit -> d
    boolean mHasSelection -> c
    org.godotengine.godot.input.GodotEditText mEdit -> b
    1:1:boolean org.godotengine.godot.input.GodotTextInputWrapper.isFullScreenEdit():0:0 -> onEditorAction
    1:1:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent):0 -> onEditorAction
    2:2:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent):0:0 -> onEditorAction
org.godotengine.godot.input.Joystick -> b0.e:
    java.util.List axes -> b
    android.util.SparseArray axesValues -> d
    int hatY -> f
    java.lang.String name -> a
    int hatX -> e
    boolean hasAxisHat -> c
org.godotengine.godot.io.StorageScope$Identifier -> c0.a:
    java.lang.String documentsSharedDir -> f
    java.lang.String internalAppDir -> a
    java.lang.String externalAppDir -> c
    java.lang.String internalCacheDir -> b
    java.lang.String downloadsSharedDir -> e
    java.lang.String sharedDir -> d
    1:1:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith(java.lang.String,java.lang.String,boolean):0:0 -> a
    1:1:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0 -> a
    1:1:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0 -> a
    2:2:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0:0 -> a
    3:3:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith(java.lang.String,java.lang.String,boolean):0:0 -> a
    3:3:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0 -> a
    3:3:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0 -> a
    4:4:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0:0 -> a
    5:5:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith(java.lang.String,java.lang.String,boolean):0:0 -> a
    5:5:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0 -> a
    5:5:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0 -> a
    6:6:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0:0 -> a
    7:7:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith(java.lang.String,java.lang.String,boolean):0:0 -> a
    7:7:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0 -> a
    7:7:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0 -> a
    8:8:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0:0 -> a
    9:9:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith(java.lang.String,java.lang.String,boolean):0:0 -> a
    9:9:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0 -> a
    9:9:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0 -> a
    10:10:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0:0 -> a
    11:11:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith(java.lang.String,java.lang.String,boolean):0:0 -> a
    11:11:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0 -> a
    11:11:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0 -> a
    12:12:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0:0 -> a
    13:13:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith(java.lang.String,java.lang.String,boolean):0:0 -> a
    13:13:boolean kotlin.text.StringsKt__StringsJVMKt.startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0 -> a
    13:13:org.godotengine.godot.io.StorageScope identifyStorageScope(java.lang.String):0 -> a
org.godotengine.godot.io.directory.AssetsDirectoryAccess -> d0.a:
    android.content.res.AssetManager assetManager -> a
org.godotengine.godot.io.directory.DirectoryAccessHandler -> org.godotengine.godot.io.directory.DirectoryAccessHandler:
    org.godotengine.godot.io.directory.AssetsDirectoryAccess assetsDirAccess -> a
    org.godotengine.godot.io.directory.FilesystemDirectoryAccess fileSystemDirAccess -> b
    1:1:java.lang.String org.godotengine.godot.io.directory.AssetsDirectoryAccess.getAssetsPath(java.lang.String):0:0 -> a
    1:1:boolean org.godotengine.godot.io.directory.AssetsDirectoryAccess.fileExists(java.lang.String):0 -> a
    1:1:boolean assetsFileExists(java.lang.String):0 -> a
    2:2:boolean kotlin.text.StringsKt__StringsKt.startsWith(java.lang.CharSequence,char,boolean):0:0 -> a
    2:2:boolean kotlin.text.StringsKt__StringsKt.startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object):0 -> a
    2:2:java.lang.String org.godotengine.godot.io.directory.AssetsDirectoryAccess.getAssetsPath(java.lang.String):0 -> a
    2:2:boolean org.godotengine.godot.io.directory.AssetsDirectoryAccess.fileExists(java.lang.String):0 -> a
    2:2:boolean assetsFileExists(java.lang.String):0 -> a
    3:3:java.lang.String org.godotengine.godot.io.directory.AssetsDirectoryAccess.getAssetsPath(java.lang.String):0:0 -> a
    3:3:boolean org.godotengine.godot.io.directory.AssetsDirectoryAccess.fileExists(java.lang.String):0 -> a
    3:3:boolean assetsFileExists(java.lang.String):0 -> a
    4:4:boolean org.godotengine.godot.io.directory.AssetsDirectoryAccess.fileExists(java.lang.String):0:0 -> a
    4:4:boolean assetsFileExists(java.lang.String):0 -> a
    1:1:boolean org.godotengine.godot.io.directory.FilesystemDirectoryAccess.fileExists(java.lang.String):0:0 -> b
    1:1:boolean filesystemFileExists(java.lang.String):0 -> b
    2:2:boolean org.godotengine.godot.io.file.FileAccessHandler$Companion.fileExists$lib_templateRelease(android.content.Context,org.godotengine.godot.io.StorageScope$Identifier,java.lang.String):0:0 -> b
    2:2:boolean org.godotengine.godot.io.directory.FilesystemDirectoryAccess.fileExists(java.lang.String):0 -> b
    2:2:boolean filesystemFileExists(java.lang.String):0 -> b
org.godotengine.godot.io.directory.FilesystemDirectoryAccess -> d0.b:
    android.content.Context context -> a
    org.godotengine.godot.io.StorageScope$Identifier storageScopeIdentifier -> b
org.godotengine.godot.io.file.DataAccess -> e0.a:
    java.lang.String filePath -> a
    org.godotengine.godot.io.file.DataAccess$Companion Companion -> b
    java.nio.channels.FileChannel getFileChannel() -> a
org.godotengine.godot.io.file.DataAccess$Companion -> e0.a$a:
    0:65535:void org.godotengine.godot.io.file.DataAccess$Companion.<init>():0:0 -> <init>
    0:65535:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <init>
    1:1:boolean org.godotengine.godot.io.file.MediaStoreData$Companion.fileExists(android.content.Context,java.lang.String):0:0 -> a
    1:1:boolean fileExists(org.godotengine.godot.io.StorageScope,android.content.Context,java.lang.String):0 -> a
    2:2:boolean fileExists(org.godotengine.godot.io.StorageScope,android.content.Context,java.lang.String):0:0 -> a
    3:3:boolean org.godotengine.godot.io.file.FileData$Companion.fileExists(java.lang.String):0:0 -> a
    3:3:boolean fileExists(org.godotengine.godot.io.StorageScope,android.content.Context,java.lang.String):0 -> a
    4:4:boolean fileExists(org.godotengine.godot.io.StorageScope,android.content.Context,java.lang.String):0:0 -> a
    org.godotengine.godot.io.file.DataAccess generateDataAccess(org.godotengine.godot.io.StorageScope,android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags) -> b
org.godotengine.godot.io.file.FileAccessHandler -> org.godotengine.godot.io.file.FileAccessHandler:
    android.content.Context context -> a
    android.util.SparseArray files -> c
    int lastFileId -> d
    org.godotengine.godot.io.StorageScope$Identifier storageScopeIdentifier -> b
org.godotengine.godot.io.file.FileData -> e0.b:
    org.godotengine.godot.io.file.FileData$Companion Companion -> d
    java.nio.channels.FileChannel fileChannel -> c
    0:65535:void <init>(java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0:0 -> <init>
    java.nio.channels.FileChannel getFileChannel() -> a
org.godotengine.godot.io.file.FileData$Companion -> e0.b$a:
    0:65535:void org.godotengine.godot.io.file.FileData$Companion.<init>():0:0 -> <init>
    0:65535:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <init>
org.godotengine.godot.io.file.MediaStoreData -> e0.c:
    android.net.Uri COLLECTION -> e
    java.lang.String[] PROJECTION -> f
    java.nio.channels.FileChannel fileChannel -> c
    org.godotengine.godot.io.file.MediaStoreData$Companion Companion -> d
    1:1:java.util.List org.godotengine.godot.io.file.MediaStoreData$Companion.access$queryByPath(org.godotengine.godot.io.file.MediaStoreData$Companion,android.content.Context,java.lang.String):0:0 -> <init>
    1:1:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0 -> <init>
    2:2:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0:0 -> <init>
    3:3:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.addFile(android.content.Context,java.lang.String):0:0 -> <init>
    3:3:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.access$addFile(org.godotengine.godot.io.file.MediaStoreData$Companion,android.content.Context,java.lang.String):0 -> <init>
    3:3:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0 -> <init>
    4:4:java.lang.String org.godotengine.godot.io.file.MediaStoreData$Companion.getMediaStoreDisplayName(java.lang.String):0:0 -> <init>
    4:4:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.addFile(android.content.Context,java.lang.String):0 -> <init>
    4:4:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.access$addFile(org.godotengine.godot.io.file.MediaStoreData$Companion,android.content.Context,java.lang.String):0 -> <init>
    4:4:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0 -> <init>
    5:5:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.addFile(android.content.Context,java.lang.String):0:0 -> <init>
    5:5:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.access$addFile(org.godotengine.godot.io.file.MediaStoreData$Companion,android.content.Context,java.lang.String):0 -> <init>
    5:5:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0 -> <init>
    6:6:android.net.Uri org.godotengine.godot.io.file.MediaStoreData.access$getCOLLECTION$cp():0:0 -> <init>
    6:6:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.addFile(android.content.Context,java.lang.String):0 -> <init>
    6:6:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.access$addFile(org.godotengine.godot.io.file.MediaStoreData$Companion,android.content.Context,java.lang.String):0 -> <init>
    6:6:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0 -> <init>
    7:7:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.addFile(android.content.Context,java.lang.String):0:0 -> <init>
    7:7:org.godotengine.godot.io.file.MediaStoreData$DataItem org.godotengine.godot.io.file.MediaStoreData$Companion.access$addFile(org.godotengine.godot.io.file.MediaStoreData$Companion,android.content.Context,java.lang.String):0 -> <init>
    7:7:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0 -> <init>
    8:8:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0:0 -> <init>
    9:9:android.net.Uri org.godotengine.godot.io.file.MediaStoreData$DataItem.getUri():0:0 -> <init>
    9:9:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0 -> <init>
    10:10:void <init>(android.content.Context,java.lang.String,org.godotengine.godot.io.file.FileAccessFlags):0:0 -> <init>
    java.nio.channels.FileChannel getFileChannel() -> a
org.godotengine.godot.io.file.MediaStoreData$Companion -> e0.c$a:
    0:65535:void org.godotengine.godot.io.file.MediaStoreData$Companion.<init>():0:0 -> <init>
    0:65535:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <init>
    1:1:java.lang.String kotlin.text.StringsKt__StringsJVMKt.replace(java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> a
    1:1:java.lang.String kotlin.text.StringsKt__StringsJVMKt.replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object):0 -> a
    1:1:java.lang.String getMediaStoreRelativePath(java.lang.String):0 -> a
    2:2:java.lang.String kotlin.text.StringsKt__StringsKt.trim(java.lang.String,char[]):0:0 -> a
    2:2:java.lang.String getMediaStoreRelativePath(java.lang.String):0 -> a
    3:3:int kotlin.collections.ArraysKt___ArraysKt.indexOf(char[],char):0:0 -> a
    3:3:boolean kotlin.collections.ArraysKt___ArraysKt.contains(char[],char):0 -> a
    3:3:java.lang.String kotlin.text.StringsKt__StringsKt.trim(java.lang.String,char[]):0 -> a
    3:3:java.lang.String getMediaStoreRelativePath(java.lang.String):0 -> a
    4:4:java.lang.String kotlin.text.StringsKt__StringsKt.trim(java.lang.String,char[]):0:0 -> a
    4:4:java.lang.String getMediaStoreRelativePath(java.lang.String):0 -> a
    5:5:java.lang.String getMediaStoreRelativePath(java.lang.String):0:0 -> a
    1:1:android.net.Uri org.godotengine.godot.io.file.MediaStoreData.access$getCOLLECTION$cp():0:0 -> b
    1:1:java.util.List queryByPath(android.content.Context,java.lang.String):0 -> b
    2:2:java.lang.String[] org.godotengine.godot.io.file.MediaStoreData.access$getPROJECTION$cp():0:0 -> b
    2:2:java.util.List queryByPath(android.content.Context,java.lang.String):0 -> b
    3:3:java.lang.String org.godotengine.godot.io.file.MediaStoreData$Companion.getMediaStoreDisplayName(java.lang.String):0:0 -> b
    3:3:java.lang.String[] org.godotengine.godot.io.file.MediaStoreData$Companion.getSelectionByPathArguments(java.lang.String):0 -> b
    3:3:java.util.List queryByPath(android.content.Context,java.lang.String):0 -> b
    4:4:java.lang.String[] org.godotengine.godot.io.file.MediaStoreData$Companion.getSelectionByPathArguments(java.lang.String):0:0 -> b
    4:4:java.util.List queryByPath(android.content.Context,java.lang.String):0 -> b
    5:5:java.util.List queryByPath(android.content.Context,java.lang.String):0:0 -> b
    6:6:java.util.List org.godotengine.godot.io.file.MediaStoreData$Companion.dataItemFromCursor(android.database.Cursor):0:0 -> b
    6:6:java.util.List queryByPath(android.content.Context,java.lang.String):0 -> b
    7:7:android.net.Uri org.godotengine.godot.io.file.MediaStoreData.access$getCOLLECTION$cp():0:0 -> b
    7:7:java.util.List org.godotengine.godot.io.file.MediaStoreData$Companion.dataItemFromCursor(android.database.Cursor):0 -> b
    7:7:java.util.List queryByPath(android.content.Context,java.lang.String):0 -> b
    8:8:java.util.List org.godotengine.godot.io.file.MediaStoreData$Companion.dataItemFromCursor(android.database.Cursor):0:0 -> b
    8:8:java.util.List queryByPath(android.content.Context,java.lang.String):0 -> b
org.godotengine.godot.io.file.MediaStoreData$DataItem -> e0.c$b:
    int dateModified -> f
    long id -> a
    int mediaType -> g
    int size -> e
    java.lang.String displayName -> c
    android.net.Uri uri -> b
    java.lang.String relativePath -> d
org.godotengine.godot.plugin.GodotPlugin -> org.godotengine.godot.plugin.GodotPlugin:
    java.lang.String getPluginName() -> a
    1:1:java.util.List getPluginMethods():0:0 -> b
    1:1:void onRegisterPluginWithGodotNative():0 -> b
    2:2:java.util.Set getPluginSignals():0:0 -> b
    2:2:void onRegisterPluginWithGodotNative():0 -> b
    3:3:java.util.Set getPluginGDExtensionLibrariesPaths():0:0 -> b
    3:3:void onRegisterPluginWithGodotNative():0 -> b
    4:4:java.util.Map registerPluginWithGodotNative(java.lang.Object,java.lang.String,java.util.List,java.util.Set,java.util.Set):0:0 -> b
    4:4:void onRegisterPluginWithGodotNative():0 -> b
    5:5:void onRegisterPluginWithGodotNative():0:0 -> b
org.godotengine.godot.plugin.GodotPluginRegistry -> f0.a:
    java.util.concurrent.ConcurrentHashMap registry -> a
    org.godotengine.godot.plugin.GodotPluginRegistry instance -> b
    0:65535:void org.godotengine.godot.plugin.GodotPluginRegistry.loadPlugins(org.godotengine.godot.Godot):0:0 -> <init>
    0:65535:void <init>(org.godotengine.godot.Godot):0 -> <init>
    java.util.Collection getAllPlugins() -> a
org.godotengine.godot.plugin.SignalInfo -> f0.b:
org.godotengine.godot.plugin.UsedByGodot -> f0.c:
org.godotengine.godot.tts.GodotUtterance -> g0.a:
    int start -> h
    float rate -> e
    float pitch -> d
    int id -> f
    int offset -> g
    java.lang.String text -> a
    java.lang.String voice -> b
    int volume -> c
org.godotengine.godot.utils.BenchmarkUtils -> h0.a:
    boolean useBenchmark -> a
    java.util.concurrent.ConcurrentSkipListMap startBenchmarkFrom -> b
    java.util.concurrent.ConcurrentSkipListMap benchmarkTracker -> c
    void beginBenchmarkMeasure(java.lang.String) -> a
    void endBenchmarkMeasure(java.lang.String) -> b
org.godotengine.godot.utils.GodotNetUtils -> org.godotengine.godot.utils.GodotNetUtils:
    1:1:java.lang.String[] org.godotengine.godot.utils.PermissionsUtil.getManifestPermissions(android.app.Activity):0:0 -> <init>
    1:1:boolean org.godotengine.godot.utils.PermissionsUtil.hasManifestPermission(android.app.Activity,java.lang.String):0 -> <init>
    1:1:void <init>(android.app.Activity):0 -> <init>
    2:2:boolean org.godotengine.godot.utils.PermissionsUtil.hasManifestPermission(android.app.Activity,java.lang.String):0:0 -> <init>
    2:2:void <init>(android.app.Activity):0 -> <init>
    3:3:void <init>(android.app.Activity):0:0 -> <init>
org.godotengine.godot.utils.PermissionsUtil -> h0.b:
    int $r8$clinit -> a
    0:65535:boolean requestPermission(java.lang.String,android.app.Activity):0:0 -> a
org.godotengine.godot.utils.ProcessPhoenix -> org.godotengine.godot.utils.ProcessPhoenix:
    0:65535:void forceQuit(android.app.Activity,int):0:0 -> onCreate
    0:65535:void onCreate(android.os.Bundle):0 -> onCreate
org.godotengine.godot.vulkan.VkSurfaceView -> i0.a:
    org.godotengine.godot.vulkan.VkRenderer renderer -> b
    kotlin.Lazy vkThread$delegate -> a
    1:1:kotlin.Lazy kotlin.LazyKt__LazyJVMKt.lazy(kotlin.jvm.functions.Function0):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    2:2:void <init>(android.content.Context):0:0 -> <init>
    0:65535:void org.godotengine.godot.vulkan.VkThread.onPause():0:0 -> e
    0:65535:void onPause():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    0:65535:void org.godotengine.godot.vulkan.VkThread.onResume():0:0 -> f
    0:65535:void onResume():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    0:65535:void org.godotengine.godot.vulkan.VkThread.queueEvent(java.lang.Runnable):0:0 -> g
    0:65535:void queueOnVkThread(java.lang.Runnable):0 -> g
    0:65535:void org.godotengine.godot.vulkan.VkSurfaceView$Companion.checkState(boolean,java.lang.Object):0:0 -> h
    0:65535:void startRenderer(org.godotengine.godot.vulkan.VkRenderer):0 -> h
    0:65535:void org.godotengine.godot.vulkan.VkThread.onSurfaceChanged(int,int):0:0 -> surfaceChanged
    0:65535:void surfaceChanged(android.view.SurfaceHolder,int,int,int):0 -> surfaceChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    0:65535:void org.godotengine.godot.vulkan.VkThread.onSurfaceDestroyed():0:0 -> surfaceDestroyed
    0:65535:void surfaceDestroyed(android.view.SurfaceHolder):0 -> surfaceDestroyed
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
org.godotengine.godot.vulkan.VkSurfaceView$vkThread$2 -> i0.a$a:
    org.godotengine.godot.vulkan.VkSurfaceView this$0 -> a
    1:1:org.godotengine.godot.vulkan.VkThread org.godotengine.godot.vulkan.VkSurfaceView$vkThread$2.invoke():0:0 -> a
    1:1:java.lang.Object invoke():0 -> a
    2:2:org.godotengine.godot.vulkan.VkRenderer org.godotengine.godot.vulkan.VkSurfaceView.access$getRenderer$p(org.godotengine.godot.vulkan.VkSurfaceView):0:0 -> a
    2:2:org.godotengine.godot.vulkan.VkThread org.godotengine.godot.vulkan.VkSurfaceView$vkThread$2.invoke():0 -> a
    2:2:java.lang.Object invoke():0 -> a
    3:3:org.godotengine.godot.vulkan.VkThread org.godotengine.godot.vulkan.VkSurfaceView$vkThread$2.invoke():0:0 -> a
    3:3:java.lang.Object invoke():0 -> a
    4:4:void kotlin.jvm.internal.Intrinsics.throwUninitializedProperty(java.lang.String):0:0 -> a
    4:4:void kotlin.jvm.internal.Intrinsics.throwUninitializedPropertyAccessException(java.lang.String):0 -> a
    4:4:org.godotengine.godot.vulkan.VkThread org.godotengine.godot.vulkan.VkSurfaceView$vkThread$2.invoke():0 -> a
    4:4:java.lang.Object invoke():0 -> a
org.godotengine.godot.vulkan.VkThread -> i0.b:
    int height -> l
    org.godotengine.godot.vulkan.VkSurfaceView vkSurfaceView -> a
    boolean surfaceChanged -> i
    boolean hasSurface -> j
    int width -> k
    java.lang.String TAG -> m
    java.util.concurrent.locks.ReentrantLock lock -> d
    java.util.ArrayList eventQueue -> c
    org.godotengine.godot.vulkan.VkRenderer vkRenderer -> b
    java.util.concurrent.locks.Condition lockCondition -> e
    boolean rendererInitialized -> f
    boolean rendererResumed -> g
    boolean resumed -> h
    void threadExiting() -> a
    1:1:boolean org.godotengine.godot.vulkan.VkThread.getReadyToDraw():0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void org.godotengine.godot.vulkan.VkRenderer.onVkResume():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:void org.godotengine.godot.vulkan.VkRenderer.onVkSurfaceCreated(android.view.Surface):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
    7:7:void org.godotengine.godot.vulkan.VkRenderer.onVkSurfaceChanged(android.view.Surface,int,int):0:0 -> run
    7:7:void run():0 -> run
    8:8:void run():0:0 -> run
    9:9:void org.godotengine.godot.vulkan.VkRenderer.onVkPause():0:0 -> run
    9:9:void run():0 -> run
    10:10:void run():0:0 -> run
org.godotengine.godot.xr.ovr.OvrConfigChooser -> k0.a:
    int[] CONFIG_ATTRIBS -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
org.godotengine.godot.xr.ovr.OvrContextFactory -> k0.b:
    int[] CONTEXT_ATTRIBS -> a
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> b
org.godotengine.godot.xr.ovr.OvrWindowSurfaceFactory -> k0.c:
    int[] SURFACE_ATTRIBS -> a
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> b
org.godotengine.godot.xr.regular.RegularConfigChooser -> l0.a:
    int[] s_configAttribs -> h
    int mDepthSize -> f
    int mStencilSize -> g
    int mBlueSize -> d
    int[] mValue -> a
    int mAlphaSize -> e
    int mRedSize -> b
    int mGreenSize -> c
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> b
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> c
org.godotengine.godot.xr.regular.RegularContextFactory -> l0.b:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> b
org.godotengine.godot.xr.regular.RegularFallbackConfigChooser -> l0.c:
    org.godotengine.godot.xr.regular.RegularConfigChooser fallback -> i
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> b
z.FullScreenGodotApp$$ExternalSyntheticLambda0 -> z.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.godotengine.godot.Godot org.godotengine.godot.FullScreenGodotApp$$InternalSyntheticLambda$0$9b4487449432dab0d0610d08c28c9aaa156a65666ecc29d2831923c22b3122cc$0.f$1 -> b
    org.godotengine.godot.FullScreenGodotApp org.godotengine.godot.FullScreenGodotApp$$InternalSyntheticLambda$0$9b4487449432dab0d0610d08c28c9aaa156a65666ecc29d2831923c22b3122cc$0.f$0 -> a
    void org.godotengine.godot.FullScreenGodotApp$$InternalSyntheticLambda$0$9b4487449432dab0d0610d08c28c9aaa156a65666ecc29d2831923c22b3122cc$0.<init>(org.godotengine.godot.FullScreenGodotApp,org.godotengine.godot.Godot) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.godotengine.godot.FullScreenGodotApp.lambda$onGodotForceQuit$0(org.godotengine.godot.Godot):0:0 -> run
    0:65535:void org.godotengine.godot.FullScreenGodotApp$$InternalSyntheticLambda$0$9b4487449432dab0d0610d08c28c9aaa156a65666ecc29d2831923c22b3122cc$0.run():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
z.Godot$$ExternalSyntheticLambda0 -> z.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable org.godotengine.godot.Godot$$InternalSyntheticLambda$3$f313d074a35bfb7480c8b44c0b8f7e62305cb0ff34d9af5b643d0d9cece71067$0.f$0 -> a
    void org.godotengine.godot.Godot$$InternalSyntheticLambda$3$f313d074a35bfb7480c8b44c0b8f7e62305cb0ff34d9af5b643d0d9cece71067$0.<init>(java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.godotengine.godot.Godot.lambda$alert$2(java.lang.Runnable,android.content.DialogInterface,int):0:0 -> onClick
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$3$f313d074a35bfb7480c8b44c0b8f7e62305cb0ff34d9af5b643d0d9cece71067$0.onClick(android.content.DialogInterface,int):0 -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
z.Godot$$ExternalSyntheticLambda1 -> z.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View org.godotengine.godot.Godot$$InternalSyntheticLambda$1$2177fbe6ec99ec102b26b21288aac06f7b01052e78cd7f0ab9e36a403c1de452$0.f$0 -> a
    void org.godotengine.godot.Godot$$InternalSyntheticLambda$1$2177fbe6ec99ec102b26b21288aac06f7b01052e78cd7f0ab9e36a403c1de452$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.godotengine.godot.Godot.lambda$UiChangeListener$4(android.view.View,int):0:0 -> onSystemUiVisibilityChange
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$1$2177fbe6ec99ec102b26b21288aac06f7b01052e78cd7f0ab9e36a403c1de452$0.onSystemUiVisibilityChange(int):0 -> onSystemUiVisibilityChange
      # {"id":"com.android.tools.r8.synthesized"}
z.Godot$$ExternalSyntheticLambda2 -> z.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.godotengine.godot.Godot org.godotengine.godot.Godot$$InternalSyntheticLambda$0$3ee228b2d499128914fd29cdf7138cb73313825f7c93a23921023ce083de6eeb$0.f$0 -> b
    int org.godotengine.godot.Godot$$InternalSyntheticLambda$0$3ee228b2d499128914fd29cdf7138cb73313825f7c93a23921023ce083de6eeb$0.$r8$classId -> a
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$3ee228b2d499128914fd29cdf7138cb73313825f7c93a23921023ce083de6eeb$0.<init>(org.godotengine.godot.Godot):0:0 -> <init>
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$3ee228b2d499128914fd29cdf7138cb73313825f7c93a23921023ce083de6eeb$0.$r8$init$synthetic(org.godotengine.godot.Godot):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void org.godotengine.godot.Godot.lambda$onVideoInit$0():0:0 -> run
    1:1:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$3ee228b2d499128914fd29cdf7138cb73313825f7c93a23921023ce083de6eeb$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void org.godotengine.godot.Godot.setKeepScreenOn(boolean):0:0 -> run
    2:2:void org.godotengine.godot.Godot.lambda$onVideoInit$0():0 -> run
    2:2:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$3ee228b2d499128914fd29cdf7138cb73313825f7c93a23921023ce083de6eeb$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:void org.godotengine.godot.Godot.runOnUiThread(java.lang.Runnable):0:0 -> run
    3:3:void org.godotengine.godot.Godot.setKeepScreenOn(boolean):0 -> run
    3:3:void org.godotengine.godot.Godot.lambda$onVideoInit$0():0 -> run
    3:3:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$3ee228b2d499128914fd29cdf7138cb73313825f7c93a23921023ce083de6eeb$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    4:4:void org.godotengine.godot.Godot.lambda$onVideoInit$0():0:0 -> run
    4:4:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$3ee228b2d499128914fd29cdf7138cb73313825f7c93a23921023ce083de6eeb$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
z.Godot$$ExternalSyntheticLambda3 -> z.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    float[] org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.f$0 -> b
    int org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.$r8$classId -> a
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.<init>(float[]):0:0 -> <init>
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.$r8$init$synthetic(float[]):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void org.godotengine.godot.Godot.lambda$onSensorChanged$7(float[]):0:0 -> run
    1:1:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.run$bridge():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:void org.godotengine.godot.Godot.lambda$onSensorChanged$6(float[]):0:0 -> run
    3:3:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    4:4:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.run$bridge():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    5:5:void org.godotengine.godot.Godot.lambda$onSensorChanged$5(float[]):0:0 -> run
    5:5:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    6:6:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.run$bridge():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    7:7:void org.godotengine.godot.Godot.lambda$onSensorChanged$8(float[]):0:0 -> run
    7:7:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$cc773c0800b99a03a9a94cfd538e628d01a02f4115d48fba6e643a5a16a4e03c$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
z.Godot$$ExternalSyntheticLambda4 -> z.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable org.godotengine.godot.Godot$$InternalSyntheticLambda$2$b6a6f08c886663a49452a1adcb366296bf19d1703c1e775bf87182d09ad7380e$0.f$3 -> d
    android.app.Activity org.godotengine.godot.Godot$$InternalSyntheticLambda$2$b6a6f08c886663a49452a1adcb366296bf19d1703c1e775bf87182d09ad7380e$0.f$0 -> a
    java.lang.String org.godotengine.godot.Godot$$InternalSyntheticLambda$2$b6a6f08c886663a49452a1adcb366296bf19d1703c1e775bf87182d09ad7380e$0.f$2 -> c
    java.lang.String org.godotengine.godot.Godot$$InternalSyntheticLambda$2$b6a6f08c886663a49452a1adcb366296bf19d1703c1e775bf87182d09ad7380e$0.f$1 -> b
    void org.godotengine.godot.Godot$$InternalSyntheticLambda$2$b6a6f08c886663a49452a1adcb366296bf19d1703c1e775bf87182d09ad7380e$0.<init>(android.app.Activity,java.lang.String,java.lang.String,java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.godotengine.godot.Godot.lambda$alert$3(android.app.Activity,java.lang.String,java.lang.String,java.lang.Runnable):0:0 -> run
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$2$b6a6f08c886663a49452a1adcb366296bf19d1703c1e775bf87182d09ad7380e$0.run():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
z.Godot$$ExternalSyntheticLambda5 -> z.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean org.godotengine.godot.Godot$$InternalSyntheticLambda$1$58fbee2470fdf4f87fb6e113eb64b263cc69ec670966f98d1e6993c56ac270a8$0.f$1 -> b
    org.godotengine.godot.Godot org.godotengine.godot.Godot$$InternalSyntheticLambda$1$58fbee2470fdf4f87fb6e113eb64b263cc69ec670966f98d1e6993c56ac270a8$0.f$0 -> a
    void org.godotengine.godot.Godot$$InternalSyntheticLambda$1$58fbee2470fdf4f87fb6e113eb64b263cc69ec670966f98d1e6993c56ac270a8$0.<init>(org.godotengine.godot.Godot,boolean) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.godotengine.godot.Godot.lambda$setKeepScreenOn$1(boolean):0:0 -> run
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$1$58fbee2470fdf4f87fb6e113eb64b263cc69ec670966f98d1e6993c56ac270a8$0.run():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
z.Godot$$ExternalSyntheticLambda6 -> z.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.godotengine.godot.input.GodotTextInputWrapper$$InternalSyntheticLambda$1$19ed9775c691cce6149f28e1098ed403d7267dd83ed120c3681a36bcb994fa11$0 org.godotengine.godot.input.GodotTextInputWrapper$$InternalSyntheticLambda$1$19ed9775c691cce6149f28e1098ed403d7267dd83ed120c3681a36bcb994fa11$0.INSTANCE -> c
    org.godotengine.godot.Godot$$InternalSyntheticLambda$0$f2e3e1e071b4c15b08cdc920a2cbe5665eedcee1451a92cfb3e326c5f1263d27$0 org.godotengine.godot.Godot$$InternalSyntheticLambda$0$f2e3e1e071b4c15b08cdc920a2cbe5665eedcee1451a92cfb3e326c5f1263d27$0.INSTANCE -> b
    int org.godotengine.godot.Godot$$InternalSyntheticLambda$0$f2e3e1e071b4c15b08cdc920a2cbe5665eedcee1451a92cfb3e326c5f1263d27$0.$r8$classId -> a
    void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$f2e3e1e071b4c15b08cdc920a2cbe5665eedcee1451a92cfb3e326c5f1263d27$0.$r8$clinit$synthetic() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$f2e3e1e071b4c15b08cdc920a2cbe5665eedcee1451a92cfb3e326c5f1263d27$0.<init>():0:0 -> <init>
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$f2e3e1e071b4c15b08cdc920a2cbe5665eedcee1451a92cfb3e326c5f1263d27$0.$r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.godotengine.godot.input.GodotTextInputWrapper.lambda$onEditorAction$0():0:0 -> run
    0:65535:void org.godotengine.godot.Godot$$InternalSyntheticLambda$0$f2e3e1e071b4c15b08cdc920a2cbe5665eedcee1451a92cfb3e326c5f1263d27$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
z.GodotGLRenderView$$ExternalSyntheticLambda0 -> z.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.godotengine.godot.GodotGLRenderView org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.f$0 -> b
    int org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.$r8$classId -> a
    0:65535:void org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.<init>(org.godotengine.godot.GodotGLRenderView):0:0 -> <init>
    0:65535:void org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.$r8$init$synthetic(org.godotengine.godot.GodotGLRenderView):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void org.godotengine.godot.GodotGLRenderView.lambda$onResume$0():0:0 -> run
    1:1:void org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void org.godotengine.godot.gl.GodotRenderer.onActivityResumed():0:0 -> run
    2:2:void org.godotengine.godot.GodotGLRenderView.lambda$onResume$0():0 -> run
    2:2:void org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:void org.godotengine.godot.GodotGLRenderView.lambda$onResume$0():0:0 -> run
    3:3:void org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    4:4:void org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.run$bridge():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    5:5:void org.godotengine.godot.GodotGLRenderView.lambda$onPause$1():0:0 -> run
    5:5:void org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    6:6:void org.godotengine.godot.gl.GodotRenderer.onActivityPaused():0:0 -> run
    6:6:void org.godotengine.godot.GodotGLRenderView.lambda$onPause$1():0 -> run
    6:6:void org.godotengine.godot.GodotGLRenderView$$InternalSyntheticLambda$0$105b79478dfea6f95185b937533d5f7d15543d690a7bc808140bdf3fef7f3acc$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
z.GodotVulkanRenderView$$ExternalSyntheticLambda0 -> z.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    org.godotengine.godot.GodotVulkanRenderView org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.f$0 -> b
    int org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.$r8$classId -> a
    0:65535:void org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.<init>(org.godotengine.godot.GodotVulkanRenderView):0:0 -> <init>
    0:65535:void org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.$r8$init$synthetic(org.godotengine.godot.GodotVulkanRenderView):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void org.godotengine.godot.GodotVulkanRenderView.lambda$onResume$0():0:0 -> run
    1:1:void org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void org.godotengine.godot.vulkan.VkRenderer.onVkResume():0:0 -> run
    2:2:void org.godotengine.godot.GodotVulkanRenderView.lambda$onResume$0():0 -> run
    2:2:void org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:void org.godotengine.godot.GodotVulkanRenderView.lambda$onResume$0():0:0 -> run
    3:3:void org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    4:4:void org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.run$bridge():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    5:5:void org.godotengine.godot.GodotVulkanRenderView.lambda$onPause$1():0:0 -> run
    5:5:void org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    6:6:void org.godotengine.godot.vulkan.VkRenderer.onVkPause():0:0 -> run
    6:6:void org.godotengine.godot.GodotVulkanRenderView.lambda$onPause$1():0 -> run
    6:6:void org.godotengine.godot.GodotVulkanRenderView$$InternalSyntheticLambda$0$3064663a5e89f91f73a8047c5b674db6b7bebb9a2dc45c6eaf76f9591ba236e7$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
